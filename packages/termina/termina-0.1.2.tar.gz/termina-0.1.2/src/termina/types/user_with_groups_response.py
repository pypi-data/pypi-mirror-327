# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import pydantic
import typing
import datetime as dt
from .group_response import GroupResponse
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class UserWithGroupsResponse(UniversalBaseModel):
    name: str = pydantic.Field()
    """
    The name of the user
    """

    email: str = pydantic.Field()
    """
    The email address of the user
    """

    thumbnail: typing.Optional[str] = pydantic.Field(default=None)
    """
    The thumbnail URL of the user
    """

    id: int
    created_at: typing.Optional[dt.datetime] = None
    updated_at: typing.Optional[dt.datetime] = None
    is_archived: typing.Optional[bool] = None
    super_user: typing.Optional[bool] = None
    api_key_final_characters: typing.Optional[str] = None
    groups: typing.Optional[typing.List[GroupResponse]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
