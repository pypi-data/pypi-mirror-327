from __future__ import annotations
from typing import Any, Iterator, TypeVar

import numpy as np
from numpy.typing import ArrayLike, NDArray

T = TypeVar('T', bound=float | NDArray[Any])

class Uncertainty:
    u: NDArray[Any]

    def __init__(
        self,
        uncert: float | ArrayLike,
        full: float | ArrayLike | None = None
    ) -> None: ...

    def get_significant_digit(self) -> int | NDArray[np.integer[Any]]: ...
    def get_value(self) -> NDArray[Any]: ...
    def get_rounded_value(self) -> NDArray[Any]: ...
    def is_array_type(self) -> bool: ...

    def as_simple_list(self) -> Uncertainty | list[Uncertainty]: ...

    @classmethod
    def from_simple_list(cls, items: list[Uncertainty]) -> Uncertainty: ...

    def __iter__(self) -> Iterator[Uncertainty]: ...
    def __getitem__(self, idx: int | slice) -> Uncertainty: ...
    def __setitem__(self, idx: int | slice, value: float | Uncertainty) -> None: ...
    def __delitem__(self, idx: int | slice) -> None: ...
    def __len__(self) -> int: ...

    def extend(self, other: Uncertainty | ArrayLike) -> None: ...
    def append(self, other: float | Uncertainty) -> None: ...

    def __str__(self) -> str: ...
    def __repr__(self) -> str: ...
    def _repr_pretty_(self, p: Any, cycle: bool) -> None: ...

    def add_uncert(self, other: Uncertainty | float | ArrayLike , r: float = 0.0) -> Uncertainty: ...

    def __add__(self, other: Uncertainty | float | ArrayLike) -> Uncertainty: ...
    def __radd__(self, other: float | ArrayLike) -> Uncertainty: ...
    def __iadd__(self, other: Uncertainty | float | ArrayLike) -> Uncertainty: ...

    def __mul__(self, other: float | ArrayLike) -> Uncertainty: ...
    def __rmul__(self, other: float | ArrayLike) -> Uncertainty: ...
    def __imul__(self, other: float | ArrayLike) -> Uncertainty: ...

    def __truediv__(self, other: float | ArrayLike) -> Uncertainty: ...
    def __itruediv__(self, other: float | ArrayLike) -> Uncertainty: ...

    def __floordiv__(self, other: float | ArrayLike) -> Uncertainty: ...
    def __ifloordiv__(self, other: float | ArrayLike) -> Uncertainty: ...

    def __int__(self) -> int: ...
    def __float__(self) -> float: ...

    def __lt__(self, other: Any) -> bool: ...
    def __le__(self, other: Any) -> bool: ...
    def __eq__(self, other: Any) -> bool: ...
    def __ne__(self, other: Any) -> bool: ...
    def __gt__(self, other: Any) -> bool: ...
    def __ge__(self, other: Any) -> bool: ...
