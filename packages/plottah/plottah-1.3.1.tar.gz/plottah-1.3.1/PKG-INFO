Metadata-Version: 2.3
Name: plottah
Version: 1.3.1
Summary: Plottah: Univariate Analysis
Author: Niels Ota
Requires-Python: >=3.11,<4.0
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Requires-Dist: jupyter (>=1.0.0,<2.0.0)
Requires-Dist: kaleido (==0.2.1)
Requires-Dist: loguru (>=0.7.3,<0.8.0)
Requires-Dist: mypy (>=1.14.1,<2.0.0)
Requires-Dist: numpy (>=1.26.3,<2.0.0)
Requires-Dist: pandas (>=2.2.0,<3.0.0)
Requires-Dist: plotly (>=5.18.0,<6.0.0)
Requires-Dist: pre-commit (>=4.1.0,<5.0.0)
Requires-Dist: pydantic[dotenv] (>=2.6.1,<3.0.0)
Requires-Dist: pylint (>=3.0.3,<4.0.0)
Requires-Dist: pytest (>=8.0.0,<9.0.0)
Requires-Dist: python-pptx (>=0.6.23,<0.7.0)
Requires-Dist: pyyaml (>=6.0.1,<7.0.0)
Requires-Dist: ruff (>=0.9.4,<0.10.0)
Requires-Dist: scikit-learn (>=1.4.0,<2.0.0)
Requires-Dist: seaborn (>=0.13.2,<0.14.0)
Requires-Dist: tqdm (>=4.66.1,<5.0.0)
Description-Content-Type: text/markdown

*Copyright Â© 2024 by Boston Consulting Group. All rights reserved*
# SmartBanking Plotting tool

## Setup

### Requirements

* Python (>=3.8)

### Development environment

Clone the repo, give name plotting_analyis
```shell
git clone git@github.com:nielsota/plottah.git plotting_analysis
```

CD into the directory
```shell
cd plotting_analysis
```

Create a virtual environment by running:

```shell
python -m venv venv
```

The virtual environment should be activated every time you start a new shell session before running subsequent commands:

> On Linux/MacOS:
> ```shell
> source venv/bin/activate
> ```
> On Windows (bash/cmd):
> ```shell
> venv/Scripts/activate
> ```
> On Windows (ps):
> ```shell
> venv\Scripts\activate
> ```
Make sure you have the latest pip version
```shell
python -m pip install --upgrade pip
```

Then install the packages listed in the requirements.txt
```shell
pip install -r requirements.txt
```

Then install the repository locally
```shell
pip install -e .
```

Next, update the config.yaml how you see fit, and then to generate the images run:
```shell
python -m plottah
```

See notebooks for examples on how to run code inline during development

