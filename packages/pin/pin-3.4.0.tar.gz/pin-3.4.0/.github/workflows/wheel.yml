name: Test Wheel packaging

on: ["push", "pull_request"]

env:
  CMEEL_JOBS: 1
  CMEEL_LOG_LEVEL: 'DEBUG'
  CMEEL_TEST_JOBS: 1

jobs:
  build:
    name: "Build python ${{ matrix.python-version }} on ${{ matrix.os }}"
    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-latest"]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: setup
        run: |
          python -m pip install -U pip
          python -m pip install wheel
      - name: build cmeel wheel
        run: python -m pip wheel -vw wh .
      - uses: actions/upload-artifact@v3
        with:
          path: wh

  test:
    needs: ["build"]
    name: "Test ${{ matrix.python-version }} on ${{ matrix.os }}"
    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-latest"]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    steps:
      - uses: actions/download-artifact@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: setup
        run: |
          python -m pip install -U pip
          python -m pip install wheel simple503
          python -m simple503 --sort --base-url "${{ github.workspace }}/artifact" artifact
      - name: install wheel
        run: python -m pip install -i "file:///${{ github.workspace }}/artifact" pin
      - name: test
        run: >
          python -c "import pinocchio;
          assert str(pinocchio.SE3.Identity().inverse()) == '  R =\n1 0 0\n0 1 0\n0 0 1\n  p = -0 -0 -0\n'"
        env:
          PYTHONWARNINGS: error
