[project]
name = "exratepy"
version = "0.1.0"
description = "Python wrapper for fawazahmed0's exchange-api."
readme = "README.md"
authors = [{ name = "Akshay Prabhu", email = "prabhuakshay9@yahoo.com" }]
requires-python = ">=3.12"
dependencies = ["loguru>=0.7.3", "pydantic>=2.10.6", "requests>=2.32.3"]

[project.scripts]
python-project = "exratepy:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]

[dependency-groups]
dev = [
    "mypy",
    "pre-commit>=4.1.0",
    "pytest>=8.3.4",
    "ruff>=0.9.6",
    "types-requests>=2.32.0.20241016",
]

[tool.mypy]
exclude = []
pretty = true
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true
warn_no_return = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
plugins = ["pydantic.mypy"]

[tool.ruff]
line-length = 120
indent-width = 4
target-version = "py312"

[tool.ruff.format]
quote-style = "double"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "E501",   # line-too-long
    "C408",   # unnecessary-collection-call,
    "D401",   # Checks mood of docstring (?)
    "COM812", # Conflicts with formatter
    "RUF010", # str(x) is superior to x!s
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "S101", # Does not allow assert. Need to assert for pytest.
]
