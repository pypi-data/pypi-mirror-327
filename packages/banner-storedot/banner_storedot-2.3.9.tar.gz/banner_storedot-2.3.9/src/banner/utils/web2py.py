import re
import inspect
from typing import Union
from numbers import Number

from pandas import DataFrame, Series, NA

from banner.utils.pandas import series_to_table_df
from banner.utils.misc import to_sql_range

REPRESENT_LABEL = '_representation'

def experiments_to_sql(table: str, experiments: Union[list, Number, str] = []):
    if experiments and not isinstance(experiments, str):
        experiments = to_sql_range(experiments, 'experiments', table, 'REGEXP')

    return experiments

def templates_to_sql(test_template_table: str, templates: Union[list, Number, str] = []):
    if templates and not isinstance(templates, str):
        templates = to_sql_range(templates, 'id', test_template_table)

    return templates

def tests_to_sql(test_table: str, tests: Union[list, Number, str] = []):
    if tests and not isinstance(tests, str):
        tests = to_sql_range(tests, 'id', test_table)

    return tests

def cells_to_sql(table: str, cells: Union[list, Number, str] = []):
    if cells and not isinstance(cells, str):
        cells = to_sql_range(cells, 'id', table)

    return cells

def parse_w2p_to_mysql_query(query: str):
    # Special Case w2p operators: starts with, ends with, contains, not contains
    # Split but keep starts with, ends with as a single entry!!
    _query = list(
        map(
            str.strip,
            filter(
                None, 
                re.split(
                    '(\Wstarts with)|(\Wends with)| ', 
                    query
                )
            )
        )
    )
    
    for index, item in enumerate(zip(_query, _query[1:])):
        first, second = item
        
        if first in ('starts with', 'ends with', 'contains') and __check_valid_str_literal(second):
        
            _query[index] = 'LIKE'
            
            if first == 'starts with':
                _query[index + 1] = second[:1] + '%' + second[1:]

            elif first == 'ends with':
                _query[index + 1] = second[:-1] + '%' + second[-1:]

            else:
                _query[index + 1] = second[:1] + '%' + second[1:-1] + '%' + second[-1:]
    
    return ' '.join(_query)

def __check_valid_str_literal(literal: str):
    if len(literal) < 2:
        return False

    if not literal.startswith('\'') and not literal.startswith('\"'):
        return False
    
    if not literal.endswith('\'') and not literal.endswith('\"'):
        return False

    return True

def represent(table: DataFrame):
    try:
        _table_name = table._tables[0] # represents as a single table!

        _table_represent = REPRESENTS[_table_name]
        
        for column in table.columns:
            _column = LABEL_TO_COLUMN.get(column, column)
            
            if _column in _table_represent:
                table[column + REPRESENT_LABEL] = __represent_column(table, _column, _table_represent[_column])
                
    except (AttributeError, IndexError, KeyError, TypeError) as e:
        print(e)
        pass
    
    return table

def __represent_column(table: DataFrame, column: str, represent: callable):
    args = _represent_columns(represent)

    # Adjust columns(args) by column/label
    columns = [arg if arg in table.columns else COLUMN_TO_LABEL.get(arg) for arg in args]
    
    required_columns = [table[col] for col in columns]
    
    return represent(*required_columns)

def _represent_columns(represent: callable):
    return inspect.getargspec(represent).args

def _repr_by_join(column: str, table: str, join_table: str, *series):
    represent = REPRESENTS[join_table][column]

    columns = set(_represent_columns(represent))
    columns.add(column) # Column itself has to be present
    
    table_df = series_to_table_df(
        table, *series
    ).join_table(
        join_table, columns=columns, represent=True
    )
    
    target_column = f'{join_table}.{column}{REPRESENT_LABEL}'
    
    return table_df[target_column] if target_column in table_df else NA

# This is only partial, we will fill the rest as requests come
# Represent dict of columns in web2py
REPRESENTS = dict(
    pilot_pouch=dict(
        id=lambda id: 'P-' + id.astype(str),
        electrolyte_ct=lambda electrolyte_ct: _repr_by_join('id', 'pilot_pouch', 'el_batch', electrolyte_ct),
        anode_id=lambda anode_id:  _repr_by_join('id', 'pilot_pouch', 'pouch_anode', anode_id),
        cathode_id=lambda cathode_id:  _repr_by_join('id', 'pilot_pouch', 'pouch_cathode', cathode_id),
    ),
    pouch=dict(
        id=lambda id: 'SD-' + id.astype(str),
        electrolyte_ct=lambda electrolyte_ct: _repr_by_join('id', 'pouch', 'el_batch', electrolyte_ct),
        anode_id=lambda anode_id:  _repr_by_join('id', 'pouch', 'pouch_anode', anode_id),
        cathode_id=lambda cathode_id:  _repr_by_join('id', 'pouch', 'pouch_cathode', cathode_id),
    ),
    pouch_anode=dict(
        id=lambda el_batch, fraction_min, fraction_max, press, coated_sides: el_batch + '[' + fraction_min.astype(str) + '-' + fraction_max.astype(str) + '] ' + press + ' ' + coated_sides.astype(str) + 's',
        sd_batch_id=lambda sd_batch_id: 'SDA-' + sd_batch_id.astype(str),
        p_batch_id=lambda p_batch_id: 'PA-' + p_batch_id.astype(str),
    ),
    pouch_cathode=dict(
        id=lambda el_batch, fraction_min, fraction_max, press, coated_sides: el_batch + '[' + fraction_min.astype(str) + '-' + fraction_max.astype(str) + '] ' + press + ' ' + coated_sides.astype(str) + 's',
        sd_batch_id=lambda sd_batch_id: 'SDC-' + sd_batch_id.astype(str),
        p_batch_id=lambda p_batch_id: 'PC-' + p_batch_id.astype(str),
    ),
    foil=dict(
        name=lambda id, name: name + ' (id' + id.astype(str) + ')'
    ),
    cutter=dict(
        name=lambda id, name: name + ' (id' + id.astype(str) + ')'
    ),
    electrolyte=dict(
        id=lambda id: 'EL' + id.astype(str)
    ),
    el=dict(
        id=lambda id: 'EL' + id.astype(str)
    ),
    el_batch=dict(
        id=lambda el_id, subbatch, batch, id: 'EL' + el_id.astype(str) +'-' + subbatch + '-' + batch.astype(str) + ' (id' + id.astype(str) + ')'
    ),
    anode_formulation=dict(
        id=lambda id: 'AN' + id.astype(str)
    ),
    cathode_formulation=dict(
        id=lambda id: 'CN' + id.astype(str)
    ),
    sd_a_batch=dict(
        id=lambda id: 'SDA-' + id.astype(str)
    ),
    sd_c_batch=dict(
        id=lambda id: 'SDC-' + id.astype(str)
    ),
    pd_binder_batch=dict(
        id=lambda id: 'BN-' + id.astype(str)
    ),
    coin_anode=dict(
        id=lambda id: id.astype(str) + 'A'
    ),
    coin_cathode=dict(
        id=lambda id: id.astype(str) + 'C'
    ),
    anode_batch=dict(
        id=lambda id: 'A' + id.astype(str),
        formulation=lambda formulation: 'AN' + formulation.astype(str),
        sd_batch_id=lambda sd_batch_id: 'SDA-' + sd_batch_id.astype(str)
    ),
    anode_el_batch=dict(
        p_slurry_batch_id=lambda p_slurry_batch_id: 'PA-' + p_slurry_batch_id.astype(str),
        slurry_batch_id=lambda slurry_batch_id: 'A' + slurry_batch_id.astype(str),
        sd_batch_id=lambda sd_batch_id: 'SDA-' + sd_batch_id.astype(str),
    ),
    cathode_batch=dict(
        id=lambda cathode_batch,: 'C' + id.astype(str),
        formulation=lambda formulation: 'CN' + formulation.astype(str),
        sd_batch_id=lambda sd_batch_id: 'SDC-' + sd_batch_id.astype(str)
    ),
    cathode_el_batch=dict(
        p_slurry_batch_id=lambda p_slurry_batch_id: 'PC-' + p_slurry_batch_id.astype(str),
        slurry_batch_id=lambda slurry_batch_id: 'C' + slurry_batch_id.astype(str),
        sd_batch_id=lambda sd_batch_id: 'SDC-' + sd_batch_id.astype(str),
    ),
)

# Merge dict
JOINS = dict(
    neware_cache=dict(
        pilot_pouch_test=dict(left=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], right=['ip', 'device', 'unit', 'channel', 'test_id'], how='left'),
        pouch_test=dict(left=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], right=['ip', 'device', 'unit', 'channel', 'test_id'], how='left'),
        augm_per_cycle=dict(left=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id', 'cycle'], right=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id', 'cycle'], how='inner'),
        ext_pouch_test=dict(left=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], right=['ip', 'device', 'unit', 'channel', 'test_id'], how='left'),
        jellyroll_test=dict(left=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], right=['ip', 'device', 'unit', 'channel', 'test_id'], how='left'),
        coin_anode_test=dict(left=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], right=['ip', 'device', 'unit', 'channel', 'test_id'], how='left'),
        coin_cathode_test=dict(left=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], right=['ip', 'device', 'unit', 'channel', 'test_id'], how='left'),
        coin_fc_test=dict(left=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], right=['ip', 'device', 'unit', 'channel', 'test_id'], how='left'),
        ct_coin_test=dict(left=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], right=['ip', 'device', 'unit', 'channel', 'test_id'], how='left'),
        bia_cell_test=dict(left=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], right=['ip', 'device', 'unit', 'channel', 'test_id'], how='left'),
        bic_cell_test=dict(left=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], right=['ip', 'device', 'unit', 'channel', 'test_id'], how='left'),
        mi_cell_test=dict(left=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], right=['ip', 'device', 'unit', 'channel', 'test_id'], how='left'),
    ),
    neware_pulses_cache=dict(
        pouch_test=dict(right=['ip', 'device', 'unit', 'channel', 'test_id'], left=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        pilot_pouch_test=dict(right=['ip', 'device', 'unit', 'channel', 'test_id'], left=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        ext_pouch_test=dict(right=['ip', 'device', 'unit', 'channel', 'test_id'], left=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        jellyroll_test=dict(right=['ip', 'device', 'unit', 'channel', 'test_id'], left=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        coin_anode_test=dict(right=['ip', 'device', 'unit', 'channel', 'test_id'], left=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        coin_cathode_test=dict(right=['ip', 'device', 'unit', 'channel', 'test_id'], left=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        coin_fc_test=dict(right=['ip', 'device', 'unit', 'channel', 'test_id'], left=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        ct_coin_test=dict(right=['ip', 'device', 'unit', 'channel', 'test_id'], left=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        bia_cell_test=dict(right=['ip', 'device', 'unit', 'channel', 'test_id'], left=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        bic_cell_test=dict(right=['ip', 'device', 'unit', 'channel', 'test_id'], left=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        mi_cell_test=dict(right=['ip', 'device', 'unit', 'channel', 'test_id'], left=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
    ),
    neware_cache_anode=dict(
        pouch_test=dict(right=['ip', 'device', 'unit', 'channel', 'test_id'], left=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        pilot_pouch_test=dict(right=['ip', 'device', 'unit', 'channel', 'test_id'], left=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        ext_pouch_test=dict(right=['ip', 'device', 'unit', 'channel', 'test_id'], left=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        jellyroll_test=dict(right=['ip', 'device', 'unit', 'channel', 'test_id'], left=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        coin_anode_test=dict(right=['ip', 'device', 'unit', 'channel', 'test_id'], left=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        coin_cathode_test=dict(right=['ip', 'device', 'unit', 'channel', 'test_id'], left=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        coin_fc_test=dict(right=['ip', 'device', 'unit', 'channel', 'test_id'], left=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        ct_coin_test=dict(right=['ip', 'device', 'unit', 'channel', 'test_id'], left=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        bia_cell_test=dict(right=['ip', 'device', 'unit', 'channel', 'test_id'], left=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        bic_cell_test=dict(right=['ip', 'device', 'unit', 'channel', 'test_id'], left=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        mi_cell_test=dict(right=['ip', 'device', 'unit', 'channel', 'test_id'], left=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
    ),
    pouch=dict(
        pouch_test=dict(left='id', right='pouch_id', how='inner'),
        anode_batch=dict(left='anode_batch_id', right='id', how='left'),
        sd_a_batch=dict(left='sd_a_batch_id', right='id', how='left'),
        sd_c_batch=dict(left='sd_c_batch_id', right='id', how='left'),
        pouch_anode=dict(left='anode_id', right='id', how='left'),
        cathode_batch=dict(left='cathode_batch_id', right='id', how='left'),
        pouch_cathode=dict(left='cathode_id', right='id', how='left'),
        el_batch=dict(left='electrolyte_ct', right='id', how='left'),
        fa_analysis=dict(left='id', right='pouch_id', how='left'),
        storage_analysis=dict(left='id', right='cell_id', how='left'),
        electrolyte_batch=dict(left='electrolyte', right='id', how='left'),
        el=dict(left='electrolyte_type', right='id', how='left'),
        track_locations=dict(left='location', right='barcode', how='left'),
    ),
    pouch_test=dict(
        pouch=dict(left='pouch_id', right='id', how='left'),
        pouch_test_template=dict(left='test_type_id', right='id', how='left'),
        neware_cache=dict(left=['ip', 'device', 'unit', 'channel', 'test_id'], right=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        neware_pulses_cache=dict(left=['ip', 'device', 'unit', 'channel', 'test_id'], right=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        neware_cache_anode=dict(left=['ip', 'device', 'unit', 'channel', 'test_id'], right=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
    ),
    pouch_test_template=dict(
        pouch_test=dict(right='test_type_id', left='id', how='left'),
    ),
    pilot_pouch=dict(
        pilot_pouch_test=dict(left='id', right='pilot_pouch_id', how='left'),
        pilot_c_batch=dict(left='p_cathode_batch_id', right='id', how='left'),
        pilot_a_batch=dict(left='p_anode_batch_id', right='id', how='left'),
        anode_el_batch=dict(left='anode_el_batch_id', right='id', how='left'),
        cathode_el_batch=dict(left='cathode_el_batch_id', right='id', how='left'),
        pouch_anode=dict(left='anode_id', right='id', how='left'),
        pouch_cathode=dict(left='cathode_id', right='id', how='left'),
        el_batch=dict(left='electrolyte_ct', right='id', how='left'),
        fa_analysis=dict(left='id', right='pilot_pouch_id', how='left'),
        storage_analysis=dict(left='id', right='cell_id', how='left'),
        electrolyte_batch=dict(left='electrolyte', right='id', how='left'),
        el=dict(left='electrolyte_type', right='id', how='left'),
        sd_a_batch=dict(left='sd_a_batch_id', right='id', how='left'),
        sd_c_batch=dict(left='sd_c_batch_id', right='id', how='left'),
        track_locations=dict(left='location', right='barcode', how='left'),
    ),
    pilot_pouch_test=dict(
        pilot_pouch_test_template=dict(left='test_type_id', right='id', how='left'),
        pilot_pouch=dict(left='pilot_pouch_id', right='id', how='left'),
        neware_cache=dict(left=['ip', 'device', 'unit', 'channel', 'test_id'], right=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        neware_pulses_cache=dict(left=['ip', 'device', 'unit', 'channel', 'test_id'], right=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        neware_cache_anode=dict(left=['ip', 'device', 'unit', 'channel', 'test_id'], right=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
    ),
    ext_pouch=dict(
        ext_pouch_test=dict(left='id', right='ext_pouch_id', how='left'),
        pilot_c_batch=dict(left='p_cathode_batch_id', right='id', how='left'),
        pilot_a_batch=dict(left='p_anode_batch_id', right='id', how='left'),
        anode_el_batch=dict(left='anode_el_batch_id', right='id', how='left'),
        cathode_el_batch=dict(left='cathode_el_batch_id', right='id', how='left'),
        pouch_anode=dict(left='anode_id', right='id', how='left'),
        pouch_cathode=dict(left='cathode_id', right='id', how='left'),
        el_batch=dict(left='electrolyte_ct', right='id', how='left'),
        fa_analysis=dict(left='id', right='ext_pouch_id', how='left'),
        storage_analysis=dict(left='id', right='cell_id', how='left'),
        electrolyte_batch=dict(left='electrolyte', right='id', how='left'),
        el=dict(left='electrolyte_type', right='id', how='left'),
        sd_a_batch=dict(left='sd_a_batch_id', right='id', how='left'),
        sd_c_batch=dict(left='sd_c_batch_id', right='id', how='left'),
        ext_a_batch=dict(left='anode_batch_id', right='id', how='left'),
        ext_c_batch=dict(left='cathode_batch_id', right='id', how='left'),
    ),
    ext_pouch_test=dict(
        ext_pouch_test_template=dict(left='test_type_id', right='id', how='left'),
        ext_pouch=dict(left='ext_pouch_id', right='id', how='left'),
        neware_cache=dict(left=['ip', 'device', 'unit', 'channel', 'test_id'], right=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        neware_pulses_cache=dict(left=['ip', 'device', 'unit', 'channel', 'test_id'], right=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        neware_cache_anode=dict(left=['ip', 'device', 'unit', 'channel', 'test_id'], right=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
    ),
    jellyroll=dict(
        jellyroll_test=dict(left='id', right='jellyroll_id', how='left'),
        fa_analysis=dict(left='id', right='pouch_id', how='left'),
        pilot_c_batch=dict(left='p_cathode_batch_id', right='id', how='left'),
        pilot_a_batch=dict(left='p_anode_batch_id', right='id', how='left'),
        jellyroll_anode=dict(left='anode_id', right='id', how='left'),
        jellyroll_cathode=dict(left='cathode_id', right='id', how='left'),
        el_batch=dict(left='electrolyte_ct', right='id', how='left'),
        electrolyte_batch=dict(left='electrolyte', right='id', how='left'),
        el=dict(left='electrolyte_type', right='id', how='left'),
        sd_a_batch=dict(left='sd_a_batch_id', right='id', how='left'),
        sd_c_batch=dict(left='sd_c_batch_id', right='id', how='left'),
    ),
    jellyroll_test=dict(
        jellyroll_test_template=dict(left='test_type_id', right='id', how='left'),
        jellyroll=dict(left='jellyroll_id', right='id', how='left'),
        neware_cache=dict(left=['ip', 'device', 'unit', 'channel', 'test_id'], right=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        neware_pulses_cache=dict(left=['ip', 'device', 'unit', 'channel', 'test_id'], right=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        neware_cache_anode=dict(left=['ip', 'device', 'unit', 'channel', 'test_id'], right=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
    ),
    coin_anode=dict(
        coin_anode_test=dict(left='id', right='coin_anode_id', how='left'),
        anode_batch=dict(left='batch_id', right='id', how='left'),
        anode_el_batch=dict(left='el_batch_id', right='id', how='left'),
        electrolyte_batch=dict(left='electrolyte', right='id', how='left'),
        el=dict(left='electrolyte_type', right='id', how='left'),
        sd_a_batch=dict(left='sd_a_batch_id', right='id', how='left'),
    ),
    coin_anode_test=dict(
        coin_anode_test_template=dict(left='test_type_id', right='id', how='left'),
        coin_anode=dict(left='coin_anode_id', right='id', how='left'),
        neware_cache=dict(left=['ip', 'device', 'unit', 'channel', 'test_id'], right=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        neware_pulses_cache=dict(left=['ip', 'device', 'unit', 'channel', 'test_id'], right=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        neware_cache_anode=dict(left=['ip', 'device', 'unit', 'channel', 'test_id'], right=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
    ),
    coin_cathode=dict(
        coin_cathode_test=dict(left='id', right='coin_cathode_id', how='left'),
        cathode_batch=dict(left='batch_id', right='id', how='left'),
        cathode_el_batch=dict(left='el_batch_id', right='id', how='left'),
        electrolyte_batch=dict(left='electrolyte', right='id', how='left'),
        el=dict(left='electrolyte_type', right='id', how='left'),
        sd_c_batch=dict(left='sd_c_batch_id', right='id', how='left'),
    ),
    coin_cathode_test=dict(
        coin_cathode_test_template=dict(left='test_type_id', right='id', how='left'),
        coin_cathode=dict(left='coin_cathode_id', right='id', how='left'),
        neware_cache=dict(left=['ip', 'device', 'unit', 'channel', 'test_id'], right=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        neware_pulses_cache=dict(left=['ip', 'device', 'unit', 'channel', 'test_id'], right=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        neware_cache_anode=dict(left=['ip', 'device', 'unit', 'channel', 'test_id'], right=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
    ),
    coin_fc=dict(
        coin_fc_test=dict(left='id', right='coin_fc_id', how='left'),
        anode_batch=dict(left='anode_batch_id', right='id', how='left'),
        anode_el_batch=dict(left='anode_el_batch_id', right='id', how='left'),
        cathode_batch=dict(left='cathode_batch_id', right='id', how='left'),
        cathode_el_batch=dict(left='cathode_el_batch_id', right='id', how='left'),
        electrolyte_batch=dict(left='electrolyte', right='id', how='left'),
        el=dict(left='electrolyte_type', right='id', how='left'),
        sd_a_batch=dict(left='sd_a_batch_id', right='id', how='left'),
        sd_c_batch=dict(left='sd_c_batch_id', right='id', how='left'),
    ),
    coin_fc_test=dict(
        coin_fc_test_template=dict(left='test_type_id', right='id', how='left'),
        coin_fc=dict(left='coin_fc_id', right='id', how='left'),
        neware_cache=dict(left=['ip', 'device', 'unit', 'channel', 'test_id'], right=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        neware_pulses_cache=dict(left=['ip', 'device', 'unit', 'channel', 'test_id'], right=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        neware_cache_anode=dict(left=['ip', 'device', 'unit', 'channel', 'test_id'], right=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
    ),
    ct_coin=dict(
        ct_coin_test=dict(left='id', right='ct_coin_id', how='left'),
    ),
    ct_coin_test=dict(
        ct_coin_test_template=dict(left='test_type_id', right='id', how='left'),
        ct_coin=dict(left='ct_coin_id', right='id', how='left'),
        neware_cache=dict(left=['ip', 'device', 'unit', 'channel', 'test_id'], right=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        neware_pulses_cache=dict(left=['ip', 'device', 'unit', 'channel', 'test_id'], right=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        neware_cache_anode=dict(left=['ip', 'device', 'unit', 'channel', 'test_id'], right=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
    ),
    bia_cell=dict(
        bia_cell_test=dict(left='id', right='bia_cell_id', how='left'),
    ),
    bia_cell_test=dict(
        bia_cell_test_template=dict(left='test_type_id', right='id', how='left'),
        bia_cell=dict(left='bia_cell_id', right='id', how='left'),
        neware_cache=dict(left=['ip', 'device', 'unit', 'channel', 'test_id'], right=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        neware_pulses_cache=dict(left=['ip', 'device', 'unit', 'channel', 'test_id'], right=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        neware_cache_anode=dict(left=['ip', 'device', 'unit', 'channel', 'test_id'], right=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
    ),
    bic_cell=dict(
        bic_cell_test=dict(left='id', right='bic_cell_id', how='left'),
    ),
    bic_cell_test=dict(
        bic_cell_test_template=dict(left='test_type_id', right='id', how='left'),
        bic_cell=dict(left='bic_cell_id', right='id', how='left'),
        neware_cache=dict(left=['ip', 'device', 'unit', 'channel', 'test_id'], right=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        neware_pulses_cache=dict(left=['ip', 'device', 'unit', 'channel', 'test_id'], right=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        neware_cache_anode=dict(left=['ip', 'device', 'unit', 'channel', 'test_id'], right=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
    ),
    mi_cell=dict(
        mi_cell_test=dict(left='id', right='mi_cell_id', how='left'),
    ),
    mi_cell_test=dict(
        mi_cell_test_template=dict(left='test_type_id', right='id', how='left'),
        mi_cell=dict(left='mi_cell_id', right='id', how='left'),
        neware_cache=dict(left=['ip', 'device', 'unit', 'channel', 'test_id'], right=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        neware_pulses_cache=dict(left=['ip', 'device', 'unit', 'channel', 'test_id'], right=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
        neware_cache_anode=dict(left=['ip', 'device', 'unit', 'channel', 'test_id'], right=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id'], how='inner'),
    ),
    augm_per_cell=dict(
        augm_per_test=dict(left='id', right='augm_per_cell', how='left'),
    ),
    augm_per_test=dict(
        augm_per_cycle=dict(left='id', right='augm_per_test', how='left'),
        augm_per_cell=dict(left='augm_per_cell', right='id', how='left'),
    ),
    augm_per_cycle=dict(
        augm_per_test=dict(left='augm_per_test', right='id', how='left'),
        neware_cache=dict(left=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id', 'cycle'], right=['ip', 'dev_uid', 'unit_id', 'chl_id', 'test_id', 'cycle'], how='inner'),
    ),
    anode_batch=dict(
        pouch=dict(right='anode_batch_id', left='id', how='left'),
        coin_anode=dict(right='batch_id', left='id', how='left'),
        coin_fc=dict(right='anode_batch_id', left='id', how='left'),
    ),  
    sd_a_batch=dict(
        pouch=dict(right='sd_a_batch_id', left='id', how='left'),
        pilot_pouch=dict(right='sd_a_batch_id', left='id', how='left'),
        ext_pouch=dict(right='sd_a_batch_id', left='id', how='left'),
        jellyroll=dict(right='sd_a_batch_id', left='id', how='left'),
        coin_anode=dict(right='sd_a_batch_id', left='id', how='left'),
        coin_fc=dict(right='sd_a_batch_id', left='id', how='left'),
    ),
    pouch_anode=dict(
        pouch=dict(right='anode_id', left='id', how='left'),
        pilot_pouch=dict(right='anode_id', left='id', how='left'),
        ext_pouch=dict(right='anode_id', left='id', how='left'),
    ),
    cathode_batch=dict(
        pouch=dict(right='cathode_batch_id', left='id', how='left'),
        coin_cathode=dict(right='batch_id', left='id', how='left'),
        coin_fc=dict(right='cathode_batch_id', left='id', how='left'),
    ),
    sd_c_batch=dict(
        pouch=dict(right='sd_c_batch_id', left='id', how='left'),
        pilot_pouch=dict(right='sd_c_batch_id', left='id', how='left'),
        ext_pouch=dict(right='sd_c_batch_id', left='id', how='left'),
        jellyroll=dict(right='sd_c_batch_id', left='id', how='left'),
        coin_cathode=dict(right='sd_c_batch_id', left='id', how='left'),
        coin_fc=dict(right='sd_c_batch_id', left='id', how='left'),
    ),
    pouch_cathode=dict(
        pouch=dict(right='cathode_id', left='id', how='left'),
        pilot_pouch=dict(right='cathode_id', left='id', how='left'),
        ext_pouch=dict(right='cathode_id', left='id', how='left'),
    ),
    el_batch=dict(
        pouch=dict(right='electrolyte_ct', left='id', how='left'),
        pilot_pouch=dict(right='electrolyte_ct', left='id', how='left'),
        ext_pouch=dict(right='electrolyte_ct', left='id', how='left'),
        jellyroll=dict(right='electrolyte_ct', left='id', how='left'),
    ),
    fa_analysis=dict(
        pouch=dict(right='id', left='pouch_id', how='left'),
        pilot_pouch=dict(right='id', left='pilot_pouch_id', how='left'),
        ext_pouch=dict(right='id', left='ext_pouch_id', how='left'),
        jellyroll=dict(right='id', left='pouch_id', how='left'),
    ),
    storage_analysis=dict(
        pouch=dict(right='id', left='cell_id', how='left'),
        pilot_pouch=dict(right='id', left='cell_id', how='left'),
        ext_pouch=dict(right='id', left='cell_id', how='left'),
    ),
    electrolyte_batch=dict(
        pouch=dict(right='electrolyte', left='id', how='left'),
        pilot_pouch=dict(right='electrolyte', left='id', how='left'),
        ext_pouch=dict(right='electrolyte', left='id', how='left'),
        jellyroll=dict(right='electrolyte', left='id', how='left'),
        coin_anode=dict(right='electrolyte', left='id', how='left'),
        coin_cathode=dict(right='electrolyte', left='id', how='left'),
        coin_fc=dict(right='electrolyte', left='id', how='left'),
    ),
    pilot_c_batch=dict(
        pilot_pouch=dict(right='p_cathode_batch_id', left='id', how='left'),
        ext_pouch=dict(right='p_cathode_batch_id', left='id', how='left'),
        jellyroll=dict(right='p_cathode_batch_id', left='id', how='left'),
    ),
    pilot_a_batch=dict(
        pilot_pouch=dict(right='p_anode_batch_id', left='id', how='left'),
        ext_pouch=dict(right='p_anode_batch_id', left='id', how='left'),
        jellyroll=dict(right='p_anode_batch_id', left='id', how='left'),
    ),
    anode_el_batch=dict(
        pilot_pouch=dict(right='anode_el_batch_id', left='id', how='left'),
        ext_pouch=dict(right='anode_el_batch_id', left='id', how='left'),
        coin_anode=dict(right='el_batch_id', left='id', how='left'),
        coin_fc=dict(right='anode_el_batch_id', left='id', how='left'),
    ),
    cathode_el_batch=dict(
        pilot_pouch=dict(right='cathode_el_batch_id', left='id', how='left'),
        ext_pouch=dict(right='cathode_el_batch_id', left='id', how='left'),
        coin_cathode=dict(right='el_batch_id', left='id', how='left'),
        coin_fc=dict(right='cathode_el_batch_id', left='id', how='left'),
    ),
    pilot_pouch_test_template=dict(
        pilot_pouch_test=dict(right='test_type_id', left='id', how='left'),
    ),
    ext_pouch_test_template=dict(
        ext_pouch_test=dict(right='test_type_id', left='id', how='left'),
    ),
    jellyroll_anode=dict(
        jellyroll=dict(right='anode_id', left='id', how='left'),
    ),
    jellyroll_cathode=dict(
        jellyroll=dict(right='cathode_id', left='id', how='left'),
    ),
    jellyroll_test_template=dict(
        jellyroll_test=dict(right='test_type_id', left='id', how='left'),
    ),
    coin_anode_test_template=dict(
        coin_anode_test=dict(right='test_type_id', left='id', how='left'),
    ),
    coin_cathode_test_template=dict(
        coin_cathode_test=dict(right='test_type_id', left='id', how='left'),
    ),
    coin_fc_test_template=dict(
        coin_fc_test=dict(right='test_type_id', left='id', how='left'),
    ),
    ct_coin_test_template=dict(
        ct_coin_test=dict(right='test_type_id', left='id', how='left'),
    ),
    bia_cell_test_template=dict(
        bia_cell_test=dict(right='test_type_id', left='id', how='left'),
    ),
    bic_cell_test_template=dict(
        bic_cell_test=dict(right='test_type_id', left='id', how='left'),
    ),
    mi_cell_test_template=dict(
        mi_cell_test=dict(right='test_type_id', left='id', how='left'),
    ),
    el=dict(
        pouch=dict(right='electrolyte_type', left='id', how='left'),
        pilot_pouch=dict(right='electrolyte_type', left='id', how='left'),
        ext_pouch=dict(right='electrolyte_type', left='id', how='left'),
        jellyroll=dict(right='electrolyte_type', left='id', how='left'),
        coin_anode=dict(right='electrolyte_type', left='id', how='left'),
        coin_cathode=dict(right='electrolyte_type', left='id', how='left'),
        coin_fc=dict(right='electrolyte_type', left='id', how='left'),
    ),
    us_cell=dict(
        us_cell_test=dict(left='id', right='us_cell_id', how='inner'),
    ),
    us_cell_test=dict(
        us_cell=dict(left='us_cell_id', right='id', how='left'),
        us_cell_test_template=dict(left='test_type_id', right='id', how='left'),
    ),
    us_cell_test_template=dict(
        us_cell_test=dict(left='id', right='test_type_id', how='left'),
    ),
    material=dict(
        material_type=dict(left='type', right='id', how='left'),
    ),
)

# Column and its Label in web2py
# This is static to avoid mysql queries
# TODO PER TABLE
COLUMN_TO_LABEL = {
    'a_batch_id': 'Anode batch',
    'a_chg': 'A Chg',
    'a_dchg': 'A Dchg',
    'a_el_batch': 'resulting batch (A)',
    'a_fraction_id': 'Anode fraction',
    'a_load': 'Anode load',
    'a_load_max': 'Anode load (max)',
    'a_load_min': 'Anode load (min)',
    'ac_resistance': 'ACR before formation @1KHz [mOhm]',
    'ac_resistance_after_dg': 'ACR after degassing @1KHz [mOhm]',
    'ac_resistance_after_form': 'ACR after 1st cycle @1KHz [mOhm]',
    'ac_resistance_after_form2': 'ACR after full formation @1KHz [mOhm]',
    'ac_resistance_before_dg': 'ACR before degassing @1KHz [mOhm]',
    'ac_resistance_eol': 'ACR after EOL @1KHz [mOhm]',
    'accepted_by': 'Accepted by',
    'accepted_on': 'Accepted on',
    'acr_system_after_500': 'ACR (system) after 500 cycles [mOhm]',
    'acr_system_after_dgas': 'ACR (system) after degassing [mOhm]',
    'acr_system_after_eol': 'ACR (system) after EoL [mOhm]',
    'acr_system_after_filling': 'ACR (system) after filling [mOhm]',
    'acr_system_after_form_wp': 'ACR (system) after formation with pressure [mOhm]',
    'acr_system_after_hc_b4_dgas_wop': 'ACR (system) after HC Before DG w/o pressure [mOhm]',
    'acr_system_after_hc_b4_dgas_wp': 'ACR (system) after HC before DG w/ pressure [mOhm]',
    'acr_system_after_press': 'ACR (system) after press [mOhm]',
    'act_disperser_speed': 'Actual Disperser Speed [RPM]',
    'act_planetary_speed': 'Actual Planetary Speed [RPM]',
    'act_temperature': 'Actual Temperature [C]',
    'act_time': 'Actual Time [min]',
    'act_vacuum': 'Actual Vacuum',
    'act_weight': 'Weight [gr]',
    'action': 'Action',
    'active': 'Active',
    'active1': 'Active material 1',
    'active1_a': 'AM1 [g]',
    'active1_p': 'AM1 [%]',
    'active1_pp': 'AM1 [% of AM]',
    'active2': 'Active material 2',
    'active2_a': 'AM2 [g]',
    'active2_p': 'AM2 [%]',
    'active2_pp': 'AM2 [% of AM]',
    'active3': 'Active material 3',
    'active3_a': 'AM3 [g]',
    'active3_p': 'AM3 [%]',
    'active3_pp': 'AM3 [% of AM]',
    'active4': 'Active material 4',
    'active4_a': 'AM4 [g]',
    'active4_p': 'AM4 [%]',
    'active4_pp': 'AM4 [% of AM]',
    'active5': 'Active material 5',
    'active5_a': 'AM5 [g]',
    'active5_p': 'AM5 [%]',
    'active5_pp': 'AM5 [% of AM]',
    'active6': 'Active6 material',
    'active6_a': 'AM6 [g]',
    'active7': 'Active7 material',
    'active7_a': 'AM7 [g]',
    'actual_load': 'Actual Load [mg/cm2]',
    'additive1': 'Additive 1',
    'additive1_a': 'Additive 1 [g]',
    'additive1_amount': 'Additive 1 amount [g]',
    'additive1_p': 'Additive 1 [%]',
    'additive1_pp': 'Additive 1 [% in stock sol.]',
    'additive1_q': 'Additive #1 [wt.%]',
    'additive2': 'Additive 2',
    'additive2_a': 'Additive 2 [g]',
    'additive2_amount': 'Additive 2 amount [g]',
    'additive2_p': 'Additive 2 [%]',
    'additive2_pp': 'Additive 2 [% in stock sol.]',
    'additive2_q': 'Additive #2 [wt.%]',
    'additive3': 'Additive 3',
    'additive3_a': 'Additive 3 [g]',
    'additive3_amount': 'Additive 3 amount [g]',
    'additive3_p': 'Additive 3 [%]',
    'additive3_pp': 'Additive 3 [% in stock sol.]',
    'additive3_q': 'Additive #3 [wt.%]',
    'additive4': 'Additive #4',
    'additive4_q': 'Additive #4 [wt.%]',
    'additive5': 'Additive #4',
    'additive5_q': 'Additive #4 [wt.%]',
    'additive_in_cnt_a': 'Additive in CNT solution [g]',
    'additive_in_cnt_p': 'Additive in CNT solution [%]',
    'additives': 'Additives',
    'adhesion': 'SEM: Adhesion',
    'advanced_condition': 'Advanced Python condition',
    'agglomeration': 'SEM: Agglomeration',
    'alert1_days': '1st alert before [days]',
    'alert2_days': '2nd alert before/reminder every [days]',
    'alert_comment': 'E-mail comment',
    'alert_cycles': 'Alert sent on cycles#',
    'alert_id': 'Alert ID',
    'alert_value': 'Alert value',
    'alerts_triggered': 'Alerts triggered',
    'am': 'Batch AM',
    'am_mass': 'AM mass [mg]',
    'am_name': 'A.M. full name',
    'am_percent': 'A.M. percent',
    'amorphousness': 'SEM: Amorphousness',
    'amount': 'Amount [ml]',
    'anode_am': 'Anode AM',
    'anode_am_mass': 'Anode AM mass (effective) [mg]',
    'anode_areal_capacity': 'Anode areal capacity [mAh/cm2]',
    'anode_batch': 'Anode batch',
    'anode_batch_id': 'A slurry batch',
    'anode_calculated_cap': 'Anode calculated capacity [mAh]',
    'anode_capacity': 'Anode capacity / interface [mAh]',
    'anode_capacity_total': 'Anode total capacity [mAh]',
    'anode_cathode': 'Analyzed electrode',
    'anode_cutter': 'Anode cutter',
    'anode_el_batch_id': 'A electrode batch',
    'anode_foil': 'Anode foil',
    'anode_foil_mass': 'Anode foil mass [mg]',
    'anode_foil_mass_override': 'Anode foil mass (override) [mg]',
    'anode_id': 'Anode',
    'anode_load': 'Anode load  [mg/cm2]',
    'anode_load_uncorrected': 'Anode load (uncorrected for drying) [mg/cm2]',
    'anode_press': 'Anode press',
    'anode_sides': 'Anode coated sides',
    'anode_tab_interval': 'Anode  tab interval [mm]',
    'anode_tab_type': 'Anode tab type',
    'anode_tabs_no': '# of anode tabs',
    'anode_theoretic_cap': 'Anode theoretic capacity [mAh/g]',
    'anode_thickness': 'Initial anode thickness [um]',
    'anode_total_mass': 'Anode total mass [mg]',
    'anode_type': 'Anode batch type',
    'anode_weight': 'Initial anode weight [mg]',
    'anodes_left': '# of anodes left after planning',
    'anodes_no': '# of anodes per pouch',
    'anodes_total': 'Total # of anodes',
    'area': 'Area',
    'area_coated': 'Coated area [cm^2]',
    'area_coated_on_weighing': 'Coated area on weighing [cm^2]',
    'area_density': 'Area density [kg/m2]',
    'area_total': 'Total Area [cm^2]',
    'areal_capacity': 'Areal Capacity [mAh/cm2]',
    'areal_correction_factor': 'Area corretion factor',
    'assembled_by': 'Assembled by',
    'assembled_on': 'Assembled on',
    'assembly_remarks': 'Assembly remarks',
    'assembly_request_comment': 'Assembly request comment',
    'assigned': 'User assigned id',
    'assigned_remarks': 'Assigned remarks',
    'assignment': 'Assignment',
    'attachment': 'Attachment',
    'auto_update': 'Automatic results processing',
    'auxa_ocv_drop_chg': 'Auxa Ocv Drop Chg',
    'auxa_ocv_drop_dchg': 'Auxa Ocv Drop Dchg',
    'auxa_v_max': 'Auxa V Max',
    'auxa_v_min': 'Auxa V Min',
    'auxc_ocv_drop_chg': 'Auxc Ocv Drop Chg',
    'auxc_ocv_drop_dchg': 'Auxc Ocv Drop Dchg',
    'auxc_v_max': 'Auxc V Max',
    'auxc_v_min': 'Auxc V Min',
    'auxtemp': 'NW API: auxtemp',
    'auxvol': 'NW API: auxvol',
    'available': 'Available in GB',
    'available_after_plan': 'Available in GB after planning',
    'available_amount': 'Available amount [g]',
    'available_outside': 'Available GB+outside',
    'average_v': 'Default Average voltage for grav. calc. [V]',
    'avg_energy': 'Average specific energy input [kWh/kg]',
    'avg_thickness_weight': 'Average electrode weight [mg]',
    'bar': 'Bar [um]',
    'barcode': 'Barcode',
    'batch': 'Batch',
    'batch_am': 'Batch AM',
    'batch_capacity': 'Batch capacity for given load [mAh/gr]',
    'batch_id': 'Source batch ID',
    'batch_name': 'Source batch name',
    'batch_number': 'Batch number',
    'batch_table': 'Source batch table',
    'battery_batch_id': 'Assembly battery batch',
    'beads_p': 'Beads [%]',
    'beads_size': 'Beads size [mm]',
    'before_calib_volume': 'Slurry volume before calibration [liter]',
    'bet': 'BET [m2/gr]',
    'bet_link': 'BET link',
    'bia_a_batch_id': 'BIA A batch',
    'bia_c_batch_id': 'BIA C batch',
    'bia_cell_id': 'BIA cell',
    'bic_cell_id': 'BIC cell',
    'binder': 'Binder 1',
    'binder1': 'Binder 1',
    'binder1_a': 'Binder 1 [g]',
    'binder1_p': 'Binder 1 [%]',
    'binder1_pp': 'Binder 1 [% in stock sol.]',
    'binder2': 'Binder 2',
    'binder2_a': 'Binder 2 [g]',
    'binder2_p': 'Binder 2 [%]',
    'binder2_pp': 'Binder 2 [% in stock sol.]',
    'binder3': 'Binder 3',
    'binder3_a': 'Binder 3 [g]',
    'binder3_p': 'Binder 3 [%]',
    'binder3_pp': 'Binder 3 [% in stock sol.]',
    'binder4': 'Binder 4',
    'binder4_a': 'Binder 4 [g]',
    'binder4_p': 'Binder 4 [%]',
    'binder4_pp': 'Binder 4 [% in stock sol.]',
    'binder_a': 'Binder 1 [g]',
    'binder_density': 'Binder Density [gr/ml] (1.15 - 1.27)',
    'binder_p': 'Binder 1 [%%]',
    'binder_ph': 'Binder pH (8.8 - 9.5)',
    'binder_pp': 'Binder 1 [%% in stock sol.]',
    'binder_solids': 'Binder Solid [%] (15 - 16)',
    'biologic': 'Biologic',
    'black_chunks': 'SEM: Black chunks',
    'black_layer': 'SEM: Black layer',
    'black_precip': 'SEM: Black precipitation',
    'browser': 'Browser',
    'bumps_grid': 'Bumps Grid',
    'bumps_grid_group': 'Bumps Grid Group',
    'bumps_grid_perc': 'Bumps Grid %',
    'bumps_on_foil': 'Visual: Bumps on foil',
    'c': '1C capacity [mAh]',
    'c_a_ratio': 'C:A capacity ratio',
    'c_batch_descr': 'Batch description',
    'c_batch_id': 'Cathode batch',
    'c_batch_type': 'C Batch type',
    'c_chg': 'C Chg',
    'c_dchg': 'C Dchg',
    'c_el_batch': 'resulting batch (C)',
    'c_fraction_id': 'Cathode fraction',
    'c_gap': 'Gap [µm]',
    'c_gap2': 'Gap 2nd side [µm]',
    'c_ir': 'IR [%]',
    'c_ir_air_supply': 'IR air supply [RPM]',
    'c_ir_exhaust_fan': 'IR exhaust fan [RPM]',
    'c_load': 'Cathode load',
    'c_load_max': 'Cathode load (max)',
    'c_load_min': 'Cathode load (min)',
    'c_master_break': 'Master break [%]',
    'c_master_tension': 'Master tension [%]',
    'c_oven1': 'Oven 1 [C]',
    'c_oven1_air_supply': 'Oven 1 air supply [RPM]',
    'c_oven1_circ_fan': 'Oven 1 circulation fan [RPM]',
    'c_oven1_exhaust_fan': 'Oven 1 exhaust fan [RPM]',
    'c_oven2': 'Oven 2 [C]',
    'c_oven2_air_supply': 'Oven 2 air supply [RPM]',
    'c_oven2_circ_fan': 'Oven 2 circulation fan [RPM]',
    'c_oven2_exhaust_fan': 'Oven 2 exhaust fan [RPM]',
    'c_percent': 'Default % of 1C cap. limit',
    'c_pump_speed': 'Pump speed [RPM]',
    'c_rate1_average_voltage': 'C-rate #1 Average voltage [V]',
    'c_rate1_cap_avg': 'C-rate #1 Average capacity [mAh]',
    'c_rate1_cap_last': 'C-rate #1 Last capacity [mAh]',
    'c_rate1_cap_last_to_calc': 'C-rate #1 Last capacity / Calc. [%]',
    'c_rate1_cap_last_to_cap_det': 'C-rate #1 Last capacity / Cap. Det. [%]',
    'c_rate1_capg_avg': 'C-rate #1 Average capacity [mAh/g]',
    'c_rate1_capg_last': 'C-rate #1 Last capacity [mAh/g]',
    'c_rate1_cc_ratio_cap_avg': 'C-rate #1 Average CC cap Ratio [%]',
    'c_rate1_cc_ratio_time_avg': 'C-rate #1 Average CC time Ratio [%]',
    'c_rate1_ce_avg': 'C-rate #1 Average C.E. [%]',
    'c_rate1_current': 'C-rate #1 CHG current [C]',
    'c_rate1_engy_chg': 'C-rate #1 Energy CHG [mWh]',
    'c_rate1_engy_dchg': 'C-rate #1 Energy DCHG [mWh]',
    'c_rate1_engy_eff': 'C-rate #1 Energy eff. [%]',
    'c_rate1_engy_grav_ff1': 'C-rate #1 Grav. Energy density FF1 [Wh/kg]',
    'c_rate1_engy_grav_ff2': 'C-rate #1 Grav. Energy density FF2 [Wh/kg]',
    'c_rate1_min_voltage': 'C-rate #1 Minimal voltage [V]',
    'c_rate2_average_voltage': 'C-rate #2 Average voltage [V]',
    'c_rate2_cap_avg': 'C-rate #2 Average capacity [mAh]',
    'c_rate2_cap_last': 'C-rate #2 Last capacity [mAh]',
    'c_rate2_cap_last_to_calc': 'C-rate #2 Last capacity / Calc. [%]',
    'c_rate2_cap_last_to_cap_det': 'C-rate #2 Last capacity / Cap. Det. [%]',
    'c_rate2_capg_avg': 'C-rate #2 Average capacity [mAh/g]',
    'c_rate2_capg_last': 'C-rate #2 Last capacity [mAh/g]',
    'c_rate2_cc_ratio_cap_avg': 'C-rate #2 Average CC cap Ratio [%]',
    'c_rate2_cc_ratio_time_avg': 'C-rate #2 Average CC time Ratio [%]',
    'c_rate2_cc_time_slope': 'C-rate #2 CC time Slope [%/cycle]',
    'c_rate2_cc_time_slope_r2': 'C-rate #2 CC time Slope R^2',
    'c_rate2_ce_avg': 'C-rate #2 Average C.E. [%]',
    'c_rate2_current': 'C-rate #2 CHG current [C]',
    'c_rate2_engy_chg': 'C-rate #2 Energy CHG [mWh]',
    'c_rate2_engy_dchg': 'C-rate #2 Energy DCHG [mWh]',
    'c_rate2_engy_eff': 'C-rate #2 Energy eff. [%]',
    'c_rate2_engy_grav_ff1': 'C-rate #2 Grav. Energy density FF1 [Wh/kg]',
    'c_rate2_engy_grav_ff2': 'C-rate #2 Grav. Energy density FF2 [Wh/kg]',
    'c_rate2_min_voltage': 'C-rate #2 Minimal voltage [V]',
    'c_rate3_average_voltage': 'C-rate #3 Average voltage [V]',
    'c_rate3_cap_avg': 'C-rate #3 Average capacity [mAh]',
    'c_rate3_cap_last': 'C-rate #3 Last capacity [mAh]',
    'c_rate3_cap_last_to_calc': 'C-rate #3 Last capacity / Calc. [%]',
    'c_rate3_cap_last_to_cap_det': 'C-rate #3 Last capacity / Cap. Det. [%]',
    'c_rate3_capg_avg': 'C-rate #3 Average capacity [mAh/g]',
    'c_rate3_capg_last': 'C-rate #3 Last capacity [mAh/g]',
    'c_rate3_cc_ratio_cap_avg': 'C-rate #3 Average CC cap Ratio [%]',
    'c_rate3_cc_ratio_time_avg': 'C-rate #3 Average CC time Ratio [%]',
    'c_rate3_cc_time_slope': 'C-rate #3 CC time Slope [%/cycle]',
    'c_rate3_cc_time_slope_r2': 'C-rate #3 CC time Slope R^2',
    'c_rate3_ce_avg': 'C-rate #3 Average C.E. [%]',
    'c_rate3_current': 'C-rate #3 CHG current [C]',
    'c_rate3_engy_chg': 'C-rate #3 Energy CHG [mWh]',
    'c_rate3_engy_dchg': 'C-rate #3 Energy DCHG [mWh]',
    'c_rate3_engy_eff': 'C-rate #3 Energy eff. [%]',
    'c_rate3_engy_grav_ff1': 'C-rate #3 Grav. Energy density FF1 [Wh/kg]',
    'c_rate3_engy_grav_ff2': 'C-rate #3 Grav. Energy density FF2 [Wh/kg]',
    'c_rate3_min_voltage': 'C-rate #3 Minimal voltage [V]',
    'c_rate4_average_voltage': 'C-rate #4 Average voltage [V]',
    'c_rate4_cap_avg': 'C-rate #4 Average capacity [mAh]',
    'c_rate4_cap_last': 'C-rate #4 Last capacity [mAh]',
    'c_rate4_cap_last_to_calc': 'C-rate #4 Last capacity / Calc. [%]',
    'c_rate4_cap_last_to_cap_det': 'C-rate #4 Last capacity / Cap. Det. [%]',
    'c_rate4_capg_avg': 'C-rate #4 Average capacity [mAh/g]',
    'c_rate4_capg_last': 'C-rate #4 Last capacity [mAh/g]',
    'c_rate4_cc_ratio_cap_avg': 'C-rate #4 Average CC cap Ratio [%]',
    'c_rate4_cc_ratio_time_avg': 'C-rate #4 Average CC time Ratio [%]',
    'c_rate4_ce_avg': 'C-rate #4 Average C.E. [%]',
    'c_rate4_current': 'C-rate #4 CHG current [C]',
    'c_rate4_engy_chg': 'C-rate #4 Energy CHG [mWh]',
    'c_rate4_engy_dchg': 'C-rate #4 Energy DCHG [mWh]',
    'c_rate4_engy_eff': 'C-rate #4 Energy eff. [%]',
    'c_rate4_engy_grav_ff1': 'C-rate #4 Grav. Energy density FF1 [Wh/kg]',
    'c_rate4_engy_grav_ff2': 'C-rate #4 Grav. Energy density FF2 [Wh/kg]',
    'c_rate4_min_voltage': 'C-rate #4 Minimal voltage [V]',
    'c_ratio': 'Default Ratio of reference 1C [%]',
    'c_ref': 'Reference 1C [mAh]',
    'c_ref1': '~~~ [mAh]',
    'c_reference': '1C reference column / Default Reference 1C [mAh]',
    'c_requested_length': 'Requested Length [m]',
    'c_requested_load': 'Requested Load [mg/cm2]',
    'c_shim_thickness': 'Shim thickness [um]',
    'c_web_speed': 'Web speed [m/min]',
    'c_web_tension': 'Web Tension [N]',
    'c_width': 'Coating width [cm]',
    'ca_actual_date': 'Contact Angle, Date Actual',
    'ca_avg': 'Contact Angle, AVG [°]',
    'ca_cage': 'Contact Angle, Cage',
    'ca_event': 'Contact Angle, Event',
    'ca_operator': 'Contact Angle, Operator',
    'ca_planned_date': 'Contact Angle, Date Planned',
    'ca_std': 'Contact Angle, STD [mN/m]',
    'calc_yield': 'Yield [%]',
    'calculated_active_area': 'Calculated electrode active area [cm2]',
    'calculated_cap': 'Calculated cell capacity [mAh]',
    'calculator_file': 'File attachment',
    'calendaring_gap': 'Calendering gap [um]',
    'calendaring_speed': 'Calendering speed [m/min]',
    'calendaring_temp': 'Calendering temperature [°C]',
    'calender_process_yield': 'Yield: Calender process [%]',
    'calendering_ir': 'Calendering IR [%]',
    'calendering_ir_time': 'Calendering IR Time [sec]',
    'calendering_porosimeter': 'Calendering: porosimeter file',
    'calendering_press': 'Calendering: Press [%]',
    'calendering_pressure': 'Calendering pressure [kN]',
    'calibration_time1': 'Time for 1st calibration [minutes]',
    'calibration_time2': 'Time for 2nd calibration [minutes]',
    'calibration_time3': 'Time for 3rd calibration [minutes]',
    'calibration_time4': 'Time for 4th calibration [minutes]',
    'cap_1st_dchg_1c': '1C Capacity 1st Discharge [mAh]',
    'cap_1st_dchg_5c': '5C Capacity 1st Discharge [mAh]',
    'cap_chg': 'Cap Chg',
    'cap_dchg': 'Cap Dchg',
    'cap_det_average_voltage': 'Cap. Det. Average voltage [V]',
    'cap_det_cap_dchg': 'Cap. Det. Capacity discharge [mAh]',
    'cap_det_cc_ratio': 'Cap. Det. CC ratio [%]',
    'cap_det_ce': 'Cap. Det. C.E [%]',
    'cap_det_current': 'Cap. Det. actual current [C]',
    'cap_det_dchg_per_a_load': 'Cap. Det. Discharge / Anode load [mAh/mg*cm2]',
    'cap_det_dchg_to_calc': 'Cap. Det. Discharge / Calc. capacity [%]',
    'cap_det_dchg_to_form_last': 'Cap. Det. Discharge / Form. last discharge [%]',
    'cap_det_engy_eff': 'Cap. Det. Energy efficiency [%]',
    'cap_det_engy_gravimetric_ff1': 'Cap. Det. Grav. Energy density FF1 [Wh/kg]',
    'cap_det_engy_gravimetric_ff2': 'Cap. Det. Grav. Energy density FF2 [Wh/kg]',
    'cap_det_engy_last_dchg': 'Cap. Det. Energy discharge [mWh]',
    'cap_det_engy_to_01c': 'Cap. Det. Energy / Form. last energy [%]',
    'cap_det_engy_volumetric': 'Cap. Det. Volumetric Energy density [Wh/L]',
    'cap_evaluation': 'Use for capacity eval.',
    'cap_type': 'Cap type',
    'capacity': 'Capacity',
    'case_type': 'Case type',
    'catalog_number': 'Catalog number',
    'category': 'Category',
    'cathode_additives': 'Cathode Additives',
    'cathode_am': 'Cathode AM',
    'cathode_am_mass': 'Cathode AM mass (effective) [mg]',
    'cathode_am_percent': 'Cathode A.M. percent',
    'cathode_areal_capacity': 'Cathode areal capacity [mAh/cm2]',
    'cathode_batch': 'Cathode batch',
    'cathode_batch_comments': 'Cathode Batch comments',
    'cathode_batch_id': 'C slurry batch',
    'cathode_binder': 'Cathode Binder',
    'cathode_calculated_cap': 'Cathode calculated capacity [mAh]',
    'cathode_capacity': 'Cathode capacity / interface [mAh]',
    'cathode_cnts': 'Cathode CNTs',
    'cathode_condactive': 'Cathode Conductive additive',
    'cathode_cutter': 'Cathode cutter',
    'cathode_density': 'Cathode density [gr/cm^3]',
    'cathode_el_batch_id': 'C electrode batch',
    'cathode_foil': 'Cathode foil',
    'cathode_foil_mass': 'Cathode foil mass [mg]',
    'cathode_foil_mass_override': 'Cathode foil mass (override) [mg]',
    'cathode_id': 'Cathode',
    'cathode_load': 'Cathode load [mg/cm2]',
    'cathode_press': 'Cathode press',
    'cathode_sides': 'Cathode coated sides',
    'cathode_tab_interval': 'Cathode  tab interval [mm]',
    'cathode_tab_type': 'Cathode tab type',
    'cathode_tabs_no': '# of cathode tabs',
    'cathode_theoretic_cap': 'Cathode theoretic capacity [mAh/g]',
    'cathode_thickness': 'Cathode thickness [um]',
    'cathode_total_mass': 'Cathode total mass [mg]',
    'cathode_type': 'Cathode batch type',
    'cathode_weight': 'Initial cathode weight [mg]',
    'cathodes_left': '# of cathodes left after planning',
    'cathodes_no': '# of cathodes per pouch',
    'cathodes_total': 'Total # of cathodes',
    'cc_100': 'Pulse CC ratio is 100%',
    'cc_cap_ratio': 'Cc Cap Ratio',
    'cc_ratio': 'Cc Ratio',
    'ce': 'C.E. Last [%]',
    'ce_1c': '1C C.E. [%]',
    'ce_5c': '5C C.E. [%]',
    'cell': 'Cell',
    'cell_1c': 'Cell 1C [mAh]',
    'cell_id': 'Group',
    'cell_interfaces': 'Cell interfaces #',
    'cell_name': 'Cell name',
    'cell_ref_cap': 'Cell ref. capacity [mAh]',
    'cell_table': 'Step type',
    'cell_test_id': 'Test ID',
    'cell_type': 'Cell Type',
    'cell_weight': 'Cell weight [g]',
    'cellid': 'Cellid',
    'cellname': 'Cellname',
    'celltable': 'Celltable',
    'cfield': 'Controlled value field / Advanced condition name',
    'cg_theoretic': 'Theoretic batch capacity [mAh/g]',
    'channel': 'Channel',
    'channel_per_unit': 'Channel Per Unit',
    'channel_range': 'Channel Range',
    'charge_avg': 'Charge AVG',
    'charge_state': 'Charge State',
    'charge_std': 'Charge STD',
    'check_id': 'Check ID',
    'chg': 'Chg',
    'chg_capacity': 'Chg capacity from coins [mAh/gr]',
    'chl_id': 'Chl Id',
    'cid': 'Entry ID',
    'client_ip': 'Client Ip',
    'cnt_in_sol_a': 'CNT in solution of NMP  [g]',
    'cnt_in_sol_p': 'CNT in solution of NMP  [%]',
    'cnt_in_sol_pp': 'CNT in solution of NMP  [% in stock sol.]',
    'cnt_sol_a_1': 'CNT Solution 1 [g]',
    'cnt_sol_a_2': 'CNT Solution 2 [g]',
    'cnt_sol_a_3': 'CNT Solution 3 [g]',
    'cnt_solution_batch_1': 'CNT batch name 1',
    'cnt_solution_batch_2': 'CNT batch name 2',
    'cnt_solution_batch_3': 'CNT batch name 3',
    'cnt_solution_batch_4': 'CNT batch name 4',
    'cnt_solution_batch_5': 'CNT batch name 5',
    'cnts': 'CNTs',
    'cnts_p': 'CNTs %',
    'coa': 'COA / Supplier documentation link',
    'coa_file': 'COA file',
    'coated_length': 'Coated length [m]',
    'coated_sides': 'Coated sides',
    'coating_lines': 'Visual: Coating lines',
    'coating_method': 'Coating method',
    'coating_min_max': 'Coating min-max [mg]',
    'coating_oven_time': 'Drying oven time [min]',
    'coating_process_yield': 'Yield: Coating process [%]',
    'coating_uniformity': 'Coating uniformity [%]',
    'coating_uniformity_file': 'Coating uniformity file',
    'cohesion': 'Visual: Cohesion',
    'coin_anode_id': 'Coin anode',
    'coin_cap': 'Batch capacity from coins [mAh/gr]',
    'coin_cathode_id': 'Coin cathode',
    'coin_comment': 'Coin comment',
    'coin_fc_id': 'Full coin',
    'coin_load': 'Load [mg/cm2]',
    'coin_load_uncorrected': 'Load (uncorrected for drying) [mg/cm2]',
    'coins_comments': 'Coins Comments',
    'coins_link': 'Coins_link',
    'color': 'Color',
    'comment': 'Comment',
    'comments': 'Comments',
    'completed': 'Completed',
    'completed_by': 'Completed by',
    'completed_on': 'Completed on',
    'composition': 'Electrolyte composition',
    'concerns': 'Send "Completed" email to',
    'condactive': 'Conductive additive',
    'condactive2': 'Conductive additive 2',
    'condactive2_a': 'Conductive additive 2 [g]',
    'condactive2_p': 'Conductive additive 2 [%]',
    'condactive2_pp': 'Conductive additive 2 [% in stock sol.]',
    'condactive_a': 'Conductive additive [g]',
    'condactive_p': 'Conductive additive [%]',
    'condactive_pp': 'Conductive additive [% in stock sol.]',
    'conductivity': 'Conductivity [mS/cm]',
    'conductivity1': 'Conductivity 1 [mS/cm]',
    'conductivity2': 'Conductivity 2 [mS/cm]',
    'confirmed_finished_by': 'Confirmed finished by',
    'confirmed_finished_on': 'Confirmed finished on',
    'container': 'Container',
    'continue_cap': 'Continuing capacity [mAh]',
    'continue_cycle': 'Continuing from cycle # ',
    'control': 'Control',
    'core_type': 'Core type',
    'cover': 'Cover',
    'cp': 'Cp',
    'cracking': 'SEM: Cracking',
    'created_by': 'Created by',
    'created_datetime': 'Created Datetime',
    'created_on': 'Created on',
    'created_on_time': 'Time',
    'creator': 'NW DB: Creator',
    'cs': 'Cs',
    'ct_anode_batch_id': 'CT anode batch',
    'ct_cathode_batch_id': 'CT cathode batch',
    'ct_coin_id': 'CT coin',
    'ctable': 'Entry table',
    'cur_range1': 'Lower range max current [mA]',
    'cur_range2': 'Higher range max current [mA]',
    'curr_chg': 'Curr Chg',
    'curr_dchg': 'Curr Dchg',
    'current': 'Pulse current [mA]',
    'current_c': 'Pulse current [C]',
    'current_range': 'Current range [mA]',
    'current_step_id': 'Pouch id',
    'cutter': 'Cutter',
    'cutter_type': 'Cutter type',
    'cycle': 'Cycle #',
    'cycle_end_seq': 'Cycle End Seq',
    'cycle_life': 'Cycle life',
    'cycle_limit': 'Default cycle limit',
    'cycle_num': 'Cycle Num',
    'cycles': 'Cycles',
    'cycling_80_cap_cycles': 'Cycling 80%+ retention cycles',
    'cycling_86_cap_cycles': 'Cycling 86% retention cycles',
    'cycling_average_voltage': 'Cycling Average voltage [V]',
    'cycling_average_voltage_trial': 'Cycling Average voltage (trial run) [V]',
    'cycling_avg_ref_cycle': 'Cycling last cycle for average',
    'cycling_cap_1st_dchg': 'Cycling Capacity 1st Discharge [mAh]',
    'cycling_cap_1st_dchg_trial': 'Cycling Capacity 1st Discharge (trial run) [mAh]',
    'cycling_cap_cutoff': 'Cycling Capacity cut-off [%]',
    'cycling_cap_last_dchg': 'Cycling Capacity last discharge [mAh]',
    'cycling_cap_not_80': 'Cycling retention percent',
    'cycling_cc_ratio_70cap': 'Cycling CC cap ratio 70% [cycles]',
    'cycling_cc_ratio_avg': 'Cycling CC time Ratio (average) [%]',
    'cycling_cc_ratio_cap_avg': 'Cycling CC cap Ratio (average) [%]',
    'cycling_cc_ratio_cap_drop': 'Cycling CC cap Ratio drop [%/100cyc]',
    'cycling_cc_ratio_cap_init': 'Cycling CC cap Ratio (initial) [%]',
    'cycling_cc_ratio_cap_last': 'Cycling CC cap Ratio (last) [%]',
    'cycling_cc_ratio_drop': 'Cycling CC time Ratio drop [%/100cyc]',
    'cycling_cc_ratio_init': 'Cycling CC time Ratio (initial) [%]',
    'cycling_cc_ratio_last': 'Cycling CC time Ratio (last) [%]',
    'cycling_ce_10cycle_slope': 'Cycling C.E. last 10 cycle slope [%]',
    'cycling_ce_3cycle_drop': 'Cycling C.E. last 3 cycle drop [%]',
    'cycling_ce_avg': 'Cycling C.E. (average) [%]',
    'cycling_ce_drop': 'Cycling C.E. drop [%/100cyc]',
    'cycling_ce_init': 'Cycling C.E. (initial) [%]',
    'cycling_ce_last': 'Cycling C.E. (last) [%]',
    'cycling_ce_min': 'Cycling C.E. (minimal) [%]',
    'cycling_cumulative_cap': 'Cycling IF Cumulative capacity (estim.) [Ah]',
    'cycling_cumulative_cap_per_a': 'Cycling IF Cumulative per Anode (estim.) [Ah]',
    'cycling_curr_cycle': 'Cycling current cycle (>0 if running)',
    'cycling_current': 'Cycling CHG current [C]',
    'cycling_current_a': 'Cycling CHG current [mA]',
    'cycling_current_dchg': 'Cycling DCHG current [C]',
    'cycling_current_dchg_a': 'Cycling DCHG current [mA]',
    'cycling_current_per_ga': 'Cycling CHG current/gA [mA/g]',
    'cycling_current_per_ga_eff': 'Cycling CHG current/gA (effective) [mA/g]',
    'cycling_current_per_gc': 'Cycling CHG current/gC [mA/g]',
    'cycling_current_per_gc_eff': 'Cycling CHG current/gC (effective) [mA/g]',
    'cycling_dchg_delta_a': 'Cycling Discharge Δ anode [%]',
    'cycling_dchg_delta_c': 'Cycling Discharge Δ cathode [%]',
    'cycling_dchg_per_a_load': 'Cycling Discharge / Anode load [mAh/mg*cm2]',
    'cycling_dchg_per_ag': 'Cycling Discharge / gA [mAh/g]',
    'cycling_dchg_per_area': 'Cycling Discharge / Area [mAh/cm2]',
    'cycling_dchg_per_cg': 'Cycling Discharge / gC [mAh/g]',
    'cycling_dchg_per_el': 'Cycling Discharge per electrode [mAh]',
    'cycling_dchg_slope_init': 'Cycling Discharge initial slope [%drop/cycle]',
    'cycling_dchg_to_calc': 'Cycling Discharge / Calc. capacity [%]',
    'cycling_dchg_to_cap_det': 'Cycling Discharge / Cap. Det. discharge [%]',
    'cycling_dchg_to_form1': 'Cycling Discharge / Form. 1st discharge [%]',
    'cycling_dchg_to_form_last': 'Cycling Discharge / Form. last discharge [%]',
    'cycling_degassing_cycle': 'Cycling degassing cycle',
    'cycling_engy_1st_dchg': 'Cycling Energy 1st discharge [mWh]',
    'cycling_engy_1st_dchg_trial': 'Cycling Energy 1st discharge (trial run) [mWh]',
    'cycling_engy_chg_drop': 'Cycling Energy Chg drop [%/100cyc]',
    'cycling_engy_chg_last': 'Cycling Energy Chg last [mWh]',
    'cycling_engy_dchg_drop': 'Cycling Energy Dchg drop [%/100cyc]',
    'cycling_engy_dchg_last': 'Cycling Energy Dchg last [mWh]',
    'cycling_engy_eff': 'Cycling Energy efficiency [%]',
    'cycling_engy_eff_drop': 'Cycling Energy efficiency drop [%/100cyc]',
    'cycling_engy_eff_trial': 'Cycling Energy efficiency (trial run) [%]',
    'cycling_engy_gravimetric': 'Cycling Grav. Energy density [Wh/kg]',
    'cycling_engy_gravimetric_ff1': 'Cycling Grav. Energy density FF1 [Wh/kg]',
    'cycling_engy_gravimetric_ff1_interfaces': 'Cycling Grav. Energy density FF1 interfaces',
    'cycling_engy_gravimetric_ff1_trial': 'Cycling Grav. Energy density FF1 (trial run) [Wh/kg]',
    'cycling_engy_gravimetric_ff2': 'Cycling Grav. Energy density FF2 [Wh/kg]',
    'cycling_engy_gravimetric_ff2_trial': 'Cycling Grav. Energy density FF2 (trial run) [Wh/kg]',
    'cycling_engy_per_ag': 'Cycling Energy / gA [Wh/g]',
    'cycling_engy_per_cg': 'Cycling Energy / gA [Wh/g]',
    'cycling_engy_per_el': 'Cycling Energy per electrode [mWh]',
    'cycling_engy_volumetric': 'Cycling Volumetric Energy density [Wh/L]',
    'cycling_first_test_id': 'Cycling first test id',
    'cycling_initial_voltage': 'Cycling initial voltage [V]',
    'cycling_last_dchg_to_cap_det': 'Cycling Last discharge / Cap. Det. discharge [%]',
    'cycling_max_temp': 'Cycling max temperature [°C]',
    'cycling_max_voltage': 'Cycling max voltage [V]',
    'cycling_max_voltage_1st': 'Cycling max voltage 1st cycle [V]',
    'cycling_max_voltage_diff': 'Cycling max voltage diff [%]',
    'cycling_min_voltage': 'Cycling min voltage [V]',
    'cycling_min_voltage_1st': 'Cycling min voltage 1st cycle [V]',
    'cycling_min_voltage_diff': 'Cycling min voltage diff [%]',
    'cycling_r_chg_avg': 'Cycling DCR Chg (average) [Ohm]',
    'cycling_r_chg_drop': 'Cycling DCR Chg drop [%/100cyc]',
    'cycling_r_chg_init': 'Cycling DCR Chg (initial) [Ohm]',
    'cycling_r_chg_last': 'Cycling DCR Chg (last) [Ohm]',
    'cycling_r_dchg_avg': 'Cycling DCR Dchg (average) [Ohm]',
    'cycling_r_dchg_drop': 'Cycling DCR Dchg drop [%/100cyc]',
    'cycling_r_dchg_init': 'Cycling DCR Dchg (initial) [Ohm]',
    'cycling_r_dchg_last': 'Cycling DCR Dchg (last) [Ohm]',
    'cycling_ref_cycle': 'Cycling reference cycle',
    'cycling_test_1c': 'Cycling (from test) 1C capacity [mAh]',
    'cycling_test_average_v': 'Cycling (from test) Target Average voltage [V]',
    'cycling_test_c_ratio': 'Cycling (from test) Ratio for 1C [%]',
    'cycling_test_grav_engy': 'Cycling (from test) Target Grav. energy [Wh/kg]',
    'cycling_test_grav_ff': 'Cycling (from test) Grav. energy form-factor',
    'cycling_total_cycles': 'Cycling total cycles',
    'dag_id': 'Dag id',
    'date_time': 'Date Time',
    'days_to_next_treatment': 'Days to next treatment',
    'dchg': 'Dchg',
    'dchg_capacity': 'Dcgh capacity from coins [mAh/gr]',
    'defect': 'Defect',
    'defective_cells_notes': 'Defective cells notes',
    'defects_pinholes': 'Defects: Pinholes',
    'degas_request_comment': 'Degassing request comment',
    'degassing_date': 'Degassing date',
    'degassing_remarks': 'Degassing remarks',
    'density': 'Fraction density [g/cm3]',
    'density_1': 'Density, 1 [mg/mL]',
    'density_2': 'Density, 2 [mg/mL]',
    'density_3': 'Density, 3 [mg/mL]',
    'density_4': 'Density, 4 [mg/mL]',
    'density_5': 'Density, 5 [mg/mL]',
    'density_actual_date': 'Density, Date Actual',
    'density_after_press': 'Fraction density after press [g/cm3]',
    'density_avg': 'Density, AVG [mg/mL]',
    'density_leveling': 'Density, Leveling',
    'density_operator': 'Density, Operator',
    'density_planned_date': 'Density, Date Planned',
    'density_std': 'Density, STD [mg/mL]',
    'density_zero_scales': 'Density, Zero Scales',
    'description': 'Description / experiment/ purpose ',
    'detachment': 'SEM: Detachment',
    'detachment_grid': 'Detachment Grid',
    'detachment_grid_group': 'Detachment Grid Group',
    'detachment_grid_perc': 'Detachment Grid %',
    'dev_type': 'Device Type',
    'dev_uid': 'Dev Uid',
    'device': 'Device',
    'dipping_time': 'Dipping time [h]',
    'discharge_avg': 'Discharge AVG',
    'discharge_std': 'Discharge STD',
    'disperser_speed': 'Disperser Speed [RPM]',
    'display': 'Display',
    'distance_from_tab': 'Distance From Tab',
    'double_peaks_cycle': 'Double peaks cycle',
    'dq': 'Dq',
    'dq_c': 'Dq C',
    'due_date': 'Due date',
    'duration': 'Pulse duration [s]',
    'duration_chg': 'Duration Chg',
    'duration_definition': 'Pulse duration (definition) [s]',
    'dv50_target': 'Dv50 target',
    'edit_lock_by': 'Last edit time by',
    'edit_lock_on': 'Last edit time',
    'el_batch': 'Electrode subbatch name',
    'el_batch_id': 'Cathode electrode batch',
    'el_id': 'Electrolyte type',
    'el_load': 'Load',
    'el_quantity1': 'Electrolyte quantity 1 [ml]',
    'el_quantity2': 'Electrolyte quantity 2 [ml]',
    'electrode': 'Electrode',
    'electrode_density_final': 'Final Electrode Density [gr/cm3]',
    'electrode_disintegration_grid': 'Electrode Disintegration Grid',
    'electrode_disintegration_group': 'Electrode Disintegration Grid Group',
    'electrode_disintegration_perc': 'Electrode Disintegration Grid %',
    'electrode_gross': 'Electrode gross length [cm]',
    'electrode_gross_width': 'Electrode gross width [cm]',
    'electrode_net': 'Electrode net length [cm]',
    'electrode_size': 'Electrode size [cm^2]',
    'electrode_weight': 'Electrode weight [mg]',
    'electrode_width': 'Electrode net width [cm]',
    'electrolyte': 'Electrolyte batch',
    'electrolyte2': 'Electrolyte refill batch',
    'electrolyte2_comment': 'Electrolyte refill comment',
    'electrolyte2_ct': 'Electrolyte refill CT batch',
    'electrolyte2_ct_subbatch': 'Electrolyte refill CT subbatch',
    'electrolyte2_prepared_on': 'Electrolyte refill preparation date',
    'electrolyte2_q': 'Electrolyte refill quantity [ml]',
    'electrolyte2_q_calc': 'Electrolyte refill quantity (calculated) [ml]',
    'electrolyte2_q_calc_delta': 'Electrolyte refill quantity (loss ratio) [%]',
    'electrolyte2_type': 'Electrolyte refill type',
    'electrolyte_batch': 'Electrolyte batch',
    'electrolyte_by': 'Electrolyte filled by',
    'electrolyte_ct': 'Electrolyte CT batch',
    'electrolyte_ct_subbatch': 'Electrolyte CT subbatch',
    'electrolyte_decomposition_grid': 'Electrolyte Decomposition Grid',
    'electrolyte_decomposition_grid_group': 'Electrolyte Decomposition Grid Group',
    'electrolyte_decomposition_grid_perc': 'Electrolyte Decomposition Grid %',
    'electrolyte_density': 'Electrolyte density [g/ml]',
    'electrolyte_on': 'Electrolyte filled on',
    'electrolyte_prepared_on': 'Electrolyte preparation date',
    'electrolyte_q': 'Electrolyte quantity [ml]',
    'electrolyte_q_calc': 'Electrolyte quantity (calculated) [ml]',
    'electrolyte_q_calc_delta': 'Electrolyte quantity (loss ratio) [%]',
    'electrolyte_q_total': 'Electrolyte quantity (TOTAL) [ml]',
    'electrolyte_salt': 'Electrolyte salt',
    'electrolyte_subbatch': 'Electrolyte subbatch',
    'electrolyte_type': 'Electrolyte type',
    'empty_foil_weight': 'Empty Foil weight [mg]',
    'end_seq': 'End Seq',
    'end_time': 'End Time',
    'energy': 'NW API: energy',
    'enforce_constant_interval': 'Enforce constant maintenance interval',
    'engy_1st_dchg_1c': '1C Energy 1st discharge [mWh]',
    'engy_1st_dchg_5c': '5C Energy 1st discharge [mWh]',
    'engy_chg': 'Engy Chg',
    'engy_dchg': 'Engy Dchg',
    'engy_eff_1c': '1C Energy efficiency [%]',
    'engy_eff_5c': '5C Energy efficiency [%]',
    'environment_humidity': 'Environment humidity [rH%]',
    'environment_temp': 'Environment temperature [°C]',
    'eol_average_voltage': 'EoL Average voltage [V]',
    'eol_cap_dchg': 'EoL Capacity discharge [mAh]',
    'eol_ce': 'EoL C.E [%]',
    'eol_dchg_to_calc': 'EoL Discharge / Calc. capacity [%]',
    'eol_dchg_to_cap_det': 'EoL Discharge / Cap. Det. discharge [%]',
    'eol_engy_dchg': 'EoL Energy discharge [mWh]',
    'eol_engy_eff': 'EoL Energy efficiency [%]',
    'eol_engy_gravimetric_ff1': 'EoL Grav. Energy density FF1 [Wh/kg]',
    'eol_full_average_voltage': 'EoL Full range Average voltage [V]',
    'eol_full_cap_dchg': 'EoL Full range Capacity discharge [mAh]',
    'eol_full_ce': 'EoL Full range C.E [%]',
    'eol_full_engy_dchg': 'EoL Full range Energy discharge [mWh]',
    'eol_full_engy_eff': 'EoL Full range Energy efficiency [%]',
    'eol_full_engy_gravimetric_ff1': 'EoL Full range Grav. Energy density FF1 [Wh/kg]',
    'eucar_value': 'EUCAR Value (0-7)',
    'eve_pouch_id': 'Pouch',
    'event_type': 'Event type',
    'exception': 'Exception',
    'excess_of_electrolyte': 'Excess of electrolyte [ml]',
    'experiments': 'Experiments',
    'explosion': 'Explosion',
    'extra_electrolyte': 'Extra electrolyte [ml]',
    'fa_adhesion': 'SEM: Adhesion',
    'fa_agglomeration': 'SEM: Agglomeration',
    'fa_anode_swelling': 'FA: Anode swelling [%]',
    'fa_anode_thickness': 'FA: Anode thickness [um]',
    'fa_anode_weight': 'FA: Anode weight [mg]',
    'fa_anode_weight_change': 'FA: Anode weight change [%]',
    'fa_cracking': 'SEM: Cracking',
    'fa_detachment': 'SEM: Detachment',
    'fa_eof_date': 'FA EOF due date',
    'fa_experiment': 'FA experiment',
    'fa_homogeneity': 'SEM: Homogeneity',
    'fa_link': 'FA link',
    'fa_report_due_date': 'FA Report Due Date',
    'fa_report_link': 'FA Report',
    'fa_request': 'FA request',
    'fa_state': 'FA state of life',
    'fa_status': 'FA Status',
    'fa_thickness': 'SEM: Thickness [um]',
    'fa_type': 'Requested characterization',
    'fa_voids': 'SEM: Voids',
    'file_attachment': 'File attachment',
    'file_path': 'File Path',
    'filepath': 'Filepath',
    'fillers': 'Polymer/ ceramic fillers',
    'filling_request_comment': 'Filling request comment',
    'filter_type': 'Filter type',
    'filtration_end_time': 'Filtration end time',
    'filtration_method': 'Filtration method',
    'filtration_pressure': 'Filtration pressure [Bar]',
    'final_dv10': 'Final Dv10 [um]',
    'final_dv50': 'Final Dv50 [um]',
    'final_dv90': 'Final Dv90 [um]',
    'final_solid_perc': 'Actual solid % measured',
    'final_viscosity': 'Final Viscosity [cP]',
    'finish_time': 'Finish Time',
    'finished': 'Finished',
    'finished_on': 'Finished on',
    'finished_processing': 'Finished processing',
    'first_name': 'First Name',
    'firstid': 'FirstID',
    'flame': 'Flame',
    'flow': 'Experiments Flow',
    'foil': 'Foil',
    'foil_mass': 'Foil mass [mg]',
    'foil_weight': 'Foil weight [mg]',
    'for_development': 'For development',
    'for_testing': 'For testing',
    'form1_average_voltage': 'Formation 1st cycle Average voltage [V]',
    'form1_average_voltage_delta': 'Formation 1st cycle Average voltage delta [V]',
    'form1_cap_chg': 'Formation 1st cycle Capacity charge  [mAh]',
    'form1_cap_cutoff': 'Formation 1st cycle Capacity cut-off [%]',
    'form1_cap_dchg': 'Formation 1st cycle Capacity discharge  [mAh]',
    'form1_ce': 'Formation 1st cycle C.E. [%]',
    'form1_chg_duration': 'Formation 1st cycle Charge duration [hours]',
    'form1_chg_per_ag': 'Formation 1st cycle Charge / gA [mAh/g]',
    'form1_chg_per_cg': 'Formation 1st cycle Charge / gC [mAh/g]',
    'form1_chg_to_calc': 'Formation 1st cycle Charge / calc. capacity [%]',
    'form1_current': 'Formation 1st cycle Actual current [C]',
    'form1_dchg_per_ag': 'Formation 1st cycle Discharge / gA [mAh/g]',
    'form1_dchg_per_cg': 'Formation 1st cycle Discharge / gC [mAh/g]',
    'form1_dchg_to_calc': 'Formation 1st cycle Discharge / calc. capacity [%]',
    'form1_engy_dchg': 'Formation 1st cycle Energy discharge [mWh]',
    'form1_engy_eff': 'Formation 1st cycle Energy efficiency [%]',
    'form1_engy_per_ag': 'Formation 1st cycle Energy / gA [Wh/g]',
    'form1_engy_per_cg': 'Formation 1st cycle Energy / gC [Wh/g]',
    'form1_min_voltage': 'Formation 1st cycle min voltage [V]',
    'form1_ocv_drop_chg': 'Formation 1st cycle Delithiation end OCV drop [V]',
    'form1_rest_time': 'Formation 1st cycle Rest time [min]',
    'form1_rest_voltage_rise': 'Formation 1st cycle Voltage rise after rest [V]',
    'form1_voltage_after_rest': 'Formation 1st cycle Voltage after rest [V]',
    'form1_voltage_before_rest': 'Formation 1st cycle Voltage before rest [V]',
    'form2_cap_dchg': 'Formation 2nd cycle Discharge capacity [mAh]',
    'form2_ce': 'Formation 2nd cycle C.E. [%]',
    'form3_cap_dchg': 'Formation 3rd cycle Discharge capacity [mAh]',
    'form3_ce': 'Formation 3rd cycle C.E. [%]',
    'form4_cap_dchg': 'Formation 4th cycle Discharge capacity [mAh]',
    'form4_ce': 'Formation 4th cycle C.E. [%]',
    'form_factor': 'Form factor',
    'form_last_average_voltage': 'Formation Last cycle Average voltage [V]',
    'form_last_cap_cutoff': 'Formation Last cycle Capacity cut-off [%]',
    'form_last_cap_dchg': 'Formation Last cycle Capacity discharge [mAh]',
    'form_last_cc_ratio': 'Formation Last cycle CC ratio [%]',
    'form_last_cc_ratio_first': 'Formation Last cycle CC ratio (first) [%]',
    'form_last_ce': 'Formation Last cycle C.E. [%]',
    'form_last_chg_to_form1': 'Formation Last cycle Charge / 1st discharge [%]',
    'form_last_current': 'Formation Last cycle Actual current [C]',
    'form_last_dchg_per_ag': 'Formation Last cycle Discharge / gA [mAh/g]',
    'form_last_dchg_per_area': 'Formation Last cycle Discharge / Area [mAh/cm2]',
    'form_last_dchg_per_cg': 'Formation Last cycle Discharge / gC [mAh/g]',
    'form_last_dchg_to_calc': 'Formation Last cycle Discharge / Calc. capacity [%]',
    'form_last_dchg_to_form1': 'Formation Last cycle Discharge / 1st discharge [%]',
    'form_last_dchg_to_form2': 'Formation Last cycle Discharge / 2nd discharge [%]',
    'form_last_engy_dchg': 'Formation Last cycle Energy discharge [mWh]',
    'form_last_engy_eff': 'Formation Last cycle Energy efficiency [%]',
    'form_last_engy_gravimetric': 'Formation Last cycle Grav. Energy density [Wh/kg]',
    'form_last_engy_gravimetric_ff1': 'Formation Last cycle Grav. Energy density FF1 [Wh/kg]',
    'form_last_engy_gravimetric_ff2': 'Formation Last cycle Grav. Energy density FF2 [Wh/kg]',
    'form_last_engy_per_ag': 'Formation Last cycle Energy / gA [Wh/g]',
    'form_last_engy_per_cg': 'Formation Last cycle Energy / gC [Wh/g]',
    'form_last_engy_volumetric': 'Formation Last cycle Volumetric Energy density [Wh/L]',
    'formation_duration': 'Formation duration [hours]',
    'formation_initial_voltage': 'Formation initial voltage [V]',
    'formation_last_voltage': 'Formation last voltage [V]',
    'formation_last_voltage_first': 'Formation last voltage (first) [V]',
    'formation_max_temp': 'Formation max temperature [°C]',
    'formation_max_voltage': 'Formation max voltage [V]',
    'formation_min_voltage': 'Formation min voltage [V]',
    'formation_procedure': 'Formation procedure',
    'formation_start_date': 'Formation start date',
    'formulation': 'Formulation',
    'fraction_load': 'Load [mg/cm2]',
    'fraction_load_uncorrected': 'Load (uncorrected for drying) [mg/cm2]',
    'fraction_max': 'Fraction max weight [mg]',
    'fraction_min': 'Fraction min weight [mg]',
    'fractions_link': 'Fractions link',
    'freq': 'Freq',
    'freq_sweep_file': 'Frequency sweep file',
    'frequency': 'Frequency',
    'ftir_qc': 'FTIR QC',
    'full_cycles': 'Full cycles',
    'full_name': 'Full catalog name',
    'full_url': 'Full Url',
    'gen': 'Gen',
    'glovebox_voltage': 'Initial glovebox voltage [V]',
    'go_or_not': 'Final go/no go',
    'goals': 'Electrode batch goals',
    'graph': 'Graph',
    'graph_group': 'Graph Group',
    'grav_engy': 'Default Target Gravimetric energy [Wh/kg]',
    'grav_ff': 'Default Gravimetric energy form-factor',
    'grey_layer': 'SEM: Metallization (grey layer)',
    'group_id': 'Group',
    'group_name': 'Group',
    'group_owner': 'Group owner',
    'hash': 'Key',
    'hazard_level': 'MSDS Health Hazard Level',
    'homogeneity': 'SEM: Homogeneity',
    'hot_spots': 'SEM: Hot Spots',
    'hot_spots_grid': 'Hot Spots Grid',
    'hot_spots_grid_group': 'Hot Spots Grid Group',
    'hot_spots_grid_perc': 'Hot Spots Grid %',
    'i': 'I',
    'i_abs': 'I Abs',
    'i_avg': 'I Avg',
    'i_range': 'I Range',
    'icp_impurities': 'ICP main impurities',
    'icp_link': 'ICP link',
    'icp_purity': 'ICP - purity [%]',
    'id': 'Id',
    'impeller': 'Impeller',
    'ingredients': 'Ingredients',
    'initial_soc': 'Initial SoC [%]',
    'inputs': 'Inputs',
    'instructions': 'Step instructions',
    'intended_for': 'Intended for',
    'interface_num': 'Interface #',
    'interface_thickness': 'Single interface thickness [um]',
    'interfaces_no': '# of interfaces',
    'invalid_cell_comment': 'Invalid DB cell comment',
    'ip': 'Ip',
    'jellyroll_id': 'jellyroll',
    'jellyroll_quantity': '# of jellyrolls requested',
    'key_': 'Key',
    'label': 'Source batch label',
    'labels': 'Labels',
    'laminate_size': 'Laminate size',
    'last_alert_on': 'Last alert on',
    'last_error_time': 'Last error time',
    'last_name': 'Last Name',
    'last_start': 'Last Start Date',
    'last_temp_seq_id': 'Last temperature seq_id',
    'last_test_id': 'Last Test Id',
    'last_test_update': 'Last test update',
    'last_treatment_on': 'Last treatment on',
    'last_update': 'Last Update',
    'lastid': 'LastID',
    'layer_tickness': 'Layer thickness [um]',
    'leak': 'Leak',
    'link': 'Link to images/video)',
    'link_updated_on': 'Link updated on',
    'load_avg': 'Load AVG',
    'load_max_1s': '1s: Load max',
    'load_max_2s': '2s: Load max',
    'load_min_1s': '1s: Load min',
    'load_min_2s': '2s: Load min',
    'load_produced': 'Load produced [mg/cm^2]',
    'load_std': 'Load STD',
    'location': 'Location name',
    'location_updated_by': 'Location Updated by',
    'location_updated_on': 'Location Updated on',
    'locked': 'Locked',
    'lod_1': 'LOD, 1 [%]',
    'lod_2': 'LOD, 2 [%]',
    'lod_3': 'LOD, 3 [%]',
    'lod_4': 'LOD, 4 [%]',
    'lod_5': 'LOD, 5 [%]',
    'lod_actual_date': 'LOD, Date Actual',
    'lod_avg': 'LOD, AVG [%]',
    'lod_event': 'LOD, Event',
    'lod_leveling': 'LOD, Leveling',
    'lod_measurement_temp': 'LOD, Measurement Temperature [°C]',
    'lod_operator': 'LOD, Operator',
    'lod_planned_date': 'LOD, Date Planned',
    'lod_std': 'LOD, STD [%]',
    'lod_zero_scales': 'LOD, Zero Scales',
    'loop_num': 'Loop Num',
    'machine': 'Machine',
    'maintenance': 'Maintenance procedure description',
    'manuf_batch_number': 'Manufacturer batch number',
    'manufacturer': 'Manufacturer',
    'material1': 'Solvent 1',
    'material1_amount': 'Solvent 1 amount [g]',
    'material2': 'Solvent 2',
    'material2_amount': 'Solvent 2 amount [g]',
    'material3': 'Solvent 3',
    'material3_amount': 'Solvent 3 amount [g]',
    'material_id': 'Material',
    'materials': 'Source materials batches',
    'max_alert_range': 'Max. alert range',
    'max_current': 'Max Current [A]',
    'max_force': 'Max Force [kN]',
    'max_value': 'Max. allowed value',
    'measured_active_area': 'Measured electrode active area [cm2]',
    'measured_load': 'Measured load [mg/cm^2]',
    'measured_solid_content': 'Measured solid content',
    'measured_volume': 'Slurry volume after calibration [liter]',
    'mesh_size': 'Mesh size [um]',
    'metallization_grid': 'Metallization Grid',
    'metallization_grid_group': 'Metallization Grid Group',
    'metallization_grid_perc': 'Metallization Grid %',
    'mi_cell_id': 'MI cell',
    'milling_id': 'Milling batch',
    'milling_log_file': 'Milling log file',
    'milling_time': 'Milling time [min]',
    'min_alert_range': 'Min. alert range',
    'min_value': 'Min. allowed value',
    'mixer_log_file': 'Mixer log file',
    'mixing_id': 'Mixing batch',
    'mixing_link': 'Mixing link',
    'mixing_method': 'Mixing Method',
    'model': 'Model',
    'modified_datetime': 'Modified Datetime',
    'name': 'Name',
    'national_id': 'National ID',
    'neware_state': 'Neware State',
    'next_step_id': 'Next step id',
    'next_treatment_on': 'Next treatment on',
    'next_treatment_override': 'Next treatment on (override)',
    'nickname': 'Nickname',
    'norm_capacity': 'Normalization capacity',
    'not_active': 'Not active',
    'notes': 'Notes',
    'ns': 'Ns',
    'num_of_fractions': 'Number of Fractions',
    'nwdb_updated_on': 'NW DB updated on',
    'observations': 'Observations',
    'occurred_on': 'Occurred on',
    'ocv': 'OCV [V]',
    'ocv_after_assembly': 'OCV after filling [V]',
    'ocv_after_dgas': 'OCV after dgas [V]',
    'ocv_after_filling': 'OCV after filling [V]',
    'ocv_drop_chg': 'Ocv Drop Chg',
    'ocv_drop_dchg': 'Ocv Drop Dchg',
    'offline': 'Offline',
    'one_sided': 'One-sided',
    'operator': 'Operator',
    'operators': 'Operators',
    'origin': 'Material origin',
    'owned_by': 'Plan owner',
    'p_anode_batch_id': 'A pilot slurry batch',
    'p_batch_id': 'Pilot slurry batch',
    'p_cathode_batch_id': 'C pilot slurry batch',
    'p_slurry_batch_id': 'Pilot slurry batch',
    'parameter1_name': 'Parameter1 name',
    'parameter1_value': 'Parameter1 value',
    'parameter2_desc': 'Parameter2 description',
    'parameter2_name': 'Parameter1 name',
    'parameter2_value': 'Parameter2 value',
    'parameter3_desc': 'Parameter3 description',
    'parameter3_name': 'Parameter3 name',
    'parameter3_value': 'Parameter3 value',
    'parameter4_name': 'Parameter4 name',
    'parameter4_value': 'Parameter4 value',
    'parameter5_name': 'Parameter5 name',
    'parameter5_value': 'Parameter5 value',
    'parameter_desc': 'Parameter description',
    'parameter_value': 'Parameter value',
    'parameters': 'Parameters',
    'parent_experiment': 'Parent experiment',
    'part_number': 'Part Number',
    'performance': 'Analytical performance',
    'performance_remarks': 'Performance remarks',
    'performed_on': 'Analysis date',
    'phase': 'Phase',
    'pilot_a_batch_id': 'Pilot A slurry batch',
    'pilot_c_batch_id': 'Pilot C slurry batch',
    'pilot_pouch_id': 'Pouch',
    'pilot_qc_pass': 'Pilot QC pass',
    'pl_cap_1st_chg': 'PL 1st charge [mAh]',
    'pl_cathode_id': 'PL Cathode',
    'pl_chg_to_total_a_cap': 'PL 1st charge / total anode cap. [%]',
    'pl_current': 'PL current [mA]',
    'pl_current_c': 'PL current [C]',
    'pl_duration': 'PL duration [min]',
    'pl_electrolyte_ct': 'PL Electrolyte CT batch',
    'pl_electrolyte_q': 'PL Electrolyte quantity [ml]',
    'pl_electrolyte_type': 'PL Electrolyte type',
    'pl_li_weight': 'PL Li weight [mg]',
    'pl_req_electrolyte_q': 'PL Requested electrolyte quantity [ul]',
    'pl_req_electrolyte_subbatch': 'PL Requested electrolyte subbatch',
    'pl_rest_duration': 'PL rest duration [min]',
    'pl_v_before_test': 'PL Voltage before test [V]',
    'pl_v_rest_end': 'PL Voltage at rest end [V]',
    'pl_v_rest_start': 'PL Voltage at rest start [V]',
    'plan_date': 'Plan for date',
    'plan_id': 'Group',
    'plan_ids': 'Pouch plan IDs',
    'planetary_speed': 'Planetary Speed [RPM]',
    'pn': 'NW DB: PN',
    'polymer1': 'Polymer 1',
    'polymer1_amount': 'Polymer 1 amount [g]',
    'polymer2': 'Polymer 2',
    'polymer2_amount': 'Polymer 2 amount [g]',
    'polymer3': 'Polymer 3',
    'polymer3_amount': 'Polymer 3 amount [g]',
    'port': 'Port',
    'pouch_id': 'Pouch',
    'pouch_number': '# of pouches planned',
    'pouch_plans': 'Related pouch plans',
    'pouch_quantity': '# of pouches requested',
    'pouches_link': 'Pouches link',
    'power': 'Power',
    'power_grav': 'Pulse power [mW/kg]',
    'pref_supplier': 'Preferrable supplier',
    'preparation': 'Preparation',
    'preparation_comments': 'Preparation comments',
    'preparation_remark': 'Preparation remark',
    'prepared_amount': 'Prepared amount [g]',
    'prepared_by': 'Prepared by',
    'prepared_on': 'Prepared on',
    'press': 'Press',
    'press_1s': '1s: Electrode press',
    'press_2s': '2s: Electrode press',
    'pressure_1st_cycle': 'Pressure on 1st cycle [bar]',
    'pressure_after_dgas': 'Pressure after degassing [bar]',
    'pressure_image_link': 'Pressure image link',
    'pressure_test_sensitivity': 'Pressure test sensitivity',
    'priority': 'Priority',
    'proc_num': 'Proc Num',
    'procedure_link': 'Procedure link',
    'procedure_name': 'Procedure Segments',
    'process_protocol': 'Process protocol file',
    'processing': 'Processing',
    'processing_file': 'Processing protocol',
    'production_remarks': 'Production remarks',
    'production_time': 'Production time [minutes]',
    'protected': 'Protected',
    'psd_120sec_data_quality': 'PSD, 120sec Data Quality',
    'psd_120sec_dv90': 'PSD, 120sec dv90',
    'psd_300sec_data_quality': 'PSD, 300sec Data Quality',
    'psd_300sec_dv90': 'PSD, 300sec dv90',
    'psd_30sec_data_quality': 'PSD, 30sec Data Quality',
    'psd_30sec_dv90': 'PSD, 30sec dv90',
    'psd_60sec_data_quality': 'PSD, 60sec Data Quality',
    'psd_60sec_dv90': 'PSD, 60sec dv90',
    'psd_actual_date': 'PSD, Date Actual',
    'psd_as_is_data_quality': 'PSD, As is Data Quality',
    'psd_as_is_dv90': 'PSD, As is dv90',
    'psd_background': 'PSD, Background',
    'psd_data_quality': 'PSD, Data Quality',
    'psd_dispersant': 'PSD, Dispersant',
    'psd_dv10': 'PSD volume [Dv10 - nm]',
    'psd_dv50': 'PSD volume [Dv50 - nm]',
    'psd_dv50_avg': 'PSD, DV50, Average [µm]',
    'psd_dv50_std': 'PSD, DV50, STD [µm]',
    'psd_dv90': 'PSD volume [Dv90 - nm]',
    'psd_event': 'PSD, Event',
    'psd_file': 'PSD file',
    'psd_link': 'PSD link',
    'psd_operator': 'PSD, Operator',
    'psd_particle_type': 'PSD, Particle Type',
    'psd_planned_date': 'PSD, Date Planned',
    'psd_sample_obstruction_1': 'PSD, sample 1 obstruction [%]',
    'psd_sample_obstruction_2': 'PSD, sample 2 obstruction [%]',
    'psd_sample_obstruction_3': 'PSD, sample 3 obstruction [%]',
    'psd_sample_obstruction_4': 'PSD, sample 4 obstruction [%]',
    'psd_sample_preparation': 'PSD, Sample Preparation',
    'psd_system_alignment': 'PSD, System_Alignment',
    'psd_typical_graph': 'PSD, Typical Graph',
    'pulse_id': 'Pulse ID',
    'pulse_n': 'Pulse #',
    'pulse_n_in_cycle': 'Pulse # in cycle',
    'pulse_n_in_series': 'Pulse # in series',
    'purpose': 'Experiment remarks',
    'q_charge': 'Q Charge',
    'q_charge_discharge': 'Q Charge Discharge',
    'q_discharge': 'Q Discharge',
    'q_q0': 'Q Q0',
    'q_q0_c': 'Q Q0 C',
    'qa_date': 'QA finish date',
    'qa_file': 'QA report file',
    'qa_status': 'QA status',
    'qc': 'QC',
    'qc_actual_tension': 'QC: Actual tension [Mpa]',
    'qc_ca': 'QC: Ca*',
    'qc_directive': 'QC directive',
    'qc_final_thickness': 'QC: Final thickness [um]',
    'qc_g': 'QC: G*',
    'qc_initial_thickness': 'QC: Initial thickness [um]',
    'qc_q': 'QC: Q [ml/min]',
    'qc_status': 'QC status',
    'qc_u': 'QC: µ [Pa*s]',
    'qc_wet_thickness': 'QC: Wet thickness [um]',
    'qc_y': 'QC: ƴ [1/s]',
    'quantity': 'Quantity produced',
    'quantity_1s': '1s: Electrode quantity',
    'quantity_2s': '2s: Electrode quantity',
    'quantity_outside': 'Quantity outside GB',
    'quantity_units': 'Quantity units',
    'queries': 'Queries',
    'r': 'Pulse Internal resistance [mΩ]',
    'r_chg': 'R Chg',
    'r_chg_end': 'R Chg End',
    'r_dchg': 'R Dchg',
    'r_dchg_end': 'R Dchg End',
    'r_per_el': 'Pulse Internal resistance [mΩ/interface]',
    'range_cycles': 'Range Cycles',
    'range_id': 'Range Id',
    'range_values': 'Range',
    'ratio': 'Ratio',
    'recipe_file': 'Recipe file',
    'recipe_file_image': 'Recipe file (Image)',
    'recipe_scan_link': 'Actual recipe scan link',
    'ref_cycle1': 'Default reference cycle I',
    'ref_cycle2': 'Default reference cycle II',
    'ref_cycle3': 'Default reference cycle III',
    'ref_cycle_last': 'Last reference cycle',
    'reference_slurry': 'Reference slurry',
    'reference_table': 'Reference Table',
    'related': 'Related experiment',
    'relativetime': 'NW API: relativetime',
    'remark': 'Test remark',
    'remarks': 'Remarks',
    'repeats': 'Repeats [#]',
    'report_due_date': 'Report Due Date',
    'report_link': 'Report Link',
    'report_to': 'Send report to',
    'reported_by': 'Reported/performed by',
    'representative': 'Representative cell',
    'req_electrolyte2_q': 'Requested electrolyte quantity @ degassing [ml]',
    'req_electrolyte2_subbatch': 'Requested electrolyte subbatch @ degassing',
    'req_electrolyte_date': 'Requested filling date',
    'req_electrolyte_q': 'Requested electrolyte quantity @ filling [ml]',
    'req_electrolyte_subbatch': 'Requested electrolyte subbatch @ filling',
    'resistance': 'Resistance [mOhm]',
    'responsible': 'Responsible',
    'responsible_groups': 'Responsible Groups',
    'result': 'Results',
    'retention': 'Retention [%]',
    'rheology2_flow_sweep_file': 'Rheology Slurry flow sweep file',
    'rheology2_freq_sweep_file': 'Rheology Slurry frequency sweep file',
    'rheology_actual_date': 'Rheology, Date Actual',
    'rheology_air_flow': 'Rheology, Air Flow',
    'rheology_amplitude': 'Rheology, Amplitude',
    'rheology_amplitude_df': 'Rheology, Amplitude DataFrame',
    'rheology_amplitude_range': 'Rheology, Amplitude Range',
    'rheology_cross_over': 'Rheology, Cross Over',
    'rheology_cross_over_values': 'Rheology, cross-over values',
    'rheology_enviroment_temperature': 'Rheology, Enviroment Temperature',
    'rheology_event': 'Rheology, Event',
    'rheology_flow': 'Rheology, Flow',
    'rheology_flow_df': 'Rheology, Flow DataFrame',
    'rheology_flow_range': 'Rheology, Flow Range',
    'rheology_flow_sweep_file': 'Rheology Stock flow sweep file',
    'rheology_fluid_behavior': 'Rheology, Fluid Behavior',
    'rheology_freq_sweep_file': 'Rheology Stock frequency sweep file',
    'rheology_frequency': 'Rheology, Frequency',
    'rheology_frequency_df': 'Rheology, Frequency DataFrame',
    'rheology_frequency_range': 'Rheology, Frequency Range',
    'rheology_geometry': 'Rheology, Geometry',
    'rheology_geometry_friction': 'Rheology, Geometry Friction [µN∙m/(rad/s)]',
    'rheology_geometry_inertia': 'Rheology, Geometry Inertia [µN∙m∙s^2]',
    'rheology_go_to_zero_gap': 'Rheology, go to zero gap?',
    'rheology_instrument_inertia': 'Rheology, Instrument Inertia [µN∙m∙s^2]',
    'rheology_link': 'Rheology link',
    'rheology_operator': 'Rheology, Operator',
    'rheology_planned_date': 'Rheology, Date Planned',
    'rheology_pressure': 'Rheology, Pressure [Bar]',
    'rheology_rotational_mapping': 'Rheology, Rotational Mapping',
    'rheology_sample_amount': 'Rheology, Sample Amount [mL]',
    'rheology_selected_strain': 'Rheology, Selected Strain [%]',
    'rheology_solvent': 'Rheology, Solvent',
    'rheology_solvent_trap': 'Rheology, Solvent Trap',
    'rheology_viscosity_at_1': 'Rheology, Delta Viscosity @1[1/sec] [Pa/sec]',
    'rheology_viscosity_at_251': 'Rheology, Viscosity at @251[1/sec] [Pa/sec]',
    'rheology_zero_force': 'Rheology, Zero Force',
    'rheology_zero_gap': 'Rheology, Zero Gap',
    'robin_links': 'Robin Links',
    'route_card_file': 'Route card file',
    'run_instruction': 'Run instruction',
    'run_instruction_saved': 'Run Instruction (saved)',
    'run_time': 'NW DB: Runtime [h]',
    'running': 'Running(Σ)',
    'runtime': 'Runtime [h]',
    'salt': 'Salt',
    'salt1': 'Salt #1',
    'salt1_q': 'Salt #1 [M]',
    'salt2': 'Salt #2',
    'salt2_q': 'Salt #2 [M]',
    'salt3': 'Salt #3',
    'salt3_q': 'Salt #3 [M]',
    'salt4': 'Salt #4',
    'salt4_q': 'Salt #4 [M]',
    'salt5': 'Salt #5',
    'salt5_q': 'Salt #5 [M]',
    'salts': 'Salts',
    'sample': 'Sample',
    'sample_bank': 'Sample bank',
    'sample_date': 'Sampling date',
    'sample_location': 'Sample location',
    'sample_taken': 'Sample Taken?',
    'scale': 'Scale',
    'scheduled_on': 'Scheduled on',
    'scope': 'Scope',
    'score': 'Score',
    'scrap_remarks': 'Step scrap remarks',
    'sd_a_batch_id': 'SDA slurry batch',
    'sd_a_batch_label': 'SDA slurry label',
    'sd_batch_id': 'SD slurry batch',
    'sd_batch_label': 'SD slurry label',
    'sd_c_batch_id': 'SDC slurry batch',
    'sd_c_batch_label': 'SDC slurry label',
    'secondary': 'Secondary',
    'sei_formation': 'SEI formation',
    'sem_link': 'SEM link',
    'send_alert': 'Send change alert',
    'send_report': 'Send report on submit',
    'sent_on': 'Alert sent on',
    'separator_coating_disintegration_grid': 'Separator Coating Disintegration Grid',
    'separator_coating_disintegration_grid_group': 'Separator Coating Disintegration Grid Group',
    'separator_coating_disintegration_grid_perc': 'Separator Coating Disintegration Grid %',
    'separator_id': 'Separator',
    'separator_length_1': 'Separator 1 length [mm]',
    'separator_length_2': 'Separator 2 length [mm]',
    'separator_particles': 'Visual: particles on separator',
    'series': 'Series',
    'series_n': 'Series #',
    'series_n_in_cycle': 'Series # in cycle',
    'session_data': 'Session Data',
    'shaft_speed': 'Shaft speed [RPM]',
    'sharpei': 'SEM: Shar pei',
    'sharpei_grid': 'Sharpei Grid',
    'sharpei_grid_group': 'Sharpei Grid Group',
    'sharpei_grid_perc': 'Sharpei Grid %',
    'sheet_length': 'Sheet length [cm]',
    'sheet_name': 'Sheet Name',
    'sheets_number': 'Sheets number',
    'si_sn_ratio_avg': 'Si/Sn Ratio - Average',
    'si_sn_ratio_std': 'Si/Sn Ratio - STD',
    'silicon_p_avg': 'Silicon [%] - Average',
    'silicon_p_std': 'Silicon [%] - STD',
    'similar_composition': 'Similar composition batch',
    'similar_process': 'Similar process batch',
    'slack_id': 'Slack Id',
    'sleeve_length': 'Sleeve length [cm]',
    'slope': 'Slope [Ω]',
    'slope_b': 'Slope b (constant)',
    'slope_per_el': 'Slope [Ω/interface]',
    'slope_r2': 'Slope R2',
    'slurry_batch_id': 'SU slurry batch',
    'slurry_ca': 'Slurry CA file',
    'slurry_density': 'Actual Density [gr/ml] measured',
    'slurry_density_target': 'Target Density [gr/ml]',
    'slurry_id': 'Slurry ID',
    'slurry_kind': 'Electrode',
    'slurry_ph': 'Slurry pH (6.9 - 7.4)',
    'slurry_psd': 'Slurry PSD file',
    'slurry_remarks': 'Slurry remarks',
    'slurry_sigma': 'Slurry Sigma',
    'slurry_solids': 'Actual solid % calculated',
    'slurry_st': 'Slurry ST file',
    'slurry_stock': 'Slurry / Stock',
    'slurry_viscosity_file': 'Slurry viscosity file',
    'smoke': 'Smoke',
    'soc': 'Pulse SoC [%]',
    'soc_mah': 'Pulse SoC [mAh]',
    'solid_content': 'Solid content [%]',
    'solid_percent': 'Solid percent [%]',
    'solids_mass': 'Solids mass [g]',
    'solids_volume': 'Solids volume [ml]',
    'solvent': 'Solvent',
    'solvent1': 'Solvent1 material',
    'solvent1_a': 'Solvent1 [g]',
    'solvent1_ratio': 'Solvent #1 volume ratio',
    'solvent2': 'Solvent #2',
    'solvent2_a': 'Solvent 2 [g]',
    'solvent2_ratio': 'Solvent #2 volume ratio',
    'solvent3': 'Solvent #3',
    'solvent3_ratio': 'Solvent #3 volume ratio',
    'solvent4': 'Solvent #4',
    'solvent4_ratio': 'Solvent #4 volume ratio',
    'solvent5': 'Solvent #5',
    'solvent5_ratio': 'Solvent #5 volume ratio',
    'solvent_a': 'Solvent 1 [g]',
    'solvent_added': 'NMP added [ml]',
    'solvent_in_binber_sol': 'NMP in binder solution [ml]',
    'solvent_in_cnt_sol': 'NMP in CNT solution [ml]',
    'solvents': 'Mixing solvents',
    'sources': 'Source materials',
    'sparks': 'Sparks',
    'spectrum_file': 'Spectrum image file',
    'speed': 'Speed [mm/s or C/s]',
    'st_actual_date': 'Surface tension, Date Actual',
    'st_avg': 'Surface Tension, AVG [mN/m]',
    'st_cage': 'Surface Tension, Cage',
    'st_event': 'Surface Tension, Event',
    'st_operator': 'Surface tension, Operator',
    'st_planned_date': 'Surface tension, Date Planned',
    'st_recipe': 'Surface Tension, Recipe',
    'st_solvent': 'Surface Tension, Solvent',
    'st_std': 'Surface Tension, STD [mN/m]',
    'st_tff': 'Surface Tension, Time For Fume [sec]',
    'stack_pos': 'Electrode Position in Stack',
    'stacking': 'Stacking type',
    'stacking_by': 'Pouch Stacked by',
    'stacking_conditions': 'Stacking conditions',
    'stacking_type': 'Stacking package',
    'stage_name': 'Stage name',
    'start_seq': 'Start Seq',
    'start_time': 'Start Time',
    'started_by': 'Started by',
    'started_on': 'Started on',
    'state': 'State',
    'state_in_experiments': 'Cell state in experiments',
    'status': 'Status',
    'status_code': 'Step status code',
    'status_short': 'Status',
    'status_updated_on': 'NW API Status updated on',
    'step_id': 'Step id',
    'step_index': 'Step Index',
    'step_inputs': 'Step inputs',
    'step_inputs_params': 'Step parameters',
    'step_name': 'Step name',
    'step_params': 'Value',
    'step_type': 'Step type',
    'steps': 'Steps',
    'stock_viscosity_file': 'Stock viscosity file',
    'stop_after_dchg': 'Stop after discharge',
    'storedot_sn': 'StoreDot SN#',
    'stripes': 'SEM: Stripes',
    'sub_batch': 'Sub-batch',
    'subbatch': 'Electrolyte subbatch',
    'subbatch_full': 'Electrolyte subbatch full',
    'summary_link': 'Summary link',
    'supervised_by': 'Supervised by',
    'supplier': 'Supplier',
    'supplier_density': 'Supplier Density [Kg/m^2]',
    'supplier_sn': 'Supplier SN#',
    'supplier_thickness': 'Supplier Thickness [um]',
    'supplier_uts': 'Supplier UTS [MPa]',
    'surface_tension_file': 'Surface tension file',
    'suspected_leakage': 'Suspected leakage',
    'suspected_short': 'Suspected short circuit',
    'system': 'System',
    't1_max': 'T1 Max',
    't1_min': 'T1 Min',
    't2_max': 'T2 Max',
    't2_min': 'T2 Min',
    'tab_pos': 'Tab Position',
    'tab_sealing_machine': 'Tab sealing machine',
    'tab_sealing_temp': 'Tab sealing temp [°C]',
    'tab_sealing_time': 'Tab sealing time [sec]',
    'table_name': 'Table Name',
    'target_interfaces_even': 'Target interfaces number is even',
    'target_load': 'Taget Load [mg/cm2]',
    'target_slow_chg_energy': 'Target slow charge energy [Wh/kg]',
    'target_solid_content': 'Target Solid content [%]',
    'target_total_cap': 'Target total capacity [Ah]',
    'tem_link': 'TEM link',
    'temp_initial': 'Temp (initial) [C]',
    'temp_max': 'Temp (max) [C]',
    'temp_min': 'Temp (min) [C]',
    'temp_on_cell': 'Temp (on cell) [C]',
    'temperature': 'Temperature',
    'template_file': 'Template file',
    'template_id': 'Template ID',
    'test_id': 'Test Id',
    'test_name': 'Test Name',
    'test_remarks': 'Test remarks',
    'test_row_id': 'Test row: ID',
    'test_standard': 'Standard',
    'test_type_id': 'Test template',
    'test_type_str': 'Test Type Str',
    'testid': 'Testid',
    'testname': 'Testname',
    'theoretic_cap': 'Batch theoretic capacity [mAh/g]',
    'theoretical_solid_perc': 'Target solid %',
    'thermocouple_pattern_grid': 'Thermocouple Pattern Grid',
    'thermocouple_pattern_group': 'Thermocouple Pattern Grid Group',
    'thermocouple_pattern_perc': 'Thermocouple Pattern Grid %',
    'thickness': 'Stack thickness [um]',
    'thickness_after': 'Thickness after [mm]',
    'thickness_after_degas': 'Thickness after degas [mm]',
    'thickness_after_dgas': 'Thickness after degassing (EE) [mm]',
    'thickness_after_dgas_system': 'Thickness after degassing (SYSTEM) [mm]',
    'thickness_after_press': 'Fraction thickness after press [um]',
    'thickness_at_eof': 'Thickness at EoF [mm]',
    'thickness_at_eof_estimated': 'Thickness at EoF (estimated) [mm]',
    'thickness_at_eol': 'Thickness at EoL (SYSTEM) [mm]',
    'thickness_at_eol_ee': 'Thickness at EoL (EE) [mm]',
    'thickness_at_eol_fa': 'Thickness at EoL (FA) [mm]',
    'thickness_at_mol': 'Thickness at MoL (EE) [mm]',
    'thickness_at_mol_cycles': 'MoL thickness measurement cycle',
    'thickness_batch': 'Measured batch final thickness [um]',
    'thickness_before': 'Thickness before [mm]',
    'thickness_before_dgas': 'Thickness before degassing [mm]',
    'thickness_before_form': 'Thickness before 1st formation [mm]',
    'thickness_before_press': 'Fraction thickness before press [um]',
    'thickness_change': 'Thickness change [mm]',
    'thickness_change_at_eof_ee': 'Thickness change at EoF (EE) [%]',
    'thickness_change_at_eol': 'Thickness change at EoL (SYSTEM) [%]',
    'thickness_change_at_eol_ee': 'Thickness change at EoL (EE) [%]',
    'thickness_change_at_mol': 'Thickness change at MoL (EE) [%]',
    'thickness_final': 'Final Thickness [um]',
    'thickness_foil': 'Foil thickness [um]',
    'thickness_gas_delta_fa': 'Thickness delta with/without gas (FA) [mm]',
    'thickness_initial': 'Initial Thickness [um]',
    'thickness_load': 'Estimated load thickness [um]',
    'thickness_of_the_stack': 'Thickness of the stack [mm]',
    'thickness_stack_fa': 'Thickness of stack (FA) [mm]',
    'thickness_with_laminate': 'Thickness with laminate [mm]',
    'thickness_without_gas_fa': 'Thickness without gas (FA) [mm]',
    'time': 'Time [min]',
    'time_mass': 'Time/Mass [h/kg]',
    'timestamp': 'Timestamp',
    'tin_p_avg': 'Tin [%] - Average',
    'tin_p_std': 'Tin [%] - STD',
    'token': 'Token',
    'total_am_a': 'Total AM [g]',
    'total_am_p': 'Total AM [%]',
    'total_cycles': 'Total Cycles',
    'total_mass': 'Total mass [mg]',
    'total_produced_amount': 'Total Produced Amount [m]',
    'total_solvent': 'Total solvent [ml]',
    'total_solvent2': 'solvent 2 [ml]',
    'total_volume': 'Total volume [ml]',
    'total_wet_process_yield': 'Yield: Total, Wet process [%]',
    'total_yield_per_am': 'Yield: Total per AM [m/gr]',
    'totaltime': 'NW API: totaltime',
    'traceback': 'Traceback',
    'turbi_actual_date': 'TURBISCAN, Date Actual',
    'turbi_dilution': 'TURBISCAN, Dilution',
    'turbi_dilution_bsmin_bsmax': 'TURBISCAN, Dilution BSmin-BSmax [%]',
    'turbi_dilution_start': 'TURBISCAN, Start of Dilution [hour]',
    'turbi_dilution_tmax_end_date': 'TURBISCAN, Dilution Tmax End Date [%]',
    'turbi_end_date': 'TURBISCAN, Date End',
    'turbi_event': 'TURBISCAN, Event',
    'turbi_operator': 'TURBISCAN, Operator',
    'turbi_planned_date': 'TURBISCAN, Date Planned',
    'turbi_temp': 'TURBISCAN, Temperature [°C]',
    'turbi_tsi': 'TURBISCAN, TSI [%]',
    'type': 'Step type',
    'type_name': 'Material type name',
    'uncycled_area_grid': 'Uncycled Area Grid',
    'uncycled_area_group': 'Uncycled Area Grid Group',
    'uncycled_area_perc': 'Uncycled Area Grid %',
    'uniformity_md': 'Uniformity MD [%]',
    'uniformity_td': 'Uniformity TD [%]',
    'unique_key': 'Unique Key',
    'unit': 'Unit',
    'unit_id': 'Unit Id',
    'update_time': 'Update Time',
    'update_time_aux_ocv': 'Update Time Aux Ocv',
    'update_time_cc': 'Update Time Cc',
    'update_time_ocv': 'Update Time Ocv',
    'update_time_pulses': 'Update Time Pulses',
    'update_time_r': 'Update Time R',
    'update_time_t': 'Update Time T',
    'updated_by': 'Updated by',
    'updated_on': 'Updated on',
    'uploaded_file': 'Uploaded File',
    'uploaded_file_data': 'Uploaded File Data',
    'url': 'URL',
    'user_id': 'User Id',
    'user_manual': 'User manual',
    'user_name': 'User Name',
    'uts': 'UTS [MPa]',
    'v': 'V',
    'v_abs': 'V Abs',
    'v_after': 'V after [V]',
    'v_applied': 'V applied [V]',
    'v_before': 'V before [V]',
    'v_drop': 'V drop [V]',
    'v_end': 'Voltage at pulse end [V]',
    'v_lower': 'Default LOWER V cut-off',
    'v_max': 'V Max',
    'v_min': 'V Min',
    'v_rest1_end': 'Voltage at rest1 end [V]',
    'v_rest1_start': 'Voltage at rest1 start [V]',
    'v_rest2_end': 'Voltage at rest2 end [V]',
    'v_rest2_start': 'Voltage at rest2 start [V]',
    'v_rest_before_chg': 'V Rest Before Chg',
    'v_rest_before_dchg': 'V Rest Before Dchg',
    'v_start': 'Voltage at pulse start [V]',
    'v_upper': 'Default UPPER V cut-off',
    'vacuum': 'Vacuum',
    'vacuum_oven_temp': 'Vacuum oven temperature [C]',
    'vacuum_oven_time': 'Vacuum oven time [hr]',
    'vacuum_sealing_machine': 'Vacuum sealing machine',
    'vacuum_sealing_temp': 'Vacuum sealing temp [°C]',
    'vacuum_sealing_time': 'Vacuum sealing time [sec]',
    'valid': 'Valid',
    'valid_cell': 'Valid cell',
    'value': 'Value',
    'view_order': 'Order in view',
    'views': 'Views',
    'viscosity_file': 'Viscosity file',
    'viscosity_file_data': 'Viscosity file data',
    'vmax': 'Vmax',
    'vmin': 'Vmin',
    'voids': 'SEM: Voids',
    'voids_grid': 'Voids Grid',
    'voids_grid_group': 'Voids Grid Group',
    'voids_grid_perc': 'Voids Grid %',
    'voltage': 'NW API: voltage',
    'volume': 'Volume [ml]',
    'volume_at_eof_estimated': 'Volume at EoF (estimated) [L]',
    'waived_by': 'Waiver by',
    'waiver': 'Waiver',
    'warranty_expiration': 'Warranty expiration date',
    'wash_solvent': 'PL Wash solvent',
    'wash_solvent_requested': 'PL Requested wash solvent',
    'wasted_sheets': 'Wasted sheets',
    'weight': 'Fraction weight [mg]',
    'weight_a_fill_b_dgas': 'Weight after filling before degassing [g]',
    'weight_after': 'Weight after [g]',
    'weight_after_dgas': 'Weight after degassing [g]',
    'weight_after_sealing': 'Weight after sealing [g]',
    'weight_before': 'Weight before [g]',
    'weight_before_dgas': 'Weight before degassing [g]',
    'weight_before_filling': 'Weight before filling [g]',
    'weight_change': 'Weight change [g]',
    'weight_change_after_dgas': 'Weight change after degassing [g]',
    'weight_stack': 'Weight of stack w/out pouch [g]',
    'welding_angle': 'Welding angle [degrees]',
    'wet': 'Visual: wetness',
    'wf_id': 'Workflow id',
    'wf_params': 'Params id',
    'white_precip': 'SEM: White precipitation',
    'worker_center': 'Worker center',
    'workflow': 'Workflow',
    'workflow_file': 'Workflow file',
    'workflow_id': 'Workflow id',
    'workflow_name': 'Workflow name',
    'workstatus': 'NW API: workstatus',
    'wrinkling_grid': 'Wrinkling Grid',
    'wrinkling_grid_group': 'Wrinkling Grid Group',
    'wrinkling_grid_perc': 'Wrinkling Grid %',
    'xrd_amorphous': 'XRD - amorphous amount [%]',
    'xrd_link': 'XRD link',
    'xrd_oxide': 'XRD - oxide amount [%]',
    'xrd_size': 'XRD - crystallite size 1 [nm]',
    'xrd_size2': 'XRD - crystallite size 2 [nm]',
    'yield_analysis_observation_comment': 'Defective cells observation',
    'z_abs': 'Z Abs',
    'z_im': 'Z Im',
    'z_re': 'Z Re',
    'zero_voltage_on': 'NW API Zero voltage on',
}

# Label and its Column in web2py
# This is static to avoid mysql queries
# TODO PER TABLE
LABEL_TO_COLUMN = {
    'Anode batch': 'a_batch_id',
    'A Chg': 'a_chg',
    'A Dchg': 'a_dchg',
    'resulting batch (A)': 'a_el_batch',
    'Anode fraction': 'a_fraction_id',
    'Anode load': 'a_load',
    'Anode load (max)': 'a_load_max',
    'Anode load (min)': 'a_load_min',
    'ACR before formation @1KHz [mOhm]': 'ac_resistance',
    'ACR after degassing @1KHz [mOhm]': 'ac_resistance_after_dg',
    'ACR after 1st cycle @1KHz [mOhm]': 'ac_resistance_after_form',
    'ACR after full formation @1KHz [mOhm]': 'ac_resistance_after_form2',
    'ACR before degassing @1KHz [mOhm]': 'ac_resistance_before_dg',
    'ACR after EOL @1KHz [mOhm]': 'ac_resistance_eol',
    'Accepted by': 'accepted_by',
    'Accepted on': 'accepted_on',
    'ACR (system) after 500 cycles [mOhm]': 'acr_system_after_500',
    'ACR (system) after degassing [mOhm]': 'acr_system_after_dgas',
    'ACR (system) after EoL [mOhm]': 'acr_system_after_eol',
    'ACR (system) after filling [mOhm]': 'acr_system_after_filling',
    'ACR (system) after formation with pressure [mOhm]': 'acr_system_after_form_wp',
    'ACR (system) after HC Before DG w/o pressure [mOhm]': 'acr_system_after_hc_b4_dgas_wop',
    'ACR (system) after HC before DG w/ pressure [mOhm]': 'acr_system_after_hc_b4_dgas_wp',
    'ACR (system) after press [mOhm]': 'acr_system_after_press',
    'Actual Disperser Speed [RPM]': 'act_disperser_speed',
    'Actual Planetary Speed [RPM]': 'act_planetary_speed',
    'Actual Temperature [C]': 'act_temperature',
    'Actual Time [min]': 'act_time',
    'Actual Vacuum': 'act_vacuum',
    'Weight [gr]': 'act_weight',
    'Action': 'action',
    'Active': 'active',
    'Active material 1': 'active1',
    'AM1 [g]': 'active1_a',
    'AM1 [%]': 'active1_p',
    'AM1 [% of AM]': 'active1_pp',
    'Active material 2': 'active2',
    'AM2 [g]': 'active2_a',
    'AM2 [%]': 'active2_p',
    'AM2 [% of AM]': 'active2_pp',
    'Active material 3': 'active3',
    'AM3 [g]': 'active3_a',
    'AM3 [%]': 'active3_p',
    'AM3 [% of AM]': 'active3_pp',
    'Active material 4': 'active4',
    'AM4 [g]': 'active4_a',
    'AM4 [%]': 'active4_p',
    'AM4 [% of AM]': 'active4_pp',
    'Active material 5': 'active5',
    'AM5 [g]': 'active5_a',
    'AM5 [%]': 'active5_p',
    'AM5 [% of AM]': 'active5_pp',
    'Active6 material': 'active6',
    'AM6 [g]': 'active6_a',
    'Active7 material': 'active7',
    'AM7 [g]': 'active7_a',
    'Actual Load [mg/cm2]': 'actual_load',
    'Additive 1': 'additive1',
    'Additive 1 [g]': 'additive1_a',
    'Additive 1 amount [g]': 'additive1_amount',
    'Additive 1 [%]': 'additive1_p',
    'Additive 1 [% in stock sol.]': 'additive1_pp',
    'Additive #1 [wt.%]': 'additive1_q',
    'Additive 2': 'additive2',
    'Additive 2 [g]': 'additive2_a',
    'Additive 2 amount [g]': 'additive2_amount',
    'Additive 2 [%]': 'additive2_p',
    'Additive 2 [% in stock sol.]': 'additive2_pp',
    'Additive #2 [wt.%]': 'additive2_q',
    'Additive 3': 'additive3',
    'Additive 3 [g]': 'additive3_a',
    'Additive 3 amount [g]': 'additive3_amount',
    'Additive 3 [%]': 'additive3_p',
    'Additive 3 [% in stock sol.]': 'additive3_pp',
    'Additive #3 [wt.%]': 'additive3_q',
    'Additive #4': 'additive4',
    'Additive #4 [wt.%]': 'additive4_q',
    'Additive #4': 'additive5',
    'Additive #4 [wt.%]': 'additive5_q',
    'Additive in CNT solution [g]': 'additive_in_cnt_a',
    'Additive in CNT solution [%]': 'additive_in_cnt_p',
    'Additives': 'additives',
    'SEM: Adhesion': 'adhesion',
    'Advanced Python condition': 'advanced_condition',
    'SEM: Agglomeration': 'agglomeration',
    '1st alert before [days]': 'alert1_days',
    '2nd alert before/reminder every [days]': 'alert2_days',
    'E-mail comment': 'alert_comment',
    'Alert sent on cycles#': 'alert_cycles',
    'Alert ID': 'alert_id',
    'Alert value': 'alert_value',
    'Alerts triggered': 'alerts_triggered',
    'Batch AM': 'am',
    'AM mass [mg]': 'am_mass',
    'A.M. full name': 'am_name',
    'A.M. percent': 'am_percent',
    'SEM: Amorphousness': 'amorphousness',
    'Amount [ml]': 'amount',
    'Anode AM': 'anode_am',
    'Anode AM mass (effective) [mg]': 'anode_am_mass',
    'Anode areal capacity [mAh/cm2]': 'anode_areal_capacity',
    'Anode batch': 'anode_batch',
    'A slurry batch': 'anode_batch_id',
    'Anode calculated capacity [mAh]': 'anode_calculated_cap',
    'Anode capacity / interface [mAh]': 'anode_capacity',
    'Anode total capacity [mAh]': 'anode_capacity_total',
    'Analyzed electrode': 'anode_cathode',
    'Anode cutter': 'anode_cutter',
    'A electrode batch': 'anode_el_batch_id',
    'Anode foil': 'anode_foil',
    'Anode foil mass [mg]': 'anode_foil_mass',
    'Anode foil mass (override) [mg]': 'anode_foil_mass_override',
    'Anode': 'anode_id',
    'Anode load  [mg/cm2]': 'anode_load',
    'Anode load (uncorrected for drying) [mg/cm2]': 'anode_load_uncorrected',
    'Anode press': 'anode_press',
    'Anode coated sides': 'anode_sides',
    'Anode  tab interval [mm]': 'anode_tab_interval',
    'Anode tab type': 'anode_tab_type',
    '# of anode tabs': 'anode_tabs_no',
    'Anode theoretic capacity [mAh/g]': 'anode_theoretic_cap',
    'Initial anode thickness [um]': 'anode_thickness',
    'Anode total mass [mg]': 'anode_total_mass',
    'Anode batch type': 'anode_type',
    'Initial anode weight [mg]': 'anode_weight',
    '# of anodes left after planning': 'anodes_left',
    '# of anodes per pouch': 'anodes_no',
    'Total # of anodes': 'anodes_total',
    'Area': 'area',
    'Coated area [cm^2]': 'area_coated',
    'Coated area on weighing [cm^2]': 'area_coated_on_weighing',
    'Area density [kg/m2]': 'area_density',
    'Total Area [cm^2]': 'area_total',
    'Areal Capacity [mAh/cm2]': 'areal_capacity',
    'Area corretion factor': 'areal_correction_factor',
    'Assembled by': 'assembled_by',
    'Assembled on': 'assembled_on',
    'Assembly remarks': 'assembly_remarks',
    'Assembly request comment': 'assembly_request_comment',
    'User assigned id': 'assigned',
    'Assigned remarks': 'assigned_remarks',
    'Assignment': 'assignment',
    'Attachment': 'attachment',
    'Automatic results processing': 'auto_update',
    'Auxa Ocv Drop Chg': 'auxa_ocv_drop_chg',
    'Auxa Ocv Drop Dchg': 'auxa_ocv_drop_dchg',
    'Auxa V Max': 'auxa_v_max',
    'Auxa V Min': 'auxa_v_min',
    'Auxc Ocv Drop Chg': 'auxc_ocv_drop_chg',
    'Auxc Ocv Drop Dchg': 'auxc_ocv_drop_dchg',
    'Auxc V Max': 'auxc_v_max',
    'Auxc V Min': 'auxc_v_min',
    'NW API: auxtemp': 'auxtemp',
    'NW API: auxvol': 'auxvol',
    'Available in GB': 'available',
    'Available in GB after planning': 'available_after_plan',
    'Available amount [g]': 'available_amount',
    'Available GB+outside': 'available_outside',
    'Default Average voltage for grav. calc. [V]': 'average_v',
    'Average specific energy input [kWh/kg]': 'avg_energy',
    'Average electrode weight [mg]': 'avg_thickness_weight',
    'Bar [um]': 'bar',
    'Barcode': 'barcode',
    'Batch': 'batch',
    'Batch AM': 'batch_am',
    'Batch capacity for given load [mAh/gr]': 'batch_capacity',
    'Source batch ID': 'batch_id',
    'Source batch name': 'batch_name',
    'Batch number': 'batch_number',
    'Source batch table': 'batch_table',
    'Assembly battery batch': 'battery_batch_id',
    'Beads [%]': 'beads_p',
    'Beads size [mm]': 'beads_size',
    'Slurry volume before calibration [liter]': 'before_calib_volume',
    'BET [m2/gr]': 'bet',
    'BET link': 'bet_link',
    'BIA A batch': 'bia_a_batch_id',
    'BIA C batch': 'bia_c_batch_id',
    'BIA cell': 'bia_cell_id',
    'BIC cell': 'bic_cell_id',
    'Binder 1': 'binder',
    'Binder 1': 'binder1',
    'Binder 1 [g]': 'binder1_a',
    'Binder 1 [%]': 'binder1_p',
    'Binder 1 [% in stock sol.]': 'binder1_pp',
    'Binder 2': 'binder2',
    'Binder 2 [g]': 'binder2_a',
    'Binder 2 [%]': 'binder2_p',
    'Binder 2 [% in stock sol.]': 'binder2_pp',
    'Binder 3': 'binder3',
    'Binder 3 [g]': 'binder3_a',
    'Binder 3 [%]': 'binder3_p',
    'Binder 3 [% in stock sol.]': 'binder3_pp',
    'Binder 4': 'binder4',
    'Binder 4 [g]': 'binder4_a',
    'Binder 4 [%]': 'binder4_p',
    'Binder 4 [% in stock sol.]': 'binder4_pp',
    'Binder 1 [g]': 'binder_a',
    'Binder Density [gr/ml] (1.15 - 1.27)': 'binder_density',
    'Binder 1 [%%]': 'binder_p',
    'Binder pH (8.8 - 9.5)': 'binder_ph',
    'Binder 1 [%% in stock sol.]': 'binder_pp',
    'Binder Solid [%] (15 - 16)': 'binder_solids',
    'Biologic': 'biologic',
    'SEM: Black chunks': 'black_chunks',
    'SEM: Black layer': 'black_layer',
    'SEM: Black precipitation': 'black_precip',
    'Browser': 'browser',
    'Bumps Grid': 'bumps_grid',
    'Bumps Grid Group': 'bumps_grid_group',
    'Bumps Grid %': 'bumps_grid_perc',
    'Visual: Bumps on foil': 'bumps_on_foil',
    '1C capacity [mAh]': 'c',
    'C:A capacity ratio': 'c_a_ratio',
    'Batch description': 'c_batch_descr',
    'Cathode batch': 'c_batch_id',
    'C Batch type': 'c_batch_type',
    'C Chg': 'c_chg',
    'C Dchg': 'c_dchg',
    'resulting batch (C)': 'c_el_batch',
    'Cathode fraction': 'c_fraction_id',
    'Gap [µm]': 'c_gap',
    'Gap 2nd side [µm]': 'c_gap2',
    'IR [%]': 'c_ir',
    'IR air supply [RPM]': 'c_ir_air_supply',
    'IR exhaust fan [RPM]': 'c_ir_exhaust_fan',
    'Cathode load': 'c_load',
    'Cathode load (max)': 'c_load_max',
    'Cathode load (min)': 'c_load_min',
    'Master break [%]': 'c_master_break',
    'Master tension [%]': 'c_master_tension',
    'Oven 1 [C]': 'c_oven1',
    'Oven 1 air supply [RPM]': 'c_oven1_air_supply',
    'Oven 1 circulation fan [RPM]': 'c_oven1_circ_fan',
    'Oven 1 exhaust fan [RPM]': 'c_oven1_exhaust_fan',
    'Oven 2 [C]': 'c_oven2',
    'Oven 2 air supply [RPM]': 'c_oven2_air_supply',
    'Oven 2 circulation fan [RPM]': 'c_oven2_circ_fan',
    'Oven 2 exhaust fan [RPM]': 'c_oven2_exhaust_fan',
    'Default % of 1C cap. limit': 'c_percent',
    'Pump speed [RPM]': 'c_pump_speed',
    'C-rate #1 Average voltage [V]': 'c_rate1_average_voltage',
    'C-rate #1 Average capacity [mAh]': 'c_rate1_cap_avg',
    'C-rate #1 Last capacity [mAh]': 'c_rate1_cap_last',
    'C-rate #1 Last capacity / Calc. [%]': 'c_rate1_cap_last_to_calc',
    'C-rate #1 Last capacity / Cap. Det. [%]': 'c_rate1_cap_last_to_cap_det',
    'C-rate #1 Average capacity [mAh/g]': 'c_rate1_capg_avg',
    'C-rate #1 Last capacity [mAh/g]': 'c_rate1_capg_last',
    'C-rate #1 Average CC cap Ratio [%]': 'c_rate1_cc_ratio_cap_avg',
    'C-rate #1 Average CC time Ratio [%]': 'c_rate1_cc_ratio_time_avg',
    'C-rate #1 Average C.E. [%]': 'c_rate1_ce_avg',
    'C-rate #1 CHG current [C]': 'c_rate1_current',
    'C-rate #1 Energy CHG [mWh]': 'c_rate1_engy_chg',
    'C-rate #1 Energy DCHG [mWh]': 'c_rate1_engy_dchg',
    'C-rate #1 Energy eff. [%]': 'c_rate1_engy_eff',
    'C-rate #1 Grav. Energy density FF1 [Wh/kg]': 'c_rate1_engy_grav_ff1',
    'C-rate #1 Grav. Energy density FF2 [Wh/kg]': 'c_rate1_engy_grav_ff2',
    'C-rate #1 Minimal voltage [V]': 'c_rate1_min_voltage',
    'C-rate #2 Average voltage [V]': 'c_rate2_average_voltage',
    'C-rate #2 Average capacity [mAh]': 'c_rate2_cap_avg',
    'C-rate #2 Last capacity [mAh]': 'c_rate2_cap_last',
    'C-rate #2 Last capacity / Calc. [%]': 'c_rate2_cap_last_to_calc',
    'C-rate #2 Last capacity / Cap. Det. [%]': 'c_rate2_cap_last_to_cap_det',
    'C-rate #2 Average capacity [mAh/g]': 'c_rate2_capg_avg',
    'C-rate #2 Last capacity [mAh/g]': 'c_rate2_capg_last',
    'C-rate #2 Average CC cap Ratio [%]': 'c_rate2_cc_ratio_cap_avg',
    'C-rate #2 Average CC time Ratio [%]': 'c_rate2_cc_ratio_time_avg',
    'C-rate #2 CC time Slope [%/cycle]': 'c_rate2_cc_time_slope',
    'C-rate #2 CC time Slope R^2': 'c_rate2_cc_time_slope_r2',
    'C-rate #2 Average C.E. [%]': 'c_rate2_ce_avg',
    'C-rate #2 CHG current [C]': 'c_rate2_current',
    'C-rate #2 Energy CHG [mWh]': 'c_rate2_engy_chg',
    'C-rate #2 Energy DCHG [mWh]': 'c_rate2_engy_dchg',
    'C-rate #2 Energy eff. [%]': 'c_rate2_engy_eff',
    'C-rate #2 Grav. Energy density FF1 [Wh/kg]': 'c_rate2_engy_grav_ff1',
    'C-rate #2 Grav. Energy density FF2 [Wh/kg]': 'c_rate2_engy_grav_ff2',
    'C-rate #2 Minimal voltage [V]': 'c_rate2_min_voltage',
    'C-rate #3 Average voltage [V]': 'c_rate3_average_voltage',
    'C-rate #3 Average capacity [mAh]': 'c_rate3_cap_avg',
    'C-rate #3 Last capacity [mAh]': 'c_rate3_cap_last',
    'C-rate #3 Last capacity / Calc. [%]': 'c_rate3_cap_last_to_calc',
    'C-rate #3 Last capacity / Cap. Det. [%]': 'c_rate3_cap_last_to_cap_det',
    'C-rate #3 Average capacity [mAh/g]': 'c_rate3_capg_avg',
    'C-rate #3 Last capacity [mAh/g]': 'c_rate3_capg_last',
    'C-rate #3 Average CC cap Ratio [%]': 'c_rate3_cc_ratio_cap_avg',
    'C-rate #3 Average CC time Ratio [%]': 'c_rate3_cc_ratio_time_avg',
    'C-rate #3 CC time Slope [%/cycle]': 'c_rate3_cc_time_slope',
    'C-rate #3 CC time Slope R^2': 'c_rate3_cc_time_slope_r2',
    'C-rate #3 Average C.E. [%]': 'c_rate3_ce_avg',
    'C-rate #3 CHG current [C]': 'c_rate3_current',
    'C-rate #3 Energy CHG [mWh]': 'c_rate3_engy_chg',
    'C-rate #3 Energy DCHG [mWh]': 'c_rate3_engy_dchg',
    'C-rate #3 Energy eff. [%]': 'c_rate3_engy_eff',
    'C-rate #3 Grav. Energy density FF1 [Wh/kg]': 'c_rate3_engy_grav_ff1',
    'C-rate #3 Grav. Energy density FF2 [Wh/kg]': 'c_rate3_engy_grav_ff2',
    'C-rate #3 Minimal voltage [V]': 'c_rate3_min_voltage',
    'C-rate #4 Average voltage [V]': 'c_rate4_average_voltage',
    'C-rate #4 Average capacity [mAh]': 'c_rate4_cap_avg',
    'C-rate #4 Last capacity [mAh]': 'c_rate4_cap_last',
    'C-rate #4 Last capacity / Calc. [%]': 'c_rate4_cap_last_to_calc',
    'C-rate #4 Last capacity / Cap. Det. [%]': 'c_rate4_cap_last_to_cap_det',
    'C-rate #4 Average capacity [mAh/g]': 'c_rate4_capg_avg',
    'C-rate #4 Last capacity [mAh/g]': 'c_rate4_capg_last',
    'C-rate #4 Average CC cap Ratio [%]': 'c_rate4_cc_ratio_cap_avg',
    'C-rate #4 Average CC time Ratio [%]': 'c_rate4_cc_ratio_time_avg',
    'C-rate #4 Average C.E. [%]': 'c_rate4_ce_avg',
    'C-rate #4 CHG current [C]': 'c_rate4_current',
    'C-rate #4 Energy CHG [mWh]': 'c_rate4_engy_chg',
    'C-rate #4 Energy DCHG [mWh]': 'c_rate4_engy_dchg',
    'C-rate #4 Energy eff. [%]': 'c_rate4_engy_eff',
    'C-rate #4 Grav. Energy density FF1 [Wh/kg]': 'c_rate4_engy_grav_ff1',
    'C-rate #4 Grav. Energy density FF2 [Wh/kg]': 'c_rate4_engy_grav_ff2',
    'C-rate #4 Minimal voltage [V]': 'c_rate4_min_voltage',
    'Default Ratio of reference 1C [%]': 'c_ratio',
    'Reference 1C [mAh]': 'c_ref',
    '~~~ [mAh]': 'c_ref1',
    '1C reference column / Default Reference 1C [mAh]': 'c_reference',
    'Requested Length [m]': 'c_requested_length',
    'Requested Load [mg/cm2]': 'c_requested_load',
    'Shim thickness [um]': 'c_shim_thickness',
    'Web speed [m/min]': 'c_web_speed',
    'Web Tension [N]': 'c_web_tension',
    'Coating width [cm]': 'c_width',
    'Contact Angle, Date Actual': 'ca_actual_date',
    'Contact Angle, AVG [°]': 'ca_avg',
    'Contact Angle, Cage': 'ca_cage',
    'Contact Angle, Event': 'ca_event',
    'Contact Angle, Operator': 'ca_operator',
    'Contact Angle, Date Planned': 'ca_planned_date',
    'Contact Angle, STD [mN/m]': 'ca_std',
    'Yield [%]': 'calc_yield',
    'Calculated electrode active area [cm2]': 'calculated_active_area',
    'Calculated cell capacity [mAh]': 'calculated_cap',
    'File attachment': 'calculator_file',
    'Calendering gap [um]': 'calendaring_gap',
    'Calendering speed [m/min]': 'calendaring_speed',
    'Calendering temperature [°C]': 'calendaring_temp',
    'Yield: Calender process [%]': 'calender_process_yield',
    'Calendering IR [%]': 'calendering_ir',
    'Calendering IR Time [sec]': 'calendering_ir_time',
    'Calendering: porosimeter file': 'calendering_porosimeter',
    'Calendering: Press [%]': 'calendering_press',
    'Calendering pressure [kN]': 'calendering_pressure',
    'Time for 1st calibration [minutes]': 'calibration_time1',
    'Time for 2nd calibration [minutes]': 'calibration_time2',
    'Time for 3rd calibration [minutes]': 'calibration_time3',
    'Time for 4th calibration [minutes]': 'calibration_time4',
    '1C Capacity 1st Discharge [mAh]': 'cap_1st_dchg_1c',
    '5C Capacity 1st Discharge [mAh]': 'cap_1st_dchg_5c',
    'Cap Chg': 'cap_chg',
    'Cap Dchg': 'cap_dchg',
    'Cap. Det. Average voltage [V]': 'cap_det_average_voltage',
    'Cap. Det. Capacity discharge [mAh]': 'cap_det_cap_dchg',
    'Cap. Det. CC ratio [%]': 'cap_det_cc_ratio',
    'Cap. Det. C.E [%]': 'cap_det_ce',
    'Cap. Det. actual current [C]': 'cap_det_current',
    'Cap. Det. Discharge / Anode load [mAh/mg*cm2]': 'cap_det_dchg_per_a_load',
    'Cap. Det. Discharge / Calc. capacity [%]': 'cap_det_dchg_to_calc',
    'Cap. Det. Discharge / Form. last discharge [%]': 'cap_det_dchg_to_form_last',
    'Cap. Det. Energy efficiency [%]': 'cap_det_engy_eff',
    'Cap. Det. Grav. Energy density FF1 [Wh/kg]': 'cap_det_engy_gravimetric_ff1',
    'Cap. Det. Grav. Energy density FF2 [Wh/kg]': 'cap_det_engy_gravimetric_ff2',
    'Cap. Det. Energy discharge [mWh]': 'cap_det_engy_last_dchg',
    'Cap. Det. Energy / Form. last energy [%]': 'cap_det_engy_to_01c',
    'Cap. Det. Volumetric Energy density [Wh/L]': 'cap_det_engy_volumetric',
    'Use for capacity eval.': 'cap_evaluation',
    'Cap type': 'cap_type',
    'Capacity': 'capacity',
    'Case type': 'case_type',
    'Catalog number': 'catalog_number',
    'Category': 'category',
    'Cathode Additives': 'cathode_additives',
    'Cathode AM': 'cathode_am',
    'Cathode AM mass (effective) [mg]': 'cathode_am_mass',
    'Cathode A.M. percent': 'cathode_am_percent',
    'Cathode areal capacity [mAh/cm2]': 'cathode_areal_capacity',
    'Cathode batch': 'cathode_batch',
    'Cathode Batch comments': 'cathode_batch_comments',
    'C slurry batch': 'cathode_batch_id',
    'Cathode Binder': 'cathode_binder',
    'Cathode calculated capacity [mAh]': 'cathode_calculated_cap',
    'Cathode capacity / interface [mAh]': 'cathode_capacity',
    'Cathode CNTs': 'cathode_cnts',
    'Cathode Conductive additive': 'cathode_condactive',
    'Cathode cutter': 'cathode_cutter',
    'Cathode density [gr/cm^3]': 'cathode_density',
    'C electrode batch': 'cathode_el_batch_id',
    'Cathode foil': 'cathode_foil',
    'Cathode foil mass [mg]': 'cathode_foil_mass',
    'Cathode foil mass (override) [mg]': 'cathode_foil_mass_override',
    'Cathode': 'cathode_id',
    'Cathode load [mg/cm2]': 'cathode_load',
    'Cathode press': 'cathode_press',
    'Cathode coated sides': 'cathode_sides',
    'Cathode  tab interval [mm]': 'cathode_tab_interval',
    'Cathode tab type': 'cathode_tab_type',
    '# of cathode tabs': 'cathode_tabs_no',
    'Cathode theoretic capacity [mAh/g]': 'cathode_theoretic_cap',
    'Cathode thickness [um]': 'cathode_thickness',
    'Cathode total mass [mg]': 'cathode_total_mass',
    'Cathode batch type': 'cathode_type',
    'Initial cathode weight [mg]': 'cathode_weight',
    '# of cathodes left after planning': 'cathodes_left',
    '# of cathodes per pouch': 'cathodes_no',
    'Total # of cathodes': 'cathodes_total',
    'Pulse CC ratio is 100%': 'cc_100',
    'Cc Cap Ratio': 'cc_cap_ratio',
    'Cc Ratio': 'cc_ratio',
    'C.E. Last [%]': 'ce',
    '1C C.E. [%]': 'ce_1c',
    '5C C.E. [%]': 'ce_5c',
    'Cell': 'cell',
    'Cell 1C [mAh]': 'cell_1c',
    'Group': 'cell_id',
    'Cell interfaces #': 'cell_interfaces',
    'Cell name': 'cell_name',
    'Cell ref. capacity [mAh]': 'cell_ref_cap',
    'Step type': 'cell_table',
    'Test ID': 'cell_test_id',
    'Cell Type': 'cell_type',
    'Cell weight [g]': 'cell_weight',
    'Cellid': 'cellid',
    'Cellname': 'cellname',
    'Celltable': 'celltable',
    'Controlled value field / Advanced condition name': 'cfield',
    'Theoretic batch capacity [mAh/g]': 'cg_theoretic',
    'Channel': 'channel',
    'Channel Per Unit': 'channel_per_unit',
    'Channel Range': 'channel_range',
    'Charge AVG': 'charge_avg',
    'Charge State': 'charge_state',
    'Charge STD': 'charge_std',
    'Check ID': 'check_id',
    'Chg': 'chg',
    'Chg capacity from coins [mAh/gr]': 'chg_capacity',
    'Chl Id': 'chl_id',
    'Entry ID': 'cid',
    'Client Ip': 'client_ip',
    'CNT in solution of NMP  [g]': 'cnt_in_sol_a',
    'CNT in solution of NMP  [%]': 'cnt_in_sol_p',
    'CNT in solution of NMP  [% in stock sol.]': 'cnt_in_sol_pp',
    'CNT Solution 1 [g]': 'cnt_sol_a_1',
    'CNT Solution 2 [g]': 'cnt_sol_a_2',
    'CNT Solution 3 [g]': 'cnt_sol_a_3',
    'CNT batch name 1': 'cnt_solution_batch_1',
    'CNT batch name 2': 'cnt_solution_batch_2',
    'CNT batch name 3': 'cnt_solution_batch_3',
    'CNT batch name 4': 'cnt_solution_batch_4',
    'CNT batch name 5': 'cnt_solution_batch_5',
    'CNTs': 'cnts',
    'CNTs %': 'cnts_p',
    'COA / Supplier documentation link': 'coa',
    'COA file': 'coa_file',
    'Coated length [m]': 'coated_length',
    'Coated sides': 'coated_sides',
    'Visual: Coating lines': 'coating_lines',
    'Coating method': 'coating_method',
    'Coating min-max [mg]': 'coating_min_max',
    'Drying oven time [min]': 'coating_oven_time',
    'Yield: Coating process [%]': 'coating_process_yield',
    'Coating uniformity [%]': 'coating_uniformity',
    'Coating uniformity file': 'coating_uniformity_file',
    'Visual: Cohesion': 'cohesion',
    'Coin anode': 'coin_anode_id',
    'Batch capacity from coins [mAh/gr]': 'coin_cap',
    'Coin cathode': 'coin_cathode_id',
    'Coin comment': 'coin_comment',
    'Full coin': 'coin_fc_id',
    'Load [mg/cm2]': 'coin_load',
    'Load (uncorrected for drying) [mg/cm2]': 'coin_load_uncorrected',
    'Coins Comments': 'coins_comments',
    'Coins_link': 'coins_link',
    'Color': 'color',
    'Comment': 'comment',
    'Comments': 'comments',
    'Completed': 'completed',
    'Completed by': 'completed_by',
    'Completed on': 'completed_on',
    'Electrolyte composition': 'composition',
    'Send "Completed" email to': 'concerns',
    'Conductive additive': 'condactive',
    'Conductive additive 2': 'condactive2',
    'Conductive additive 2 [g]': 'condactive2_a',
    'Conductive additive 2 [%]': 'condactive2_p',
    'Conductive additive 2 [% in stock sol.]': 'condactive2_pp',
    'Conductive additive [g]': 'condactive_a',
    'Conductive additive [%]': 'condactive_p',
    'Conductive additive [% in stock sol.]': 'condactive_pp',
    'Conductivity [mS/cm]': 'conductivity',
    'Conductivity 1 [mS/cm]': 'conductivity1',
    'Conductivity 2 [mS/cm]': 'conductivity2',
    'Confirmed finished by': 'confirmed_finished_by',
    'Confirmed finished on': 'confirmed_finished_on',
    'Container': 'container',
    'Continuing capacity [mAh]': 'continue_cap',
    'Continuing from cycle # ': 'continue_cycle',
    'Control': 'control',
    'Core type': 'core_type',
    'Cover': 'cover',
    'Cp': 'cp',
    'SEM: Cracking': 'cracking',
    'Created by': 'created_by',
    'Created Datetime': 'created_datetime',
    'Created on': 'created_on',
    'Time': 'created_on_time',
    'NW DB: Creator': 'creator',
    'Cs': 'cs',
    'CT anode batch': 'ct_anode_batch_id',
    'CT cathode batch': 'ct_cathode_batch_id',
    'CT coin': 'ct_coin_id',
    'Entry table': 'ctable',
    'Lower range max current [mA]': 'cur_range1',
    'Higher range max current [mA]': 'cur_range2',
    'Curr Chg': 'curr_chg',
    'Curr Dchg': 'curr_dchg',
    'Pulse current [mA]': 'current',
    'Pulse current [C]': 'current_c',
    'Current range [mA]': 'current_range',
    'Pouch id': 'current_step_id',
    'Cutter': 'cutter',
    'Cutter type': 'cutter_type',
    'Cycle #': 'cycle',
    'Cycle End Seq': 'cycle_end_seq',
    'Cycle life': 'cycle_life',
    'Default cycle limit': 'cycle_limit',
    'Cycle Num': 'cycle_num',
    'Cycles': 'cycles',
    'Cycling 80%+ retention cycles': 'cycling_80_cap_cycles',
    'Cycling 86% retention cycles': 'cycling_86_cap_cycles',
    'Cycling Average voltage [V]': 'cycling_average_voltage',
    'Cycling Average voltage (trial run) [V]': 'cycling_average_voltage_trial',
    'Cycling last cycle for average': 'cycling_avg_ref_cycle',
    'Cycling Capacity 1st Discharge [mAh]': 'cycling_cap_1st_dchg',
    'Cycling Capacity 1st Discharge (trial run) [mAh]': 'cycling_cap_1st_dchg_trial',
    'Cycling Capacity cut-off [%]': 'cycling_cap_cutoff',
    'Cycling Capacity last discharge [mAh]': 'cycling_cap_last_dchg',
    'Cycling retention percent': 'cycling_cap_not_80',
    'Cycling CC cap ratio 70% [cycles]': 'cycling_cc_ratio_70cap',
    'Cycling CC time Ratio (average) [%]': 'cycling_cc_ratio_avg',
    'Cycling CC cap Ratio (average) [%]': 'cycling_cc_ratio_cap_avg',
    'Cycling CC cap Ratio drop [%/100cyc]': 'cycling_cc_ratio_cap_drop',
    'Cycling CC cap Ratio (initial) [%]': 'cycling_cc_ratio_cap_init',
    'Cycling CC cap Ratio (last) [%]': 'cycling_cc_ratio_cap_last',
    'Cycling CC time Ratio drop [%/100cyc]': 'cycling_cc_ratio_drop',
    'Cycling CC time Ratio (initial) [%]': 'cycling_cc_ratio_init',
    'Cycling CC time Ratio (last) [%]': 'cycling_cc_ratio_last',
    'Cycling C.E. last 10 cycle slope [%]': 'cycling_ce_10cycle_slope',
    'Cycling C.E. last 3 cycle drop [%]': 'cycling_ce_3cycle_drop',
    'Cycling C.E. (average) [%]': 'cycling_ce_avg',
    'Cycling C.E. drop [%/100cyc]': 'cycling_ce_drop',
    'Cycling C.E. (initial) [%]': 'cycling_ce_init',
    'Cycling C.E. (last) [%]': 'cycling_ce_last',
    'Cycling C.E. (minimal) [%]': 'cycling_ce_min',
    'Cycling IF Cumulative capacity (estim.) [Ah]': 'cycling_cumulative_cap',
    'Cycling IF Cumulative per Anode (estim.) [Ah]': 'cycling_cumulative_cap_per_a',
    'Cycling current cycle (>0 if running)': 'cycling_curr_cycle',
    'Cycling CHG current [C]': 'cycling_current',
    'Cycling CHG current [mA]': 'cycling_current_a',
    'Cycling DCHG current [C]': 'cycling_current_dchg',
    'Cycling DCHG current [mA]': 'cycling_current_dchg_a',
    'Cycling CHG current/gA [mA/g]': 'cycling_current_per_ga',
    'Cycling CHG current/gA (effective) [mA/g]': 'cycling_current_per_ga_eff',
    'Cycling CHG current/gC [mA/g]': 'cycling_current_per_gc',
    'Cycling CHG current/gC (effective) [mA/g]': 'cycling_current_per_gc_eff',
    'Cycling Discharge Δ anode [%]': 'cycling_dchg_delta_a',
    'Cycling Discharge Δ cathode [%]': 'cycling_dchg_delta_c',
    'Cycling Discharge / Anode load [mAh/mg*cm2]': 'cycling_dchg_per_a_load',
    'Cycling Discharge / gA [mAh/g]': 'cycling_dchg_per_ag',
    'Cycling Discharge / Area [mAh/cm2]': 'cycling_dchg_per_area',
    'Cycling Discharge / gC [mAh/g]': 'cycling_dchg_per_cg',
    'Cycling Discharge per electrode [mAh]': 'cycling_dchg_per_el',
    'Cycling Discharge initial slope [%drop/cycle]': 'cycling_dchg_slope_init',
    'Cycling Discharge / Calc. capacity [%]': 'cycling_dchg_to_calc',
    'Cycling Discharge / Cap. Det. discharge [%]': 'cycling_dchg_to_cap_det',
    'Cycling Discharge / Form. 1st discharge [%]': 'cycling_dchg_to_form1',
    'Cycling Discharge / Form. last discharge [%]': 'cycling_dchg_to_form_last',
    'Cycling degassing cycle': 'cycling_degassing_cycle',
    'Cycling Energy 1st discharge [mWh]': 'cycling_engy_1st_dchg',
    'Cycling Energy 1st discharge (trial run) [mWh]': 'cycling_engy_1st_dchg_trial',
    'Cycling Energy Chg drop [%/100cyc]': 'cycling_engy_chg_drop',
    'Cycling Energy Chg last [mWh]': 'cycling_engy_chg_last',
    'Cycling Energy Dchg drop [%/100cyc]': 'cycling_engy_dchg_drop',
    'Cycling Energy Dchg last [mWh]': 'cycling_engy_dchg_last',
    'Cycling Energy efficiency [%]': 'cycling_engy_eff',
    'Cycling Energy efficiency drop [%/100cyc]': 'cycling_engy_eff_drop',
    'Cycling Energy efficiency (trial run) [%]': 'cycling_engy_eff_trial',
    'Cycling Grav. Energy density [Wh/kg]': 'cycling_engy_gravimetric',
    'Cycling Grav. Energy density FF1 [Wh/kg]': 'cycling_engy_gravimetric_ff1',
    'Cycling Grav. Energy density FF1 interfaces': 'cycling_engy_gravimetric_ff1_interfaces',
    'Cycling Grav. Energy density FF1 (trial run) [Wh/kg]': 'cycling_engy_gravimetric_ff1_trial',
    'Cycling Grav. Energy density FF2 [Wh/kg]': 'cycling_engy_gravimetric_ff2',
    'Cycling Grav. Energy density FF2 (trial run) [Wh/kg]': 'cycling_engy_gravimetric_ff2_trial',
    'Cycling Energy / gA [Wh/g]': 'cycling_engy_per_ag',
    'Cycling Energy / gA [Wh/g]': 'cycling_engy_per_cg',
    'Cycling Energy per electrode [mWh]': 'cycling_engy_per_el',
    'Cycling Volumetric Energy density [Wh/L]': 'cycling_engy_volumetric',
    'Cycling first test id': 'cycling_first_test_id',
    'Cycling initial voltage [V]': 'cycling_initial_voltage',
    'Cycling Last discharge / Cap. Det. discharge [%]': 'cycling_last_dchg_to_cap_det',
    'Cycling max temperature [°C]': 'cycling_max_temp',
    'Cycling max voltage [V]': 'cycling_max_voltage',
    'Cycling max voltage 1st cycle [V]': 'cycling_max_voltage_1st',
    'Cycling max voltage diff [%]': 'cycling_max_voltage_diff',
    'Cycling min voltage [V]': 'cycling_min_voltage',
    'Cycling min voltage 1st cycle [V]': 'cycling_min_voltage_1st',
    'Cycling min voltage diff [%]': 'cycling_min_voltage_diff',
    'Cycling DCR Chg (average) [Ohm]': 'cycling_r_chg_avg',
    'Cycling DCR Chg drop [%/100cyc]': 'cycling_r_chg_drop',
    'Cycling DCR Chg (initial) [Ohm]': 'cycling_r_chg_init',
    'Cycling DCR Chg (last) [Ohm]': 'cycling_r_chg_last',
    'Cycling DCR Dchg (average) [Ohm]': 'cycling_r_dchg_avg',
    'Cycling DCR Dchg drop [%/100cyc]': 'cycling_r_dchg_drop',
    'Cycling DCR Dchg (initial) [Ohm]': 'cycling_r_dchg_init',
    'Cycling DCR Dchg (last) [Ohm]': 'cycling_r_dchg_last',
    'Cycling reference cycle': 'cycling_ref_cycle',
    'Cycling (from test) 1C capacity [mAh]': 'cycling_test_1c',
    'Cycling (from test) Target Average voltage [V]': 'cycling_test_average_v',
    'Cycling (from test) Ratio for 1C [%]': 'cycling_test_c_ratio',
    'Cycling (from test) Target Grav. energy [Wh/kg]': 'cycling_test_grav_engy',
    'Cycling (from test) Grav. energy form-factor': 'cycling_test_grav_ff',
    'Cycling total cycles': 'cycling_total_cycles',
    'Dag id': 'dag_id',
    'Date Time': 'date_time',
    'Days to next treatment': 'days_to_next_treatment',
    'Dchg': 'dchg',
    'Dcgh capacity from coins [mAh/gr]': 'dchg_capacity',
    'Defect': 'defect',
    'Defective cells notes': 'defective_cells_notes',
    'Defects: Pinholes': 'defects_pinholes',
    'Degassing request comment': 'degas_request_comment',
    'Degassing date': 'degassing_date',
    'Degassing remarks': 'degassing_remarks',
    'Fraction density [g/cm3]': 'density',
    'Density, 1 [mg/mL]': 'density_1',
    'Density, 2 [mg/mL]': 'density_2',
    'Density, 3 [mg/mL]': 'density_3',
    'Density, 4 [mg/mL]': 'density_4',
    'Density, 5 [mg/mL]': 'density_5',
    'Density, Date Actual': 'density_actual_date',
    'Fraction density after press [g/cm3]': 'density_after_press',
    'Density, AVG [mg/mL]': 'density_avg',
    'Density, Leveling': 'density_leveling',
    'Density, Operator': 'density_operator',
    'Density, Date Planned': 'density_planned_date',
    'Density, STD [mg/mL]': 'density_std',
    'Density, Zero Scales': 'density_zero_scales',
    'Description / experiment/ purpose ': 'description',
    'SEM: Detachment': 'detachment',
    'Detachment Grid': 'detachment_grid',
    'Detachment Grid Group': 'detachment_grid_group',
    'Detachment Grid %': 'detachment_grid_perc',
    'Device Type': 'dev_type',
    'Dev Uid': 'dev_uid',
    'Device': 'device',
    'Dipping time [h]': 'dipping_time',
    'Discharge AVG': 'discharge_avg',
    'Discharge STD': 'discharge_std',
    'Disperser Speed [RPM]': 'disperser_speed',
    'Display': 'display',
    'Distance From Tab': 'distance_from_tab',
    'Double peaks cycle': 'double_peaks_cycle',
    'Dq': 'dq',
    'Dq C': 'dq_c',
    'Due date': 'due_date',
    'Pulse duration [s]': 'duration',
    'Duration Chg': 'duration_chg',
    'Pulse duration (definition) [s]': 'duration_definition',
    'Dv50 target': 'dv50_target',
    'Last edit time by': 'edit_lock_by',
    'Last edit time': 'edit_lock_on',
    'Electrode subbatch name': 'el_batch',
    'Cathode electrode batch': 'el_batch_id',
    'Electrolyte type': 'el_id',
    'Load': 'el_load',
    'Electrolyte quantity 1 [ml]': 'el_quantity1',
    'Electrolyte quantity 2 [ml]': 'el_quantity2',
    'Electrode': 'electrode',
    'Final Electrode Density [gr/cm3]': 'electrode_density_final',
    'Electrode Disintegration Grid': 'electrode_disintegration_grid',
    'Electrode Disintegration Grid Group': 'electrode_disintegration_group',
    'Electrode Disintegration Grid %': 'electrode_disintegration_perc',
    'Electrode gross length [cm]': 'electrode_gross',
    'Electrode gross width [cm]': 'electrode_gross_width',
    'Electrode net length [cm]': 'electrode_net',
    'Electrode size [cm^2]': 'electrode_size',
    'Electrode weight [mg]': 'electrode_weight',
    'Electrode net width [cm]': 'electrode_width',
    'Electrolyte batch': 'electrolyte',
    'Electrolyte refill batch': 'electrolyte2',
    'Electrolyte refill comment': 'electrolyte2_comment',
    'Electrolyte refill CT batch': 'electrolyte2_ct',
    'Electrolyte refill CT subbatch': 'electrolyte2_ct_subbatch',
    'Electrolyte refill preparation date': 'electrolyte2_prepared_on',
    'Electrolyte refill quantity [ml]': 'electrolyte2_q',
    'Electrolyte refill quantity (calculated) [ml]': 'electrolyte2_q_calc',
    'Electrolyte refill quantity (loss ratio) [%]': 'electrolyte2_q_calc_delta',
    'Electrolyte refill type': 'electrolyte2_type',
    'Electrolyte batch': 'electrolyte_batch',
    'Electrolyte filled by': 'electrolyte_by',
    'Electrolyte CT batch': 'electrolyte_ct',
    'Electrolyte CT subbatch': 'electrolyte_ct_subbatch',
    'Electrolyte Decomposition Grid': 'electrolyte_decomposition_grid',
    'Electrolyte Decomposition Grid Group': 'electrolyte_decomposition_grid_group',
    'Electrolyte Decomposition Grid %': 'electrolyte_decomposition_grid_perc',
    'Electrolyte density [g/ml]': 'electrolyte_density',
    'Electrolyte filled on': 'electrolyte_on',
    'Electrolyte preparation date': 'electrolyte_prepared_on',
    'Electrolyte quantity [ml]': 'electrolyte_q',
    'Electrolyte quantity (calculated) [ml]': 'electrolyte_q_calc',
    'Electrolyte quantity (loss ratio) [%]': 'electrolyte_q_calc_delta',
    'Electrolyte quantity (TOTAL) [ml]': 'electrolyte_q_total',
    'Electrolyte salt': 'electrolyte_salt',
    'Electrolyte subbatch': 'electrolyte_subbatch',
    'Electrolyte type': 'electrolyte_type',
    'Empty Foil weight [mg]': 'empty_foil_weight',
    'End Seq': 'end_seq',
    'End Time': 'end_time',
    'NW API: energy': 'energy',
    'Enforce constant maintenance interval': 'enforce_constant_interval',
    '1C Energy 1st discharge [mWh]': 'engy_1st_dchg_1c',
    '5C Energy 1st discharge [mWh]': 'engy_1st_dchg_5c',
    'Engy Chg': 'engy_chg',
    'Engy Dchg': 'engy_dchg',
    '1C Energy efficiency [%]': 'engy_eff_1c',
    '5C Energy efficiency [%]': 'engy_eff_5c',
    'Environment humidity [rH%]': 'environment_humidity',
    'Environment temperature [°C]': 'environment_temp',
    'EoL Average voltage [V]': 'eol_average_voltage',
    'EoL Capacity discharge [mAh]': 'eol_cap_dchg',
    'EoL C.E [%]': 'eol_ce',
    'EoL Discharge / Calc. capacity [%]': 'eol_dchg_to_calc',
    'EoL Discharge / Cap. Det. discharge [%]': 'eol_dchg_to_cap_det',
    'EoL Energy discharge [mWh]': 'eol_engy_dchg',
    'EoL Energy efficiency [%]': 'eol_engy_eff',
    'EoL Grav. Energy density FF1 [Wh/kg]': 'eol_engy_gravimetric_ff1',
    'EoL Full range Average voltage [V]': 'eol_full_average_voltage',
    'EoL Full range Capacity discharge [mAh]': 'eol_full_cap_dchg',
    'EoL Full range C.E [%]': 'eol_full_ce',
    'EoL Full range Energy discharge [mWh]': 'eol_full_engy_dchg',
    'EoL Full range Energy efficiency [%]': 'eol_full_engy_eff',
    'EoL Full range Grav. Energy density FF1 [Wh/kg]': 'eol_full_engy_gravimetric_ff1',
    'EUCAR Value (0-7)': 'eucar_value',
    'Pouch': 'eve_pouch_id',
    'Event type': 'event_type',
    'Exception': 'exception',
    'Excess of electrolyte [ml]': 'excess_of_electrolyte',
    'Experiments': 'experiments',
    'Explosion': 'explosion',
    'Extra electrolyte [ml]': 'extra_electrolyte',
    'SEM: Adhesion': 'fa_adhesion',
    'SEM: Agglomeration': 'fa_agglomeration',
    'FA: Anode swelling [%]': 'fa_anode_swelling',
    'FA: Anode thickness [um]': 'fa_anode_thickness',
    'FA: Anode weight [mg]': 'fa_anode_weight',
    'FA: Anode weight change [%]': 'fa_anode_weight_change',
    'SEM: Cracking': 'fa_cracking',
    'SEM: Detachment': 'fa_detachment',
    'FA EOF due date': 'fa_eof_date',
    'FA experiment': 'fa_experiment',
    'SEM: Homogeneity': 'fa_homogeneity',
    'FA link': 'fa_link',
    'FA Report Due Date': 'fa_report_due_date',
    'FA Report': 'fa_report_link',
    'FA request': 'fa_request',
    'FA state of life': 'fa_state',
    'FA Status': 'fa_status',
    'SEM: Thickness [um]': 'fa_thickness',
    'Requested characterization': 'fa_type',
    'SEM: Voids': 'fa_voids',
    'File attachment': 'file_attachment',
    'File Path': 'file_path',
    'Filepath': 'filepath',
    'Polymer/ ceramic fillers': 'fillers',
    'Filling request comment': 'filling_request_comment',
    'Filter type': 'filter_type',
    'Filtration end time': 'filtration_end_time',
    'Filtration method': 'filtration_method',
    'Filtration pressure [Bar]': 'filtration_pressure',
    'Final Dv10 [um]': 'final_dv10',
    'Final Dv50 [um]': 'final_dv50',
    'Final Dv90 [um]': 'final_dv90',
    'Actual solid % measured': 'final_solid_perc',
    'Final Viscosity [cP]': 'final_viscosity',
    'Finish Time': 'finish_time',
    'Finished': 'finished',
    'Finished on': 'finished_on',
    'Finished processing': 'finished_processing',
    'First Name': 'first_name',
    'FirstID': 'firstid',
    'Flame': 'flame',
    'Experiments Flow': 'flow',
    'Foil': 'foil',
    'Foil mass [mg]': 'foil_mass',
    'Foil weight [mg]': 'foil_weight',
    'For development': 'for_development',
    'For testing': 'for_testing',
    'Formation 1st cycle Average voltage [V]': 'form1_average_voltage',
    'Formation 1st cycle Average voltage delta [V]': 'form1_average_voltage_delta',
    'Formation 1st cycle Capacity charge  [mAh]': 'form1_cap_chg',
    'Formation 1st cycle Capacity cut-off [%]': 'form1_cap_cutoff',
    'Formation 1st cycle Capacity discharge  [mAh]': 'form1_cap_dchg',
    'Formation 1st cycle C.E. [%]': 'form1_ce',
    'Formation 1st cycle Charge duration [hours]': 'form1_chg_duration',
    'Formation 1st cycle Charge / gA [mAh/g]': 'form1_chg_per_ag',
    'Formation 1st cycle Charge / gC [mAh/g]': 'form1_chg_per_cg',
    'Formation 1st cycle Charge / calc. capacity [%]': 'form1_chg_to_calc',
    'Formation 1st cycle Actual current [C]': 'form1_current',
    'Formation 1st cycle Discharge / gA [mAh/g]': 'form1_dchg_per_ag',
    'Formation 1st cycle Discharge / gC [mAh/g]': 'form1_dchg_per_cg',
    'Formation 1st cycle Discharge / calc. capacity [%]': 'form1_dchg_to_calc',
    'Formation 1st cycle Energy discharge [mWh]': 'form1_engy_dchg',
    'Formation 1st cycle Energy efficiency [%]': 'form1_engy_eff',
    'Formation 1st cycle Energy / gA [Wh/g]': 'form1_engy_per_ag',
    'Formation 1st cycle Energy / gC [Wh/g]': 'form1_engy_per_cg',
    'Formation 1st cycle min voltage [V]': 'form1_min_voltage',
    'Formation 1st cycle Delithiation end OCV drop [V]': 'form1_ocv_drop_chg',
    'Formation 1st cycle Rest time [min]': 'form1_rest_time',
    'Formation 1st cycle Voltage rise after rest [V]': 'form1_rest_voltage_rise',
    'Formation 1st cycle Voltage after rest [V]': 'form1_voltage_after_rest',
    'Formation 1st cycle Voltage before rest [V]': 'form1_voltage_before_rest',
    'Formation 2nd cycle Discharge capacity [mAh]': 'form2_cap_dchg',
    'Formation 2nd cycle C.E. [%]': 'form2_ce',
    'Formation 3rd cycle Discharge capacity [mAh]': 'form3_cap_dchg',
    'Formation 3rd cycle C.E. [%]': 'form3_ce',
    'Formation 4th cycle Discharge capacity [mAh]': 'form4_cap_dchg',
    'Formation 4th cycle C.E. [%]': 'form4_ce',
    'Form factor': 'form_factor',
    'Formation Last cycle Average voltage [V]': 'form_last_average_voltage',
    'Formation Last cycle Capacity cut-off [%]': 'form_last_cap_cutoff',
    'Formation Last cycle Capacity discharge [mAh]': 'form_last_cap_dchg',
    'Formation Last cycle CC ratio [%]': 'form_last_cc_ratio',
    'Formation Last cycle CC ratio (first) [%]': 'form_last_cc_ratio_first',
    'Formation Last cycle C.E. [%]': 'form_last_ce',
    'Formation Last cycle Charge / 1st discharge [%]': 'form_last_chg_to_form1',
    'Formation Last cycle Actual current [C]': 'form_last_current',
    'Formation Last cycle Discharge / gA [mAh/g]': 'form_last_dchg_per_ag',
    'Formation Last cycle Discharge / Area [mAh/cm2]': 'form_last_dchg_per_area',
    'Formation Last cycle Discharge / gC [mAh/g]': 'form_last_dchg_per_cg',
    'Formation Last cycle Discharge / Calc. capacity [%]': 'form_last_dchg_to_calc',
    'Formation Last cycle Discharge / 1st discharge [%]': 'form_last_dchg_to_form1',
    'Formation Last cycle Discharge / 2nd discharge [%]': 'form_last_dchg_to_form2',
    'Formation Last cycle Energy discharge [mWh]': 'form_last_engy_dchg',
    'Formation Last cycle Energy efficiency [%]': 'form_last_engy_eff',
    'Formation Last cycle Grav. Energy density [Wh/kg]': 'form_last_engy_gravimetric',
    'Formation Last cycle Grav. Energy density FF1 [Wh/kg]': 'form_last_engy_gravimetric_ff1',
    'Formation Last cycle Grav. Energy density FF2 [Wh/kg]': 'form_last_engy_gravimetric_ff2',
    'Formation Last cycle Energy / gA [Wh/g]': 'form_last_engy_per_ag',
    'Formation Last cycle Energy / gC [Wh/g]': 'form_last_engy_per_cg',
    'Formation Last cycle Volumetric Energy density [Wh/L]': 'form_last_engy_volumetric',
    'Formation duration [hours]': 'formation_duration',
    'Formation initial voltage [V]': 'formation_initial_voltage',
    'Formation last voltage [V]': 'formation_last_voltage',
    'Formation last voltage (first) [V]': 'formation_last_voltage_first',
    'Formation max temperature [°C]': 'formation_max_temp',
    'Formation max voltage [V]': 'formation_max_voltage',
    'Formation min voltage [V]': 'formation_min_voltage',
    'Formation procedure': 'formation_procedure',
    'Formation start date': 'formation_start_date',
    'Formulation': 'formulation',
    'Load [mg/cm2]': 'fraction_load',
    'Load (uncorrected for drying) [mg/cm2]': 'fraction_load_uncorrected',
    'Fraction max weight [mg]': 'fraction_max',
    'Fraction min weight [mg]': 'fraction_min',
    'Fractions link': 'fractions_link',
    'Freq': 'freq',
    'Frequency sweep file': 'freq_sweep_file',
    'Frequency': 'frequency',
    'FTIR QC': 'ftir_qc',
    'Full cycles': 'full_cycles',
    'Full catalog name': 'full_name',
    'Full Url': 'full_url',
    'Gen': 'gen',
    'Initial glovebox voltage [V]': 'glovebox_voltage',
    'Final go/no go': 'go_or_not',
    'Electrode batch goals': 'goals',
    'Graph': 'graph',
    'Graph Group': 'graph_group',
    'Default Target Gravimetric energy [Wh/kg]': 'grav_engy',
    'Default Gravimetric energy form-factor': 'grav_ff',
    'SEM: Metallization (grey layer)': 'grey_layer',
    'Group': 'group_id',
    'Group': 'group_name',
    'Group owner': 'group_owner',
    'Key': 'hash',
    'MSDS Health Hazard Level': 'hazard_level',
    'SEM: Homogeneity': 'homogeneity',
    'SEM: Hot Spots': 'hot_spots',
    'Hot Spots Grid': 'hot_spots_grid',
    'Hot Spots Grid Group': 'hot_spots_grid_group',
    'Hot Spots Grid %': 'hot_spots_grid_perc',
    'I': 'i',
    'I Abs': 'i_abs',
    'I Avg': 'i_avg',
    'I Range': 'i_range',
    'ICP main impurities': 'icp_impurities',
    'ICP link': 'icp_link',
    'ICP - purity [%]': 'icp_purity',
    'Id': 'id',
    'Impeller': 'impeller',
    'Ingredients': 'ingredients',
    'Initial SoC [%]': 'initial_soc',
    'Inputs': 'inputs',
    'Step instructions': 'instructions',
    'Intended for': 'intended_for',
    'Interface #': 'interface_num',
    'Single interface thickness [um]': 'interface_thickness',
    '# of interfaces': 'interfaces_no',
    'Invalid DB cell comment': 'invalid_cell_comment',
    'Ip': 'ip',
    'jellyroll': 'jellyroll_id',
    '# of jellyrolls requested': 'jellyroll_quantity',
    'Key': 'key_',
    'Source batch label': 'label',
    'Labels': 'labels',
    'Laminate size': 'laminate_size',
    'Last alert on': 'last_alert_on',
    'Last error time': 'last_error_time',
    'Last Name': 'last_name',
    'Last Start Date': 'last_start',
    'Last temperature seq_id': 'last_temp_seq_id',
    'Last Test Id': 'last_test_id',
    'Last test update': 'last_test_update',
    'Last treatment on': 'last_treatment_on',
    'Last Update': 'last_update',
    'LastID': 'lastid',
    'Layer thickness [um]': 'layer_tickness',
    'Leak': 'leak',
    'Link to images/video)': 'link',
    'Link updated on': 'link_updated_on',
    'Load AVG': 'load_avg',
    '1s: Load max': 'load_max_1s',
    '2s: Load max': 'load_max_2s',
    '1s: Load min': 'load_min_1s',
    '2s: Load min': 'load_min_2s',
    'Load produced [mg/cm^2]': 'load_produced',
    'Load STD': 'load_std',
    'Location name': 'location',
    'Location Updated by': 'location_updated_by',
    'Location Updated on': 'location_updated_on',
    'Locked': 'locked',
    'LOD, 1 [%]': 'lod_1',
    'LOD, 2 [%]': 'lod_2',
    'LOD, 3 [%]': 'lod_3',
    'LOD, 4 [%]': 'lod_4',
    'LOD, 5 [%]': 'lod_5',
    'LOD, Date Actual': 'lod_actual_date',
    'LOD, AVG [%]': 'lod_avg',
    'LOD, Event': 'lod_event',
    'LOD, Leveling': 'lod_leveling',
    'LOD, Measurement Temperature [°C]': 'lod_measurement_temp',
    'LOD, Operator': 'lod_operator',
    'LOD, Date Planned': 'lod_planned_date',
    'LOD, STD [%]': 'lod_std',
    'LOD, Zero Scales': 'lod_zero_scales',
    'Loop Num': 'loop_num',
    'Machine': 'machine',
    'Maintenance procedure description': 'maintenance',
    'Manufacturer batch number': 'manuf_batch_number',
    'Manufacturer': 'manufacturer',
    'Solvent 1': 'material1',
    'Solvent 1 amount [g]': 'material1_amount',
    'Solvent 2': 'material2',
    'Solvent 2 amount [g]': 'material2_amount',
    'Solvent 3': 'material3',
    'Solvent 3 amount [g]': 'material3_amount',
    'Material': 'material_id',
    'Source materials batches': 'materials',
    'Max. alert range': 'max_alert_range',
    'Max Current [A]': 'max_current',
    'Max Force [kN]': 'max_force',
    'Max. allowed value': 'max_value',
    'Measured electrode active area [cm2]': 'measured_active_area',
    'Measured load [mg/cm^2]': 'measured_load',
    'Measured solid content': 'measured_solid_content',
    'Slurry volume after calibration [liter]': 'measured_volume',
    'Mesh size [um]': 'mesh_size',
    'Metallization Grid': 'metallization_grid',
    'Metallization Grid Group': 'metallization_grid_group',
    'Metallization Grid %': 'metallization_grid_perc',
    'MI cell': 'mi_cell_id',
    'Milling batch': 'milling_id',
    'Milling log file': 'milling_log_file',
    'Milling time [min]': 'milling_time',
    'Min. alert range': 'min_alert_range',
    'Min. allowed value': 'min_value',
    'Mixer log file': 'mixer_log_file',
    'Mixing batch': 'mixing_id',
    'Mixing link': 'mixing_link',
    'Mixing Method': 'mixing_method',
    'Model': 'model',
    'Modified Datetime': 'modified_datetime',
    'Name': 'name',
    'National ID': 'national_id',
    'Neware State': 'neware_state',
    'Next step id': 'next_step_id',
    'Next treatment on': 'next_treatment_on',
    'Next treatment on (override)': 'next_treatment_override',
    'Nickname': 'nickname',
    'Normalization capacity': 'norm_capacity',
    'Not active': 'not_active',
    'Notes': 'notes',
    'Ns': 'ns',
    'Number of Fractions': 'num_of_fractions',
    'NW DB updated on': 'nwdb_updated_on',
    'Observations': 'observations',
    'Occurred on': 'occurred_on',
    'OCV [V]': 'ocv',
    'OCV after filling [V]': 'ocv_after_assembly',
    'OCV after dgas [V]': 'ocv_after_dgas',
    'OCV after filling [V]': 'ocv_after_filling',
    'Ocv Drop Chg': 'ocv_drop_chg',
    'Ocv Drop Dchg': 'ocv_drop_dchg',
    'Offline': 'offline',
    'One-sided': 'one_sided',
    'Operator': 'operator',
    'Operators': 'operators',
    'Material origin': 'origin',
    'Plan owner': 'owned_by',
    'A pilot slurry batch': 'p_anode_batch_id',
    'Pilot slurry batch': 'p_batch_id',
    'C pilot slurry batch': 'p_cathode_batch_id',
    'Pilot slurry batch': 'p_slurry_batch_id',
    'Parameter1 name': 'parameter1_name',
    'Parameter1 value': 'parameter1_value',
    'Parameter2 description': 'parameter2_desc',
    'Parameter1 name': 'parameter2_name',
    'Parameter2 value': 'parameter2_value',
    'Parameter3 description': 'parameter3_desc',
    'Parameter3 name': 'parameter3_name',
    'Parameter3 value': 'parameter3_value',
    'Parameter4 name': 'parameter4_name',
    'Parameter4 value': 'parameter4_value',
    'Parameter5 name': 'parameter5_name',
    'Parameter5 value': 'parameter5_value',
    'Parameter description': 'parameter_desc',
    'Parameter value': 'parameter_value',
    'Parameters': 'parameters',
    'Parent experiment': 'parent_experiment',
    'Part Number': 'part_number',
    'Analytical performance': 'performance',
    'Performance remarks': 'performance_remarks',
    'Analysis date': 'performed_on',
    'Phase': 'phase',
    'Pilot A slurry batch': 'pilot_a_batch_id',
    'Pilot C slurry batch': 'pilot_c_batch_id',
    'Pouch': 'pilot_pouch_id',
    'Pilot QC pass': 'pilot_qc_pass',
    'PL 1st charge [mAh]': 'pl_cap_1st_chg',
    'PL Cathode': 'pl_cathode_id',
    'PL 1st charge / total anode cap. [%]': 'pl_chg_to_total_a_cap',
    'PL current [mA]': 'pl_current',
    'PL current [C]': 'pl_current_c',
    'PL duration [min]': 'pl_duration',
    'PL Electrolyte CT batch': 'pl_electrolyte_ct',
    'PL Electrolyte quantity [ml]': 'pl_electrolyte_q',
    'PL Electrolyte type': 'pl_electrolyte_type',
    'PL Li weight [mg]': 'pl_li_weight',
    'PL Requested electrolyte quantity [ul]': 'pl_req_electrolyte_q',
    'PL Requested electrolyte subbatch': 'pl_req_electrolyte_subbatch',
    'PL rest duration [min]': 'pl_rest_duration',
    'PL Voltage before test [V]': 'pl_v_before_test',
    'PL Voltage at rest end [V]': 'pl_v_rest_end',
    'PL Voltage at rest start [V]': 'pl_v_rest_start',
    'Plan for date': 'plan_date',
    'Group': 'plan_id',
    'Pouch plan IDs': 'plan_ids',
    'Planetary Speed [RPM]': 'planetary_speed',
    'NW DB: PN': 'pn',
    'Polymer 1': 'polymer1',
    'Polymer 1 amount [g]': 'polymer1_amount',
    'Polymer 2': 'polymer2',
    'Polymer 2 amount [g]': 'polymer2_amount',
    'Polymer 3': 'polymer3',
    'Polymer 3 amount [g]': 'polymer3_amount',
    'Port': 'port',
    'Pouch': 'pouch_id',
    '# of pouches planned': 'pouch_number',
    'Related pouch plans': 'pouch_plans',
    '# of pouches requested': 'pouch_quantity',
    'Pouches link': 'pouches_link',
    'Power': 'power',
    'Pulse power [mW/kg]': 'power_grav',
    'Preferrable supplier': 'pref_supplier',
    'Preparation': 'preparation',
    'Preparation comments': 'preparation_comments',
    'Preparation remark': 'preparation_remark',
    'Prepared amount [g]': 'prepared_amount',
    'Prepared by': 'prepared_by',
    'Prepared on': 'prepared_on',
    'Press': 'press',
    '1s: Electrode press': 'press_1s',
    '2s: Electrode press': 'press_2s',
    'Pressure on 1st cycle [bar]': 'pressure_1st_cycle',
    'Pressure after degassing [bar]': 'pressure_after_dgas',
    'Pressure image link': 'pressure_image_link',
    'Pressure test sensitivity': 'pressure_test_sensitivity',
    'Priority': 'priority',
    'Proc Num': 'proc_num',
    'Procedure link': 'procedure_link',
    'Procedure Segments': 'procedure_name',
    'Process protocol file': 'process_protocol',
    'Processing': 'processing',
    'Processing protocol': 'processing_file',
    'Production remarks': 'production_remarks',
    'Production time [minutes]': 'production_time',
    'Protected': 'protected',
    'PSD, 120sec Data Quality': 'psd_120sec_data_quality',
    'PSD, 120sec dv90': 'psd_120sec_dv90',
    'PSD, 300sec Data Quality': 'psd_300sec_data_quality',
    'PSD, 300sec dv90': 'psd_300sec_dv90',
    'PSD, 30sec Data Quality': 'psd_30sec_data_quality',
    'PSD, 30sec dv90': 'psd_30sec_dv90',
    'PSD, 60sec Data Quality': 'psd_60sec_data_quality',
    'PSD, 60sec dv90': 'psd_60sec_dv90',
    'PSD, Date Actual': 'psd_actual_date',
    'PSD, As is Data Quality': 'psd_as_is_data_quality',
    'PSD, As is dv90': 'psd_as_is_dv90',
    'PSD, Background': 'psd_background',
    'PSD, Data Quality': 'psd_data_quality',
    'PSD, Dispersant': 'psd_dispersant',
    'PSD volume [Dv10 - nm]': 'psd_dv10',
    'PSD volume [Dv50 - nm]': 'psd_dv50',
    'PSD, DV50, Average [µm]': 'psd_dv50_avg',
    'PSD, DV50, STD [µm]': 'psd_dv50_std',
    'PSD volume [Dv90 - nm]': 'psd_dv90',
    'PSD, Event': 'psd_event',
    'PSD file': 'psd_file',
    'PSD link': 'psd_link',
    'PSD, Operator': 'psd_operator',
    'PSD, Particle Type': 'psd_particle_type',
    'PSD, Date Planned': 'psd_planned_date',
    'PSD, sample 1 obstruction [%]': 'psd_sample_obstruction_1',
    'PSD, sample 2 obstruction [%]': 'psd_sample_obstruction_2',
    'PSD, sample 3 obstruction [%]': 'psd_sample_obstruction_3',
    'PSD, sample 4 obstruction [%]': 'psd_sample_obstruction_4',
    'PSD, Sample Preparation': 'psd_sample_preparation',
    'PSD, System_Alignment': 'psd_system_alignment',
    'PSD, Typical Graph': 'psd_typical_graph',
    'Pulse ID': 'pulse_id',
    'Pulse #': 'pulse_n',
    'Pulse # in cycle': 'pulse_n_in_cycle',
    'Pulse # in series': 'pulse_n_in_series',
    'Experiment remarks': 'purpose',
    'Q Charge': 'q_charge',
    'Q Charge Discharge': 'q_charge_discharge',
    'Q Discharge': 'q_discharge',
    'Q Q0': 'q_q0',
    'Q Q0 C': 'q_q0_c',
    'QA finish date': 'qa_date',
    'QA report file': 'qa_file',
    'QA status': 'qa_status',
    'QC': 'qc',
    'QC: Actual tension [Mpa]': 'qc_actual_tension',
    'QC: Ca*': 'qc_ca',
    'QC directive': 'qc_directive',
    'QC: Final thickness [um]': 'qc_final_thickness',
    'QC: G*': 'qc_g',
    'QC: Initial thickness [um]': 'qc_initial_thickness',
    'QC: Q [ml/min]': 'qc_q',
    'QC status': 'qc_status',
    'QC: µ [Pa*s]': 'qc_u',
    'QC: Wet thickness [um]': 'qc_wet_thickness',
    'QC: ƴ [1/s]': 'qc_y',
    'Quantity produced': 'quantity',
    '1s: Electrode quantity': 'quantity_1s',
    '2s: Electrode quantity': 'quantity_2s',
    'Quantity outside GB': 'quantity_outside',
    'Quantity units': 'quantity_units',
    'Queries': 'queries',
    'Pulse Internal resistance [mΩ]': 'r',
    'R Chg': 'r_chg',
    'R Chg End': 'r_chg_end',
    'R Dchg': 'r_dchg',
    'R Dchg End': 'r_dchg_end',
    'Pulse Internal resistance [mΩ/interface]': 'r_per_el',
    'Range Cycles': 'range_cycles',
    'Range Id': 'range_id',
    'Range': 'range_values',
    'Ratio': 'ratio',
    'Recipe file': 'recipe_file',
    'Recipe file (Image)': 'recipe_file_image',
    'Actual recipe scan link': 'recipe_scan_link',
    'Default reference cycle I': 'ref_cycle1',
    'Default reference cycle II': 'ref_cycle2',
    'Default reference cycle III': 'ref_cycle3',
    'Last reference cycle': 'ref_cycle_last',
    'Reference slurry': 'reference_slurry',
    'Reference Table': 'reference_table',
    'Related experiment': 'related',
    'NW API: relativetime': 'relativetime',
    'Test remark': 'remark',
    'Remarks': 'remarks',
    'Repeats [#]': 'repeats',
    'Report Due Date': 'report_due_date',
    'Report Link': 'report_link',
    'Send report to': 'report_to',
    'Reported/performed by': 'reported_by',
    'Representative cell': 'representative',
    'Requested electrolyte quantity @ degassing [ml]': 'req_electrolyte2_q',
    'Requested electrolyte subbatch @ degassing': 'req_electrolyte2_subbatch',
    'Requested filling date': 'req_electrolyte_date',
    'Requested electrolyte quantity @ filling [ml]': 'req_electrolyte_q',
    'Requested electrolyte subbatch @ filling': 'req_electrolyte_subbatch',
    'Resistance [mOhm]': 'resistance',
    'Responsible': 'responsible',
    'Responsible Groups': 'responsible_groups',
    'Results': 'result',
    'Retention [%]': 'retention',
    'Rheology Slurry flow sweep file': 'rheology2_flow_sweep_file',
    'Rheology Slurry frequency sweep file': 'rheology2_freq_sweep_file',
    'Rheology, Date Actual': 'rheology_actual_date',
    'Rheology, Air Flow': 'rheology_air_flow',
    'Rheology, Amplitude': 'rheology_amplitude',
    'Rheology, Amplitude DataFrame': 'rheology_amplitude_df',
    'Rheology, Amplitude Range': 'rheology_amplitude_range',
    'Rheology, Cross Over': 'rheology_cross_over',
    'Rheology, cross-over values': 'rheology_cross_over_values',
    'Rheology, Enviroment Temperature': 'rheology_enviroment_temperature',
    'Rheology, Event': 'rheology_event',
    'Rheology, Flow': 'rheology_flow',
    'Rheology, Flow DataFrame': 'rheology_flow_df',
    'Rheology, Flow Range': 'rheology_flow_range',
    'Rheology Stock flow sweep file': 'rheology_flow_sweep_file',
    'Rheology, Fluid Behavior': 'rheology_fluid_behavior',
    'Rheology Stock frequency sweep file': 'rheology_freq_sweep_file',
    'Rheology, Frequency': 'rheology_frequency',
    'Rheology, Frequency DataFrame': 'rheology_frequency_df',
    'Rheology, Frequency Range': 'rheology_frequency_range',
    'Rheology, Geometry': 'rheology_geometry',
    'Rheology, Geometry Friction [µN∙m/(rad/s)]': 'rheology_geometry_friction',
    'Rheology, Geometry Inertia [µN∙m∙s^2]': 'rheology_geometry_inertia',
    'Rheology, go to zero gap?': 'rheology_go_to_zero_gap',
    'Rheology, Instrument Inertia [µN∙m∙s^2]': 'rheology_instrument_inertia',
    'Rheology link': 'rheology_link',
    'Rheology, Operator': 'rheology_operator',
    'Rheology, Date Planned': 'rheology_planned_date',
    'Rheology, Pressure [Bar]': 'rheology_pressure',
    'Rheology, Rotational Mapping': 'rheology_rotational_mapping',
    'Rheology, Sample Amount [mL]': 'rheology_sample_amount',
    'Rheology, Selected Strain [%]': 'rheology_selected_strain',
    'Rheology, Solvent': 'rheology_solvent',
    'Rheology, Solvent Trap': 'rheology_solvent_trap',
    'Rheology, Delta Viscosity @1[1/sec] [Pa/sec]': 'rheology_viscosity_at_1',
    'Rheology, Viscosity at @251[1/sec] [Pa/sec]': 'rheology_viscosity_at_251',
    'Rheology, Zero Force': 'rheology_zero_force',
    'Rheology, Zero Gap': 'rheology_zero_gap',
    'Robin Links': 'robin_links',
    'Route card file': 'route_card_file',
    'Run instruction': 'run_instruction',
    'Run Instruction (saved)': 'run_instruction_saved',
    'NW DB: Runtime [h]': 'run_time',
    'Running(Σ)': 'running',
    'Runtime [h]': 'runtime',
    'Salt': 'salt',
    'Salt #1': 'salt1',
    'Salt #1 [M]': 'salt1_q',
    'Salt #2': 'salt2',
    'Salt #2 [M]': 'salt2_q',
    'Salt #3': 'salt3',
    'Salt #3 [M]': 'salt3_q',
    'Salt #4': 'salt4',
    'Salt #4 [M]': 'salt4_q',
    'Salt #5': 'salt5',
    'Salt #5 [M]': 'salt5_q',
    'Salts': 'salts',
    'Sample': 'sample',
    'Sample bank': 'sample_bank',
    'Sampling date': 'sample_date',
    'Sample location': 'sample_location',
    'Sample Taken?': 'sample_taken',
    'Scale': 'scale',
    'Scheduled on': 'scheduled_on',
    'Scope': 'scope',
    'Score': 'score',
    'Step scrap remarks': 'scrap_remarks',
    'SDA slurry batch': 'sd_a_batch_id',
    'SDA slurry label': 'sd_a_batch_label',
    'SD slurry batch': 'sd_batch_id',
    'SD slurry label': 'sd_batch_label',
    'SDC slurry batch': 'sd_c_batch_id',
    'SDC slurry label': 'sd_c_batch_label',
    'Secondary': 'secondary',
    'SEI formation': 'sei_formation',
    'SEM link': 'sem_link',
    'Send change alert': 'send_alert',
    'Send report on submit': 'send_report',
    'Alert sent on': 'sent_on',
    'Separator Coating Disintegration Grid': 'separator_coating_disintegration_grid',
    'Separator Coating Disintegration Grid Group': 'separator_coating_disintegration_grid_group',
    'Separator Coating Disintegration Grid %': 'separator_coating_disintegration_grid_perc',
    'Separator': 'separator_id',
    'Separator 1 length [mm]': 'separator_length_1',
    'Separator 2 length [mm]': 'separator_length_2',
    'Visual: particles on separator': 'separator_particles',
    'Series': 'series',
    'Series #': 'series_n',
    'Series # in cycle': 'series_n_in_cycle',
    'Session Data': 'session_data',
    'Shaft speed [RPM]': 'shaft_speed',
    'SEM: Shar pei': 'sharpei',
    'Sharpei Grid': 'sharpei_grid',
    'Sharpei Grid Group': 'sharpei_grid_group',
    'Sharpei Grid %': 'sharpei_grid_perc',
    'Sheet length [cm]': 'sheet_length',
    'Sheet Name': 'sheet_name',
    'Sheets number': 'sheets_number',
    'Si/Sn Ratio - Average': 'si_sn_ratio_avg',
    'Si/Sn Ratio - STD': 'si_sn_ratio_std',
    'Silicon [%] - Average': 'silicon_p_avg',
    'Silicon [%] - STD': 'silicon_p_std',
    'Similar composition batch': 'similar_composition',
    'Similar process batch': 'similar_process',
    'Slack Id': 'slack_id',
    'Sleeve length [cm]': 'sleeve_length',
    'Slope [Ω]': 'slope',
    'Slope b (constant)': 'slope_b',
    'Slope [Ω/interface]': 'slope_per_el',
    'Slope R2': 'slope_r2',
    'SU slurry batch': 'slurry_batch_id',
    'Slurry CA file': 'slurry_ca',
    'Actual Density [gr/ml] measured': 'slurry_density',
    'Target Density [gr/ml]': 'slurry_density_target',
    'Slurry ID': 'slurry_id',
    'Electrode': 'slurry_kind',
    'Slurry pH (6.9 - 7.4)': 'slurry_ph',
    'Slurry PSD file': 'slurry_psd',
    'Slurry remarks': 'slurry_remarks',
    'Slurry Sigma': 'slurry_sigma',
    'Actual solid % calculated': 'slurry_solids',
    'Slurry ST file': 'slurry_st',
    'Slurry / Stock': 'slurry_stock',
    'Slurry viscosity file': 'slurry_viscosity_file',
    'Smoke': 'smoke',
    'Pulse SoC [%]': 'soc',
    'Pulse SoC [mAh]': 'soc_mah',
    'Solid content [%]': 'solid_content',
    'Solid percent [%]': 'solid_percent',
    'Solids mass [g]': 'solids_mass',
    'Solids volume [ml]': 'solids_volume',
    'Solvent': 'solvent',
    'Solvent1 material': 'solvent1',
    'Solvent1 [g]': 'solvent1_a',
    'Solvent #1 volume ratio': 'solvent1_ratio',
    'Solvent #2': 'solvent2',
    'Solvent 2 [g]': 'solvent2_a',
    'Solvent #2 volume ratio': 'solvent2_ratio',
    'Solvent #3': 'solvent3',
    'Solvent #3 volume ratio': 'solvent3_ratio',
    'Solvent #4': 'solvent4',
    'Solvent #4 volume ratio': 'solvent4_ratio',
    'Solvent #5': 'solvent5',
    'Solvent #5 volume ratio': 'solvent5_ratio',
    'Solvent 1 [g]': 'solvent_a',
    'NMP added [ml]': 'solvent_added',
    'NMP in binder solution [ml]': 'solvent_in_binber_sol',
    'NMP in CNT solution [ml]': 'solvent_in_cnt_sol',
    'Mixing solvents': 'solvents',
    'Source materials': 'sources',
    'Sparks': 'sparks',
    'Spectrum image file': 'spectrum_file',
    'Speed [mm/s or C/s]': 'speed',
    'Surface tension, Date Actual': 'st_actual_date',
    'Surface Tension, AVG [mN/m]': 'st_avg',
    'Surface Tension, Cage': 'st_cage',
    'Surface Tension, Event': 'st_event',
    'Surface tension, Operator': 'st_operator',
    'Surface tension, Date Planned': 'st_planned_date',
    'Surface Tension, Recipe': 'st_recipe',
    'Surface Tension, Solvent': 'st_solvent',
    'Surface Tension, STD [mN/m]': 'st_std',
    'Surface Tension, Time For Fume [sec]': 'st_tff',
    'Electrode Position in Stack': 'stack_pos',
    'Stacking type': 'stacking',
    'Pouch Stacked by': 'stacking_by',
    'Stacking conditions': 'stacking_conditions',
    'Stacking package': 'stacking_type',
    'Stage name': 'stage_name',
    'Start Seq': 'start_seq',
    'Start Time': 'start_time',
    'Started by': 'started_by',
    'Started on': 'started_on',
    'State': 'state',
    'Cell state in experiments': 'state_in_experiments',
    'Status': 'status',
    'Step status code': 'status_code',
    'Status': 'status_short',
    'NW API Status updated on': 'status_updated_on',
    'Step id': 'step_id',
    'Step Index': 'step_index',
    'Step inputs': 'step_inputs',
    'Step parameters': 'step_inputs_params',
    'Step name': 'step_name',
    'Value': 'step_params',
    'Step type': 'step_type',
    'Steps': 'steps',
    'Stock viscosity file': 'stock_viscosity_file',
    'Stop after discharge': 'stop_after_dchg',
    'StoreDot SN#': 'storedot_sn',
    'SEM: Stripes': 'stripes',
    'Sub-batch': 'sub_batch',
    'Electrolyte subbatch': 'subbatch',
    'Electrolyte subbatch full': 'subbatch_full',
    'Summary link': 'summary_link',
    'Supervised by': 'supervised_by',
    'Supplier': 'supplier',
    'Supplier Density [Kg/m^2]': 'supplier_density',
    'Supplier SN#': 'supplier_sn',
    'Supplier Thickness [um]': 'supplier_thickness',
    'Supplier UTS [MPa]': 'supplier_uts',
    'Surface tension file': 'surface_tension_file',
    'Suspected leakage': 'suspected_leakage',
    'Suspected short circuit': 'suspected_short',
    'System': 'system',
    'T1 Max': 't1_max',
    'T1 Min': 't1_min',
    'T2 Max': 't2_max',
    'T2 Min': 't2_min',
    'Tab Position': 'tab_pos',
    'Tab sealing machine': 'tab_sealing_machine',
    'Tab sealing temp [°C]': 'tab_sealing_temp',
    'Tab sealing time [sec]': 'tab_sealing_time',
    'Table Name': 'table_name',
    'Target interfaces number is even': 'target_interfaces_even',
    'Taget Load [mg/cm2]': 'target_load',
    'Target slow charge energy [Wh/kg]': 'target_slow_chg_energy',
    'Target Solid content [%]': 'target_solid_content',
    'Target total capacity [Ah]': 'target_total_cap',
    'TEM link': 'tem_link',
    'Temp (initial) [C]': 'temp_initial',
    'Temp (max) [C]': 'temp_max',
    'Temp (min) [C]': 'temp_min',
    'Temp (on cell) [C]': 'temp_on_cell',
    'Temperature': 'temperature',
    'Template file': 'template_file',
    'Template ID': 'template_id',
    'Test Id': 'test_id',
    'Test Name': 'test_name',
    'Test remarks': 'test_remarks',
    'Test row: ID': 'test_row_id',
    'Standard': 'test_standard',
    'Test template': 'test_type_id',
    'Test Type Str': 'test_type_str',
    'Testid': 'testid',
    'Testname': 'testname',
    'Batch theoretic capacity [mAh/g]': 'theoretic_cap',
    'Target solid %': 'theoretical_solid_perc',
    'Thermocouple Pattern Grid': 'thermocouple_pattern_grid',
    'Thermocouple Pattern Grid Group': 'thermocouple_pattern_group',
    'Thermocouple Pattern Grid %': 'thermocouple_pattern_perc',
    'Stack thickness [um]': 'thickness',
    'Thickness after [mm]': 'thickness_after',
    'Thickness after degas [mm]': 'thickness_after_degas',
    'Thickness after degassing (EE) [mm]': 'thickness_after_dgas',
    'Thickness after degassing (SYSTEM) [mm]': 'thickness_after_dgas_system',
    'Fraction thickness after press [um]': 'thickness_after_press',
    'Thickness at EoF [mm]': 'thickness_at_eof',
    'Thickness at EoF (estimated) [mm]': 'thickness_at_eof_estimated',
    'Thickness at EoL (SYSTEM) [mm]': 'thickness_at_eol',
    'Thickness at EoL (EE) [mm]': 'thickness_at_eol_ee',
    'Thickness at EoL (FA) [mm]': 'thickness_at_eol_fa',
    'Thickness at MoL (EE) [mm]': 'thickness_at_mol',
    'MoL thickness measurement cycle': 'thickness_at_mol_cycles',
    'Measured batch final thickness [um]': 'thickness_batch',
    'Thickness before [mm]': 'thickness_before',
    'Thickness before degassing [mm]': 'thickness_before_dgas',
    'Thickness before 1st formation [mm]': 'thickness_before_form',
    'Fraction thickness before press [um]': 'thickness_before_press',
    'Thickness change [mm]': 'thickness_change',
    'Thickness change at EoF (EE) [%]': 'thickness_change_at_eof_ee',
    'Thickness change at EoL (SYSTEM) [%]': 'thickness_change_at_eol',
    'Thickness change at EoL (EE) [%]': 'thickness_change_at_eol_ee',
    'Thickness change at MoL (EE) [%]': 'thickness_change_at_mol',
    'Final Thickness [um]': 'thickness_final',
    'Foil thickness [um]': 'thickness_foil',
    'Thickness delta with/without gas (FA) [mm]': 'thickness_gas_delta_fa',
    'Initial Thickness [um]': 'thickness_initial',
    'Estimated load thickness [um]': 'thickness_load',
    'Thickness of the stack [mm]': 'thickness_of_the_stack',
    'Thickness of stack (FA) [mm]': 'thickness_stack_fa',
    'Thickness with laminate [mm]': 'thickness_with_laminate',
    'Thickness without gas (FA) [mm]': 'thickness_without_gas_fa',
    'Time [min]': 'time',
    'Time/Mass [h/kg]': 'time_mass',
    'Timestamp': 'timestamp',
    'Tin [%] - Average': 'tin_p_avg',
    'Tin [%] - STD': 'tin_p_std',
    'Token': 'token',
    'Total AM [g]': 'total_am_a',
    'Total AM [%]': 'total_am_p',
    'Total Cycles': 'total_cycles',
    'Total mass [mg]': 'total_mass',
    'Total Produced Amount [m]': 'total_produced_amount',
    'Total solvent [ml]': 'total_solvent',
    'solvent 2 [ml]': 'total_solvent2',
    'Total volume [ml]': 'total_volume',
    'Yield: Total, Wet process [%]': 'total_wet_process_yield',
    'Yield: Total per AM [m/gr]': 'total_yield_per_am',
    'NW API: totaltime': 'totaltime',
    'Traceback': 'traceback',
    'TURBISCAN, Date Actual': 'turbi_actual_date',
    'TURBISCAN, Dilution': 'turbi_dilution',
    'TURBISCAN, Dilution BSmin-BSmax [%]': 'turbi_dilution_bsmin_bsmax',
    'TURBISCAN, Start of Dilution [hour]': 'turbi_dilution_start',
    'TURBISCAN, Dilution Tmax End Date [%]': 'turbi_dilution_tmax_end_date',
    'TURBISCAN, Date End': 'turbi_end_date',
    'TURBISCAN, Event': 'turbi_event',
    'TURBISCAN, Operator': 'turbi_operator',
    'TURBISCAN, Date Planned': 'turbi_planned_date',
    'TURBISCAN, Temperature [°C]': 'turbi_temp',
    'TURBISCAN, TSI [%]': 'turbi_tsi',
    'Step type': 'type',
    'Material type name': 'type_name',
    'Uncycled Area Grid': 'uncycled_area_grid',
    'Uncycled Area Grid Group': 'uncycled_area_group',
    'Uncycled Area Grid %': 'uncycled_area_perc',
    'Uniformity MD [%]': 'uniformity_md',
    'Uniformity TD [%]': 'uniformity_td',
    'Unique Key': 'unique_key',
    'Unit': 'unit',
    'Unit Id': 'unit_id',
    'Update Time': 'update_time',
    'Update Time Aux Ocv': 'update_time_aux_ocv',
    'Update Time Cc': 'update_time_cc',
    'Update Time Ocv': 'update_time_ocv',
    'Update Time Pulses': 'update_time_pulses',
    'Update Time R': 'update_time_r',
    'Update Time T': 'update_time_t',
    'Updated by': 'updated_by',
    'Updated on': 'updated_on',
    'Uploaded File': 'uploaded_file',
    'Uploaded File Data': 'uploaded_file_data',
    'URL': 'url',
    'User Id': 'user_id',
    'User manual': 'user_manual',
    'User Name': 'user_name',
    'UTS [MPa]': 'uts',
    'V': 'v',
    'V Abs': 'v_abs',
    'V after [V]': 'v_after',
    'V applied [V]': 'v_applied',
    'V before [V]': 'v_before',
    'V drop [V]': 'v_drop',
    'Voltage at pulse end [V]': 'v_end',
    'Default LOWER V cut-off': 'v_lower',
    'V Max': 'v_max',
    'V Min': 'v_min',
    'Voltage at rest1 end [V]': 'v_rest1_end',
    'Voltage at rest1 start [V]': 'v_rest1_start',
    'Voltage at rest2 end [V]': 'v_rest2_end',
    'Voltage at rest2 start [V]': 'v_rest2_start',
    'V Rest Before Chg': 'v_rest_before_chg',
    'V Rest Before Dchg': 'v_rest_before_dchg',
    'Voltage at pulse start [V]': 'v_start',
    'Default UPPER V cut-off': 'v_upper',
    'Vacuum': 'vacuum',
    'Vacuum oven temperature [C]': 'vacuum_oven_temp',
    'Vacuum oven time [hr]': 'vacuum_oven_time',
    'Vacuum sealing machine': 'vacuum_sealing_machine',
    'Vacuum sealing temp [°C]': 'vacuum_sealing_temp',
    'Vacuum sealing time [sec]': 'vacuum_sealing_time',
    'Valid': 'valid',
    'Valid cell': 'valid_cell',
    'Value': 'value',
    'Order in view': 'view_order',
    'Views': 'views',
    'Viscosity file': 'viscosity_file',
    'Viscosity file data': 'viscosity_file_data',
    'Vmax': 'vmax',
    'Vmin': 'vmin',
    'SEM: Voids': 'voids',
    'Voids Grid': 'voids_grid',
    'Voids Grid Group': 'voids_grid_group',
    'Voids Grid %': 'voids_grid_perc',
    'NW API: voltage': 'voltage',
    'Volume [ml]': 'volume',
    'Volume at EoF (estimated) [L]': 'volume_at_eof_estimated',
    'Waiver by': 'waived_by',
    'Waiver': 'waiver',
    'Warranty expiration date': 'warranty_expiration',
    'PL Wash solvent': 'wash_solvent',
    'PL Requested wash solvent': 'wash_solvent_requested',
    'Wasted sheets': 'wasted_sheets',
    'Fraction weight [mg]': 'weight',
    'Weight after filling before degassing [g]': 'weight_a_fill_b_dgas',
    'Weight after [g]': 'weight_after',
    'Weight after degassing [g]': 'weight_after_dgas',
    'Weight after sealing [g]': 'weight_after_sealing',
    'Weight before [g]': 'weight_before',
    'Weight before degassing [g]': 'weight_before_dgas',
    'Weight before filling [g]': 'weight_before_filling',
    'Weight change [g]': 'weight_change',
    'Weight change after degassing [g]': 'weight_change_after_dgas',
    'Weight of stack w/out pouch [g]': 'weight_stack',
    'Welding angle [degrees]': 'welding_angle',
    'Visual: wetness': 'wet',
    'Workflow id': 'wf_id',
    'Params id': 'wf_params',
    'SEM: White precipitation': 'white_precip',
    'Worker center': 'worker_center',
    'Workflow': 'workflow',
    'Workflow file': 'workflow_file',
    'Workflow id': 'workflow_id',
    'Workflow name': 'workflow_name',
    'NW API: workstatus': 'workstatus',
    'Wrinkling Grid': 'wrinkling_grid',
    'Wrinkling Grid Group': 'wrinkling_grid_group',
    'Wrinkling Grid %': 'wrinkling_grid_perc',
    'XRD - amorphous amount [%]': 'xrd_amorphous',
    'XRD link': 'xrd_link',
    'XRD - oxide amount [%]': 'xrd_oxide',
    'XRD - crystallite size 1 [nm]': 'xrd_size',
    'XRD - crystallite size 2 [nm]': 'xrd_size2',
    'Defective cells observation': 'yield_analysis_observation_comment',
    'Z Abs': 'z_abs',
    'Z Im': 'z_im',
    'Z Re': 'z_re',
    'NW API Zero voltage on': 'zero_voltage_on',
}

# Place holder for prefix, suffix description (used mainly for tracker)
PREFIX_SUFFIX = dict(

)