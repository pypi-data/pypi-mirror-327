from _typeshed import Incomplete

class SparkConnectServiceStub:
    ExecutePlan: Incomplete
    AnalyzePlan: Incomplete
    Config: Incomplete
    AddArtifacts: Incomplete
    ArtifactStatus: Incomplete
    Interrupt: Incomplete
    ReattachExecute: Incomplete
    ReleaseExecute: Incomplete
    def __init__(self, channel) -> None: ...

class SparkConnectServiceServicer:
    def ExecutePlan(self, request, context) -> None: ...
    def AnalyzePlan(self, request, context) -> None: ...
    def Config(self, request, context) -> None: ...
    def AddArtifacts(self, request_iterator, context) -> None: ...
    def ArtifactStatus(self, request, context) -> None: ...
    def Interrupt(self, request, context) -> None: ...
    def ReattachExecute(self, request, context) -> None: ...
    def ReleaseExecute(self, request, context) -> None: ...

def add_SparkConnectServiceServicer_to_server(servicer, server) -> None: ...

class SparkConnectService:
    @staticmethod
    def ExecutePlan(request, target, options=(), channel_credentials: Incomplete | None = None, call_credentials: Incomplete | None = None, insecure: bool = False, compression: Incomplete | None = None, wait_for_ready: Incomplete | None = None, timeout: Incomplete | None = None, metadata: Incomplete | None = None): ...
    @staticmethod
    def AnalyzePlan(request, target, options=(), channel_credentials: Incomplete | None = None, call_credentials: Incomplete | None = None, insecure: bool = False, compression: Incomplete | None = None, wait_for_ready: Incomplete | None = None, timeout: Incomplete | None = None, metadata: Incomplete | None = None): ...
    @staticmethod
    def Config(request, target, options=(), channel_credentials: Incomplete | None = None, call_credentials: Incomplete | None = None, insecure: bool = False, compression: Incomplete | None = None, wait_for_ready: Incomplete | None = None, timeout: Incomplete | None = None, metadata: Incomplete | None = None): ...
    @staticmethod
    def AddArtifacts(request_iterator, target, options=(), channel_credentials: Incomplete | None = None, call_credentials: Incomplete | None = None, insecure: bool = False, compression: Incomplete | None = None, wait_for_ready: Incomplete | None = None, timeout: Incomplete | None = None, metadata: Incomplete | None = None): ...
    @staticmethod
    def ArtifactStatus(request, target, options=(), channel_credentials: Incomplete | None = None, call_credentials: Incomplete | None = None, insecure: bool = False, compression: Incomplete | None = None, wait_for_ready: Incomplete | None = None, timeout: Incomplete | None = None, metadata: Incomplete | None = None): ...
    @staticmethod
    def Interrupt(request, target, options=(), channel_credentials: Incomplete | None = None, call_credentials: Incomplete | None = None, insecure: bool = False, compression: Incomplete | None = None, wait_for_ready: Incomplete | None = None, timeout: Incomplete | None = None, metadata: Incomplete | None = None): ...
    @staticmethod
    def ReattachExecute(request, target, options=(), channel_credentials: Incomplete | None = None, call_credentials: Incomplete | None = None, insecure: bool = False, compression: Incomplete | None = None, wait_for_ready: Incomplete | None = None, timeout: Incomplete | None = None, metadata: Incomplete | None = None): ...
    @staticmethod
    def ReleaseExecute(request, target, options=(), channel_credentials: Incomplete | None = None, call_credentials: Incomplete | None = None, insecure: bool = False, compression: Incomplete | None = None, wait_for_ready: Incomplete | None = None, timeout: Incomplete | None = None, metadata: Incomplete | None = None): ...
