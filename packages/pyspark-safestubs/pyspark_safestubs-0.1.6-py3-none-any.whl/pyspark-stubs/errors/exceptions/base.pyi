from _typeshed import Incomplete
from pyspark.errors.utils import ErrorClassesReader as ErrorClassesReader

class PySparkException(Exception):
    error_reader: Incomplete
    message: Incomplete
    error_class: Incomplete
    message_parameters: Incomplete
    def __init__(self, message: str | None = None, error_class: str | None = None, message_parameters: dict[str, str] | None = None) -> None: ...
    def getErrorClass(self) -> str | None: ...
    def getMessageParameters(self) -> dict[str, str] | None: ...
    def getSqlState(self) -> None: ...

class AnalysisException(PySparkException): ...
class SessionNotSameException(PySparkException): ...
class TempTableAlreadyExistsException(AnalysisException): ...
class ParseException(AnalysisException): ...
class IllegalArgumentException(PySparkException): ...
class ArithmeticException(PySparkException): ...
class UnsupportedOperationException(PySparkException): ...
class ArrayIndexOutOfBoundsException(PySparkException): ...
class DateTimeException(PySparkException): ...
class NumberFormatException(IllegalArgumentException): ...
class StreamingQueryException(PySparkException): ...
class QueryExecutionException(PySparkException): ...
class PythonException(PySparkException): ...
class SparkRuntimeException(PySparkException): ...
class SparkUpgradeException(PySparkException): ...
class UnknownException(PySparkException): ...
class PySparkValueError(PySparkException, ValueError): ...
class PySparkTypeError(PySparkException, TypeError): ...
class PySparkAttributeError(PySparkException, AttributeError): ...
class PySparkRuntimeError(PySparkException, RuntimeError): ...
class PySparkAssertionError(PySparkException, AssertionError): ...
class PySparkNotImplementedError(PySparkException, NotImplementedError): ...
