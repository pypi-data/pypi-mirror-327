from _typeshed import Incomplete
from py4j.protocol import Py4JJavaError
from pyspark import SparkContext as SparkContext
from pyspark.errors.exceptions.base import AnalysisException as BaseAnalysisException, ArithmeticException as BaseArithmeticException, ArrayIndexOutOfBoundsException as BaseArrayIndexOutOfBoundsException, DateTimeException as BaseDateTimeException, IllegalArgumentException as BaseIllegalArgumentException, NumberFormatException as BaseNumberFormatException, ParseException as BaseParseException, PySparkException as PySparkException, PythonException as BasePythonException, QueryExecutionException as BaseQueryExecutionException, SparkRuntimeException as BaseSparkRuntimeException, SparkUpgradeException as BaseSparkUpgradeException, StreamingQueryException as BaseStreamingQueryException, UnknownException as BaseUnknownException, UnsupportedOperationException as BaseUnsupportedOperationException
from typing import Any, Callable, Iterator

class CapturedException(PySparkException):
    desc: Incomplete
    stackTrace: Incomplete
    cause: Incomplete
    def __init__(self, desc: str | None = None, stackTrace: str | None = None, cause: Py4JJavaError | None = None, origin: Py4JJavaError | None = None) -> None: ...
    def getErrorClass(self) -> str | None: ...
    def getMessageParameters(self) -> dict[str, str] | None: ...
    def getSqlState(self) -> str | None: ...

def convert_exception(e: Py4JJavaError) -> CapturedException: ...
def capture_sql_exception(f: Callable[..., Any]) -> Callable[..., Any]: ...
def unwrap_spark_exception() -> Iterator[Any]: ...
def install_exception_handler() -> None: ...

class AnalysisException(CapturedException, BaseAnalysisException): ...
class ParseException(AnalysisException, BaseParseException): ...
class IllegalArgumentException(CapturedException, BaseIllegalArgumentException): ...
class StreamingQueryException(CapturedException, BaseStreamingQueryException): ...
class QueryExecutionException(CapturedException, BaseQueryExecutionException): ...
class PythonException(CapturedException, BasePythonException): ...
class ArithmeticException(CapturedException, BaseArithmeticException): ...
class UnsupportedOperationException(CapturedException, BaseUnsupportedOperationException): ...
class ArrayIndexOutOfBoundsException(CapturedException, BaseArrayIndexOutOfBoundsException): ...
class DateTimeException(CapturedException, BaseDateTimeException): ...
class NumberFormatException(IllegalArgumentException, BaseNumberFormatException): ...
class SparkRuntimeException(CapturedException, BaseSparkRuntimeException): ...
class SparkUpgradeException(CapturedException, BaseSparkUpgradeException): ...
class UnknownException(CapturedException, BaseUnknownException): ...
