from pyspark.ml.base import Params as Params
from pyspark.sql import SparkSession as SparkSession
from pyspark.sql.utils import is_remote as is_remote
from typing import Any

class ParamsReadWrite(Params):
    def saveToLocal(self, path: str, *, overwrite: bool = False) -> None: ...
    @classmethod
    def loadFromLocal(cls, path: str) -> Params: ...
    def save(self, path: str, *, overwrite: bool = False) -> None: ...
    @classmethod
    def load(cls, path: str) -> Params: ...

class CoreModelReadWrite: ...

class MetaAlgorithmReadWrite(ParamsReadWrite):
    @staticmethod
    def get_uid_map(instance: Any) -> dict[str, Any]: ...
