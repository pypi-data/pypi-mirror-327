from py4j.java_gateway import JVMView, JavaObject
from typing import overload

__all__ = ['SparkConf']

class SparkConf:
    def __init__(self, loadDefaults: bool = True, _jvm: JVMView | None = None, _jconf: JavaObject | None = None) -> None: ...
    def set(self, key: str, value: str) -> SparkConf: ...
    def setIfMissing(self, key: str, value: str) -> SparkConf: ...
    def setMaster(self, value: str) -> SparkConf: ...
    def setAppName(self, value: str) -> SparkConf: ...
    def setSparkHome(self, value: str) -> SparkConf: ...
    @overload
    def setExecutorEnv(self, key: str, value: str) -> SparkConf: ...
    @overload
    def setExecutorEnv(self, *, pairs: list[tuple[str, str]]) -> SparkConf: ...
    def setAll(self, pairs: list[tuple[str, str]]) -> SparkConf: ...
    @overload
    def get(self, key: str) -> str | None: ...
    @overload
    def get(self, key: str, defaultValue: None) -> str | None: ...
    @overload
    def get(self, key: str, defaultValue: str) -> str: ...
    def getAll(self) -> list[tuple[str, str]]: ...
    def contains(self, key: str) -> bool: ...
    def toDebugString(self) -> str: ...
