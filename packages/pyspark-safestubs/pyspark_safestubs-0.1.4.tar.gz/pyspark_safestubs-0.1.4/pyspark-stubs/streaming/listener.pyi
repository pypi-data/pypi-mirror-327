from _typeshed import Incomplete
from typing import Any

__all__ = ['StreamingListener']

class StreamingListener:
    def __init__(self) -> None: ...
    def onStreamingStarted(self, streamingStarted: Any) -> None: ...
    def onReceiverStarted(self, receiverStarted: Any) -> None: ...
    def onReceiverError(self, receiverError: Any) -> None: ...
    def onReceiverStopped(self, receiverStopped: Any) -> None: ...
    def onBatchSubmitted(self, batchSubmitted: Any) -> None: ...
    def onBatchStarted(self, batchSubmitted: Any) -> None: ...
    def onBatchCompleted(self, batchCompleted: Any) -> None: ...
    def onOutputOperationStarted(self, outputOperationStarted: Any) -> None: ...
    def onOutputOperationCompleted(self, outputOperationCompleted: Any) -> None: ...
    class Java:
        implements: Incomplete
