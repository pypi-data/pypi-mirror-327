from _typeshed import Incomplete
from pandas.core.base import PandasObject
from pyspark.ml.feature import Bucketizer as Bucketizer
from pyspark.mllib.stat import KernelDensity as KernelDensity
from pyspark.pandas.config import get_option as get_option
from pyspark.pandas.missing import unsupported_function as unsupported_function
from pyspark.pandas.utils import name_like_string as name_like_string

class TopNPlotBase:
    partial: bool
    def get_top_n(self, data): ...
    def set_result_text(self, ax) -> None: ...

class SampledPlotBase:
    fraction: Incomplete
    def get_sampled(self, data): ...
    def set_result_text(self, ax) -> None: ...

class NumericPlotBase:
    @staticmethod
    def prepare_numeric_data(data): ...

class HistogramPlotBase(NumericPlotBase):
    @staticmethod
    def prepare_hist_data(data, bins): ...
    @staticmethod
    def get_bins(sdf, bins): ...
    @staticmethod
    def compute_hist(psdf, bins): ...

class BoxPlotBase:
    @staticmethod
    def compute_multicol_stats(data, colnames, whis, precision): ...
    @staticmethod
    def compute_stats(data, colname, whis, precision): ...
    @staticmethod
    def multicol_outliers(data, multicol_stats): ...
    @staticmethod
    def outliers(data, colname, lfence, ufence): ...
    @staticmethod
    def calc_multicol_whiskers(colnames, multicol_outliers): ...
    @staticmethod
    def calc_whiskers(colname, outliers): ...
    @staticmethod
    def get_fliers(colname, outliers, min_val): ...

class KdePlotBase(NumericPlotBase):
    @staticmethod
    def prepare_kde_data(data): ...
    @staticmethod
    def get_ind(sdf, ind): ...
    @staticmethod
    def compute_kde(sdf, bw_method: Incomplete | None = None, ind: Incomplete | None = None): ...

class PandasOnSparkPlotAccessor(PandasObject):
    pandas_plot_data_map: Incomplete
    data: Incomplete
    def __init__(self, data) -> None: ...
    def __call__(self, kind: str = 'line', backend: Incomplete | None = None, **kwargs): ...
    def line(self, x: Incomplete | None = None, y: Incomplete | None = None, **kwargs): ...
    def bar(self, x: Incomplete | None = None, y: Incomplete | None = None, **kwds): ...
    def barh(self, x: Incomplete | None = None, y: Incomplete | None = None, **kwargs): ...
    def box(self, **kwds): ...
    def hist(self, bins: int = 10, **kwds): ...
    def kde(self, bw_method: Incomplete | None = None, ind: Incomplete | None = None, **kwargs): ...
    density = kde
    def area(self, x: Incomplete | None = None, y: Incomplete | None = None, **kwds): ...
    def pie(self, **kwds): ...
    def scatter(self, x, y, **kwds): ...
    def hexbin(self, **kwds): ...
