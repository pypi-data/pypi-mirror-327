import socketserver
from _typeshed import Incomplete

class WriteLogToStdout(socketserver.StreamRequestHandler):
    def handle(self) -> None: ...

class LogStreamingServer:
    server: Incomplete
    serve_thread: Incomplete
    port: Incomplete
    def __init__(self) -> None: ...
    def start(self, spark_host_address: str = '') -> None: ...
    def shutdown(self) -> None: ...

class LogStreamingClientBase:
    def send(self, message: str) -> None: ...
    def close(self) -> None: ...

class LogStreamingClient(LogStreamingClientBase):
    address: Incomplete
    port: Incomplete
    timeout: Incomplete
    sock: Incomplete
    failed: bool
    def __init__(self, address: str, port: int, timeout: int = 10) -> None: ...
    def send(self, message: str) -> None: ...
    def close(self) -> None: ...
